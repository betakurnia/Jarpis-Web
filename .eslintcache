[{"E:\\Web\\JS\\React\\jarpis\\client\\src\\index.js":"1","E:\\Web\\JS\\React\\jarpis\\client\\src\\App.js":"2","E:\\Web\\JS\\React\\jarpis\\client\\src\\store.js":"3","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\index.js":"4","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\layout\\Navbar\\index.jsx":"5","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Login\\index.jsx":"6","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\color.js":"7","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\layout\\Footer\\index.jsx":"8","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\size.js":"9","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Input\\index.jsx":"10","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\PrivateRoute.jsx":"11","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Dashboard\\index.jsx":"12","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Announcment\\index.jsx":"13","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\CardAnnouncement\\index.jsx":"14","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Major\\index.jsx":"15","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\userReducer.js":"16","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\index.js":"17","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\userAction.js":"18","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\setAuthToken.js":"19","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\proxy.js":"20","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\errorReducer.js":"21","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\is-empty.js":"22","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\PrivateRouteAdmin.jsx":"23","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Register\\index.jsx":"24","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\announcementReducer.js":"25","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\announcementAction.js":"26","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\sucessReducer.js":"27","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\AnnouncementUpdate\\index.jsx":"28","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Present\\index.jsx":"29","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Pengumuman\\index.jsx":"30","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Badge\\index.jsx":"31","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Theory\\index.jsx":"32","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Exams\\index.jsx":"33","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\ExamsStudent\\index.jsx":"34","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\examAction.js":"35","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Profile\\index.jsx":"36","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\RecapitulationValue\\index.jsx":"37","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Recapitulation\\index.jsx":"38","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\RecapitulationStudent\\index.jsx":"39","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\CKEditor\\index.jsx":"40","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\helperAction.js":"41","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ButtonRed\\index.jsx":"42","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ButtonDanger\\index.jsx":"43","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Table\\index.jsx":"44","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Card\\index.jsx":"45","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\organisms\\Sections\\index.jsx":"46","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ButtonInfo\\index.jsx":"47","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ErrorSucess\\index.jsx":"48","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Create\\index.jsx":"49","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\QuestionExam\\index.jsx":"50","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\TheoryTemplate\\index.jsx":"51","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\CredentialData\\index.jsx":"52","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\EditIcon\\index.jsx":"53","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\DeleteIcon\\index.jsx":"54","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\ExamSection\\index.jsx":"55","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\TheorySection\\index.jsx":"56","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Section\\index.jsx":"57"},{"size":197,"mtime":1607606201596,"results":"58","hashOfConfig":"59"},{"size":4384,"mtime":1608906919314,"results":"60","hashOfConfig":"59"},{"size":437,"mtime":1607609459473,"results":"61","hashOfConfig":"59"},{"size":396,"mtime":1607722526773,"results":"62","hashOfConfig":"59"},{"size":15542,"mtime":1609676813619,"results":"63","hashOfConfig":"59"},{"size":5783,"mtime":1609671419186,"results":"64","hashOfConfig":"59"},{"size":305,"mtime":1609679123230,"results":"65","hashOfConfig":"59"},{"size":824,"mtime":1608905042467,"results":"66","hashOfConfig":"59"},{"size":57,"mtime":1608907817813,"results":"67","hashOfConfig":"59"},{"size":1092,"mtime":1608915502309,"results":"68","hashOfConfig":"59"},{"size":592,"mtime":1607729791233,"results":"69","hashOfConfig":"59"},{"size":1284,"mtime":1608915156183,"results":"70","hashOfConfig":"59"},{"size":853,"mtime":1609677519771,"results":"71","hashOfConfig":"59"},{"size":3793,"mtime":1609671353872,"results":"72","hashOfConfig":"59"},{"size":2013,"mtime":1609590771021,"results":"73","hashOfConfig":"59"},{"size":665,"mtime":1608914836436,"results":"74","hashOfConfig":"59"},{"size":343,"mtime":1608107259180,"results":"75","hashOfConfig":"59"},{"size":2432,"mtime":1608107332339,"results":"76","hashOfConfig":"59"},{"size":313,"mtime":1607685745328,"results":"77","hashOfConfig":"59"},{"size":65,"mtime":1608125450327,"results":"78","hashOfConfig":"59"},{"size":263,"mtime":1608914855607,"results":"79","hashOfConfig":"59"},{"size":234,"mtime":1607687543429,"results":"80","hashOfConfig":"59"},{"size":644,"mtime":1607729800135,"results":"81","hashOfConfig":"59"},{"size":9149,"mtime":1609682804622,"results":"82","hashOfConfig":"59"},{"size":357,"mtime":1608914795229,"results":"83","hashOfConfig":"59"},{"size":1589,"mtime":1608903801062,"results":"84","hashOfConfig":"59"},{"size":267,"mtime":1608914902778,"results":"85","hashOfConfig":"59"},{"size":399,"mtime":1609064140217,"results":"86","hashOfConfig":"59"},{"size":1118,"mtime":1608995825252,"results":"87","hashOfConfig":"59"},{"size":289,"mtime":1609064207499,"results":"88","hashOfConfig":"59"},{"size":1077,"mtime":1608996393733,"results":"89","hashOfConfig":"59"},{"size":5096,"mtime":1609736607884,"results":"90","hashOfConfig":"59"},{"size":6482,"mtime":1609683109670,"results":"91","hashOfConfig":"59"},{"size":4765,"mtime":1609683192828,"results":"92","hashOfConfig":"59"},{"size":1542,"mtime":1608905846992,"results":"93","hashOfConfig":"59"},{"size":2291,"mtime":1609679152824,"results":"94","hashOfConfig":"59"},{"size":4274,"mtime":1609735296821,"results":"95","hashOfConfig":"59"},{"size":4364,"mtime":1609682996386,"results":"96","hashOfConfig":"59"},{"size":4058,"mtime":1609735271421,"results":"97","hashOfConfig":"59"},{"size":4729,"mtime":1609673045811,"results":"98","hashOfConfig":"59"},{"size":557,"mtime":1608904383644,"results":"99","hashOfConfig":"59"},{"size":525,"mtime":1609671474330,"results":"100","hashOfConfig":"59"},{"size":644,"mtime":1609671458635,"results":"101","hashOfConfig":"59"},{"size":8693,"mtime":1609671426077,"results":"102","hashOfConfig":"59"},{"size":2216,"mtime":1609672761364,"results":"103","hashOfConfig":"59"},{"size":5208,"mtime":1609737468371,"results":"104","hashOfConfig":"59"},{"size":676,"mtime":1609671463344,"results":"105","hashOfConfig":"59"},{"size":866,"mtime":1609736292436,"results":"106","hashOfConfig":"59"},{"size":1383,"mtime":1609673622650,"results":"107","hashOfConfig":"59"},{"size":2052,"mtime":1609675804823,"results":"108","hashOfConfig":"59"},{"size":893,"mtime":1609148099433,"results":"109","hashOfConfig":"59"},{"size":801,"mtime":1609672945094,"results":"110","hashOfConfig":"59"},{"size":630,"mtime":1609673562444,"results":"111","hashOfConfig":"59"},{"size":645,"mtime":1609735618003,"results":"112","hashOfConfig":"59"},{"size":4870,"mtime":1609736711531,"results":"113","hashOfConfig":"59"},{"size":3603,"mtime":1609737466367,"results":"114","hashOfConfig":"59"},{"size":1367,"mtime":1609676695492,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"1sid8fm",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"118"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"118"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"118"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"118"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"118"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"E:\\Web\\JS\\React\\jarpis\\client\\src\\index.js",[],["237","238"],"E:\\Web\\JS\\React\\jarpis\\client\\src\\App.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\store.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\index.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\layout\\Navbar\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Login\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\color.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\layout\\Footer\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\size.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Input\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\PrivateRoute.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Dashboard\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Announcment\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\CardAnnouncement\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Major\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\userReducer.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\index.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\userAction.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\setAuthToken.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\proxy.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\errorReducer.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\is-empty.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\PrivateRouteAdmin.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Register\\index.jsx",["239"],"import React from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Alert from \"@material-ui/lab/alert\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport Input from \"../../atoms/Input\";\r\nimport Create from \"../../atoms/Create\";\r\nimport ErrorSucess from \"../../atoms/ErrorSucess\";\r\n\r\nimport { registerUser } from \"../../../redux/actions/userAction\";\r\nimport { clearErrorSucess } from \"../../../redux/actions/helperAction\";\r\nimport color from \"../../../utils/color\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\n\r\nimport proxy from \"../../../utils/proxy\";\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"10px 26px 10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nfunction Register({ registerUser, error, sucess, clearErrorSucess }) {\r\n  const [users, setUser] = React.useState({\r\n    role: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    nis: \"\",\r\n    age: \"\",\r\n    address: \"\",\r\n    religion: \"\",\r\n    majorId: [],\r\n    kelas: \"5fd5a57adec8b90f1f45a7de\",\r\n  });\r\n\r\n  const [majors, setMajors] = React.useState([]);\r\n\r\n  const [kelass, setClasss] = React.useState([]);\r\n\r\n  const handleChange = (e, name) => {\r\n    if (name === \"majorId\") {\r\n      if (users.majorId.includes(e.target.value)) {\r\n        users.majorId.filter((major) => {\r\n          return major !== e.target.value;\r\n        });\r\n        setUser({\r\n          ...users,\r\n        });\r\n      } else {\r\n        users.majorId.push(e.target.value);\r\n        setUser({\r\n          ...users,\r\n        });\r\n      }\r\n    } else {\r\n      users[name] = e.target.value;\r\n      setUser({ ...users });\r\n    }\r\n  };\r\n\r\n  const handleMenu = (e) => {\r\n    users[\"role\"] = e.target.value;\r\n    setUser({ ...users });\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    title: {\r\n      color: \"#404145\",\r\n      fontWeight: \"500\",\r\n    },\r\n    btn: {\r\n      marginTop: \"2rem\",\r\n    },\r\n    alert: {\r\n      marginTop: \"1.5rem\",\r\n    },\r\n    formControl: {\r\n      marginTop: \"1.5rem\",\r\n    },\r\n    formLabel: {\r\n      marginTop: \"2rem\",\r\n    },\r\n    label: {\r\n      marginTop: \"1.5rem\",\r\n      display: \"block\",\r\n      color: color.label,\r\n      fontSize: \"1rem\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    registerUser(users);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    clearErrorSucess();\r\n    axios.get(`${proxy}/api/majors/view`).then((res) => {\r\n      setMajors(res.data);\r\n    });\r\n    axios.get(`${proxy}/api/class/view`).then((res) => {\r\n      setClasss(res.data);\r\n    });\r\n  }, [clearErrorSucess]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Create title=\"Daftar ke Jarpis\">\r\n        <FormLabel component=\"legend\" className={classes.formLabel}>\r\n          <Typography variant=\"h5\" component=\"p\">\r\n            Role\r\n          </Typography>\r\n        </FormLabel>\r\n        <RadioGroup\r\n          aria-label=\"gender\"\r\n          name=\"Role\"\r\n          value={users.role}\r\n          onChange={handleMenu}\r\n          row\r\n        >\r\n          <FormControlLabel value=\"siswa\" control={<Radio />} label=\"Siswa\" />\r\n          <FormControlLabel value=\"teacher\" control={<Radio />} label=\"Guru\" />\r\n          <FormControlLabel value=\"admin\" control={<Radio />} label=\"Admin\" />\r\n        </RadioGroup>\r\n        <Input\r\n          id=\"username\"\r\n          label=\"Email / Username\"\r\n          placeholder=\"contoh: beta@gmail.com\"\r\n          handleChange={handleChange}\r\n        />\r\n        <Input\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          placeholder=\"*********\"\r\n          handleChange={handleChange}\r\n          isPassword={true}\r\n        />\r\n        <Input\r\n          id=\"name\"\r\n          label=\"Nama Lengkap\"\r\n          placeholder=\"contoh: Beta Kurnia\"\r\n          handleChange={handleChange}\r\n        />\r\n\r\n        {users.role === \"teacher\" && (\r\n          <React.Fragment>\r\n            <FormControl component=\"fieldset\" className={classes.formControl}>\r\n              <FormLabel component=\"legend\">Mata Pelajaran</FormLabel>\r\n              <FormGroup row>\r\n                {majors.map((major) => (\r\n                  <React.Fragment>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          // checked={gilad}\r\n                          value={major._id}\r\n                          onChange={(e) => {\r\n                            handleChange(e, \"majorId\");\r\n                          }}\r\n                          name={major.majorName}\r\n                        />\r\n                      }\r\n                      label={major.majorName}\r\n                    />\r\n                  </React.Fragment>\r\n                ))}\r\n              </FormGroup>\r\n            </FormControl>\r\n            <label className={classes.label}>Kelas</label>\r\n            <NativeSelect\r\n              id=\"demo-customized-select-native\"\r\n              style={{ marginTop: \"0.5rem\" }}\r\n              value={users.kelas}\r\n              onChange={(e) => {\r\n                handleChange(e, \"kelas\");\r\n              }}\r\n              input={<BootstrapInput />}\r\n              fullWidth\r\n            >\r\n              {kelass.map((kelas) => (\r\n                <option value={kelas._id}>{kelas.kelas}</option>\r\n              ))}\r\n            </NativeSelect>\r\n          </React.Fragment>\r\n        )}\r\n\r\n        {users.role === \"siswa\" && (\r\n          <React.Fragment>\r\n            <Input\r\n              id=\"nis\"\r\n              label=\"NIS\"\r\n              placeholder=\"contoh: 1234567890\"\r\n              handleChange={handleChange}\r\n            />\r\n            <label className={classes.label} htmlFor=\"class\">\r\n              Kelas\r\n            </label>\r\n            <NativeSelect\r\n              id=\"class\"\r\n              style={{ marginTop: \"0.5rem\" }}\r\n              value={users.kelas}\r\n              onChange={(e) => {\r\n                handleChange(e, \"kelas\");\r\n              }}\r\n              input={<BootstrapInput />}\r\n              fullWidth\r\n            >\r\n              {kelass.map((kelas) => (\r\n                <option value={kelas._id}>{kelas.kelas}</option>\r\n              ))}\r\n            </NativeSelect>\r\n            <Input\r\n              id=\"age\"\r\n              label=\"Umur\"\r\n              placeholder=\"contoh: 14 tahun\"\r\n              handleChange={handleChange}\r\n            />\r\n            <Input\r\n              id=\"address\"\r\n              label=\"Alamat\"\r\n              placeholder=\"contoh: Blater\"\r\n              handleChange={handleChange}\r\n            />\r\n            <Input\r\n              id=\"religion\"\r\n              label=\"Agama\"\r\n              placeholder=\"contoh: ISLAM\"\r\n              handleChange={handleChange}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        <ErrorSucess\r\n          isError={!isEmpty(error)}\r\n          isSucess={Boolean(sucess)}\r\n          sucessMessage=\"Akun berhasil dibuat\"\r\n          errorMessages={[\r\n            error.username,\r\n            error.password,\r\n            error.role,\r\n            error.name,\r\n          ]}\r\n        />\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12} md={4}>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              className={classes.btn}\r\n            >\r\n              Daftar\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        {/* </div> */}\r\n      </Create>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  error: state.error,\r\n  sucess: state.sucess,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { registerUser, clearErrorSucess })(Register)\r\n);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\announcementReducer.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\announcementAction.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\sucessReducer.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\AnnouncementUpdate\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Present\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Pengumuman\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Badge\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Theory\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Exams\\index.jsx",["240","241","242"],"import React from \"react\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Input from \"../../atoms/Input\";\r\nimport Create from \"../../atoms/Create\";\r\nimport ErrorSucess from \"../../atoms/ErrorSucess\";\r\n\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport color from \"../../../utils/color\";\r\nimport { createExam } from \"../../../redux/actions/examAction\";\r\nimport { clearErrorSucess } from \"../../../redux/actions/helperAction\";\r\n\r\nfunction Exams({ error, sucess, createExam, user, clearErrorSucess }) {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      listStyle: \"none\",\r\n      \"& li\": {\r\n        display: \"flex\",\r\n        alignItems: \"flex-end\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const { ujian, id } = useParams();\r\n\r\n  const [exam, setExam] = React.useState([...new Array(5)]);\r\n\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const handleMenus = (e, i) => {\r\n    exam[i].answer = e.target.value;\r\n\r\n    setExam([...exam]);\r\n  };\r\n\r\n  const handleAdd = (e) => {\r\n    const question = [\r\n      { examName: \"\", possibilitesAnswer: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n      { examName: \"\", possibilitesAnswer: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n      { examName: \"\", possibilitesAnswer: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n      { examName: \"\", possibilitesAnswer: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n      { examName: \"\", possibilitesAnswer: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n    ];\r\n    setExam([...exam, ...question]);\r\n  };\r\n\r\n  const handleChange = (e, id, idx = false) => {\r\n    if (idx === false) {\r\n      exam[id].examName = e.target.value;\r\n      setExam([...exam]);\r\n    } else {\r\n      exam[id].possibilitesAnswer[idx] = e.target.value;\r\n      setExam([...exam]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    createExam({\r\n      userId: \"guru\",\r\n      teacherId: user.user.id,\r\n      majorId: id,\r\n      question: exam,\r\n      type: ujian,\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    clearErrorSucess();\r\n    axios.get(`${proxy}/api/exams/view/${id}?type=${ujian}`).then((res) => {\r\n      if (res.data) {\r\n        console.log(res.data);\r\n        setExam([...res.data.question]);\r\n      } else {\r\n        exam.forEach((a, i) => {\r\n          let obj = {\r\n            examName: \"\",\r\n            possibilitesAnswer: [\"\", \"\", \"\", \"\"],\r\n            answer: \"\",\r\n          };\r\n          exam[i] = obj;\r\n        });\r\n        setExam([...exam]);\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <Create title={`${ujian.split(\"-\").join(\" \")}`}>\r\n      {!loading &&\r\n        exam.map((arr, i) => (\r\n          <React.Fragment>\r\n            <Input\r\n              id={i}\r\n              label={`Soal no ${i + 1}`}\r\n              placeholder=\"\"\r\n              handleChange={handleChange}\r\n              value={arr.examName}\r\n            ></Input>\r\n            <ul className={classes.root}>\r\n              <RadioGroup\r\n                aria-label=\"answer\"\r\n                name={i}\r\n                value={arr.answer}\r\n                onChange={(e) => {\r\n                  handleMenus(e, i);\r\n                }}\r\n              >\r\n                <li>\r\n                  {\" \"}\r\n                  <FormControlLabel value=\"a\" control={<Radio />} />{\" \"}\r\n                  <Input\r\n                    id={`${i}`}\r\n                    label=\"Jawaban a\"\r\n                    // placeholder=\"contoh: 1 + 1\"\r\n                    idx={0}\r\n                    handleChange={handleChange}\r\n                    value={arr.possibilitesAnswer[0]}\r\n                  ></Input>\r\n                </li>\r\n                <li>\r\n                  <FormControlLabel value=\"b\" control={<Radio />} />{\" \"}\r\n                  <Input\r\n                    id={`${i}`}\r\n                    label=\"Jawaban b\"\r\n                    // placeholder=\"contoh: 1 + 1\"\r\n                    idx={1}\r\n                    handleChange={handleChange}\r\n                    value={arr.possibilitesAnswer[1]}\r\n                  ></Input>\r\n                </li>\r\n                <li>\r\n                  <FormControlLabel value=\"c\" control={<Radio />} />{\" \"}\r\n                  <Input\r\n                    id={`${i}`}\r\n                    label=\"Jawaban c\"\r\n                    // placeholder=\"contoh: 1 + 1\"\r\n                    idx={2}\r\n                    handleChange={handleChange}\r\n                    value={arr.possibilitesAnswer[2]}\r\n                  ></Input>\r\n                </li>\r\n                <li>\r\n                  <FormControlLabel value=\"d\" control={<Radio />} />{\" \"}\r\n                  <Input\r\n                    id={`${i}`}\r\n                    label=\"Jawaban d\"\r\n                    // placeholder=\"contoh: 1 + 1\"\r\n                    idx={3}\r\n                    handleChange={handleChange}\r\n                    value={arr.possibilitesAnswer[3]}\r\n                  ></Input>\r\n                </li>\r\n              </RadioGroup>\r\n            </ul>\r\n          </React.Fragment>\r\n        ))}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        style={{ marginTop: \"2rem\" }}\r\n        onClick={handleAdd}\r\n      >\r\n        Tambah 5 Soal <AddIcon style={{ paddingLeft: \"0.5rem\" }} />\r\n      </Button>{\" \"}\r\n      <ErrorSucess\r\n        isError={!isEmpty(error)}\r\n        isSucess={!isEmpty(sucess)}\r\n        errorMessages={[error.examStudentAnswer]}\r\n        sucessMessage=\"Berhasil Dibuat\"\r\n      />\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={12} md={6}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSubmit}\r\n            style={{ marginTop: \"1.5rem\" }}\r\n            fullWidth\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Create>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  error: state.error,\r\n  sucess: state.sucess,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createExam, clearErrorSucess })(\r\n  Exams\r\n);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\ExamsStudent\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\examAction.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Profile\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\RecapitulationValue\\index.jsx",["243"],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Recapitulation\\index.jsx",["244"],"import React from \"react\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport color from \"../../../utils/color\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  blue: {\r\n    backgroundColor: color.primary,\r\n    padding: \"0.5rem 1rem\",\r\n    color: color.white,\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n  allowed: {\r\n    backgroundColor: color.info,\r\n    padding: \"0.5rem 1rem\",\r\n    color: color.white,\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n  notAllow: {\r\n    backgroundColor: color.danger,\r\n    padding: \"0.5rem 1rem\",\r\n    color: color.white,\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n  bgPrimary: {\r\n    backgroundColor: color.primary,\r\n  },\r\n  tableRow: {\r\n    \"& > *\": {\r\n      color: color.white,\r\n    },\r\n  },\r\n  container: {\r\n    marginTop: \"3rem\",\r\n  },\r\n});\r\n\r\nfunction Recapitulation({ id, user, major }) {\r\n  var dateFormat = require(\"dateformat\");\r\n  dateFormat.i18n = {\r\n    dayNames: [\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum'at\",\r\n      \"Sabtu\",\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum;at\",\r\n      \"Sabtu\",\r\n    ],\r\n    monthNames: [\r\n      \"Junuari\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n      \"Januari\",\r\n      \"Februari\",\r\n      \"Maret\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"Desember\",\r\n    ],\r\n    timeNames: [\"a\", \"p\", \"am\", \"pm\", \"A\", \"P\", \"AM\", \"PM\"],\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const [recapitulations, setRecapitulation] = React.useState([]);\r\n\r\n  const [present, setPresent] = React.useState({\r\n    userId: \"\",\r\n    majorId: \"\",\r\n    status: \"hadir\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    present[\"userId\"] = user.user.id;\r\n    present[\"majorId\"] = id;\r\n    setPresent({ ...present });\r\n\r\n    axios\r\n      .get(`${proxy}/api/users/view`)\r\n      .then((res) => {\r\n        setRecapitulation([...res.data]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [id]);\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.container}>\r\n      <Alert severity=\"warning\">\r\n        Dapat mengikuti ujian ketika kehadiran lebih dari 8\r\n      </Alert>\r\n      <Table\r\n        className={classes.table}\r\n        aria-label=\"simple table\"\r\n        style={{ marginTop: \"2rem\" }}\r\n      >\r\n        <TableHead className={classes.bgPrimary}>\r\n          <TableRow className={classes.tableRow}>\r\n            <TableCell>Siswa</TableCell>\r\n            <TableCell>Mata Pelajaran</TableCell>\r\n            <TableCell>Total Kehadiran</TableCell>\r\n            <TableCell>Dapat Mengikuti Ujian</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {!isEmpty(recapitulations) &&\r\n            recapitulations.map((recapitulation) => (\r\n              <TableRow key={recapitulation}>\r\n                <TableCell> {recapitulation.userId.name}</TableCell>\r\n                <TableCell>{recapitulation.majorId.majorName}</TableCell>\r\n                <TableCell>{recapitulation.status.length} / 14</TableCell>\r\n                <TableCell>\r\n                  {recapitulation.status.length > 7 ? (\r\n                    <span className={classes.allowed}>Diizinkan</span>\r\n                  ) : (\r\n                    <span className={classes.notAllow}>Tidak</span>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Recapitulation);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\RecapitulationStudent\\index.jsx",["245","246"],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\CKEditor\\index.jsx",["247"],"import React from \"react\";\r\n\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport Input from \"../../atoms/Input\";\r\nimport ErrorSucess from \"../../atoms/ErrorSucess\";\r\n\r\nimport {\r\n  addAnnouncement,\r\n  updateAnnouncement,\r\n} from \"../../../redux/actions/announcementAction\";\r\nimport { clearErrorSucess } from \"../../../redux/actions/helperAction\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport color from \"../../../utils/color\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\n\r\nfunction CKEditors({\r\n  addAnnouncement,\r\n  titles,\r\n  id,\r\n  updateAnnouncement,\r\n  sucess,\r\n  clearErrorSucess,\r\n  history,\r\n  error,\r\n}) {\r\n  const useStyles = makeStyles({\r\n    btn: {\r\n      marginTop: \"2rem\",\r\n    },\r\n    alert: {\r\n      marginTop: \"1.5rem\",\r\n    },\r\n    formControl: {\r\n      marginTop: \"1.5rem\",\r\n    },\r\n    label: {\r\n      color: color.label,\r\n    },\r\n  });\r\n\r\n  const [announcement, setAnnouncement] = React.useState({\r\n    title: \"\",\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\",\r\n  });\r\n\r\n  const handleAnnouncement = (e, name) => {\r\n    announcement[name] = e.target.value;\r\n    setAnnouncement({ ...announcement });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (id) {\r\n      updateAnnouncement(id, announcement, history);\r\n    } else {\r\n      addAnnouncement(announcement, history);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    clearErrorSucess();\r\n    if (id) {\r\n      axios\r\n        .get(`${proxy}/api/announcement/view/${id}`)\r\n        .then((res) => {\r\n          announcement[\"title\"] = res.data.title;\r\n          announcement[\"description\"] = res.data.description;\r\n\r\n          setAnnouncement({ ...announcement });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [clearErrorSucess, id]);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <Input\r\n          id=\"title\"\r\n          label=\"Judul\"\r\n          placeholder=\"\"\r\n          handleChange={handleAnnouncement}\r\n          value={announcement.title}\r\n        />\r\n        <div className={classes.formControl}>\r\n          <label className={classes.label}>Deskripsi</label>\r\n          <div style={{ marginTop: \"0.5rem\" }}></div>\r\n          <CKEditor\r\n            editor={ClassicEditor}\r\n            data={announcement.description}\r\n            onReady={(editor) => {\r\n              // You can store the \"editor\" and use when it is needed.\r\n              console.log(\"Editor is ready to use!\", editor);\r\n            }}\r\n            onChange={(event, editor) => {\r\n              const data = editor.getData();\r\n              console.log({ data });\r\n              announcement[\"description\"] = data;\r\n              setAnnouncement(announcement);\r\n            }}\r\n            onBlur={(event, editor) => {\r\n              console.log(\"Blur.\", editor);\r\n            }}\r\n            onFocus={(event, editor) => {\r\n              console.log(\"Focus.\", editor);\r\n            }}\r\n          />\r\n        </div>\r\n        <ErrorSucess\r\n          isSucess={Boolean(sucess)}\r\n          isError={!isEmpty(error)}\r\n          // sucessMessage={\"data pengumuman sukses\"}\r\n          errorMessages={[error.title, error.description]}\r\n        />\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12} md={4}>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              className={classes.btn}\r\n            >\r\n              {titles}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  sucess: state.sucess,\r\n  error: state.error,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    addAnnouncement,\r\n    updateAnnouncement,\r\n    clearErrorSucess,\r\n  })(CKEditors)\r\n);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\helperAction.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ButtonRed\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ButtonDanger\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Table\\index.jsx",["248"],"import React from \"react\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\n\r\nimport Badge from \"../../atoms/Badge\";\r\nimport ButtonInfo from \"../../atoms/ButtonInfo\";\r\n\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport color from \"../../../utils/color\";\r\n\r\nfunction BasicTable({ id, user, major }) {\r\n  var dateFormat = require(\"dateformat\");\r\n  dateFormat.i18n = {\r\n    dayNames: [\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum'at\",\r\n      \"Sabtu\",\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum;at\",\r\n      \"Sabtu\",\r\n    ],\r\n    monthNames: [\r\n      \"Junuari\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n      \"Januari\",\r\n      \"Februari\",\r\n      \"Maret\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"Desember\",\r\n    ],\r\n    timeNames: [\"a\", \"p\", \"am\", \"pm\", \"A\", \"P\", \"AM\", \"PM\"],\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    blue: {\r\n      backgroundColor: color.primary,\r\n      padding: \"0.5rem 1rem\",\r\n      color: color.white,\r\n      borderRadius: \"0.5rem\",\r\n    },\r\n    textWhite: {\r\n      color: color.white,\r\n    },\r\n    bgPrimary: {\r\n      backgroundColor: color.primary,\r\n    },\r\n    btnDanger: {\r\n      color: color.danger,\r\n    },\r\n    btnInfo: {\r\n      backgroundColor: color.black,\r\n      color: color.white,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [presents, setPresents] = React.useState({\r\n    status: [],\r\n  });\r\n\r\n  const [present, setPresent] = React.useState({\r\n    userId: \"\",\r\n    majorId: \"\",\r\n    status: \"Hadir\",\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    present[\"status\"] = event.target.value;\r\n    setPresent({ ...present });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setOpen(false);\r\n\r\n    axios\r\n      .post(`${proxy}/api/presents/create`, present)\r\n      .then((res) => {\r\n        setPresents({ ...res.data });\r\n      })\r\n      .catch((err) => console.log(err.response.data));\r\n  };\r\n\r\n  const [undoneArray, setUndoneArray] = React.useState([]);\r\n\r\n  let i = 0;\r\n\r\n  React.useEffect(() => {\r\n    present[\"userId\"] = user.user.id;\r\n    present[\"majorId\"] = id;\r\n    setPresent({ ...present });\r\n\r\n    axios\r\n      .get(`${proxy}/api/presents/view/${user.user.id}/${id}`)\r\n      .then((res) => {\r\n        setPresents({ ...res.data });\r\n        if (!isEmpty(res.data)) {\r\n          setUndoneArray([...new Array(14 - res.data.status.length)]);\r\n        } else {\r\n          setUndoneArray([...new Array(14)]);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginTop: \"3rem\" }}>\r\n      <Table className={clsx(classes.table)} aria-label=\"simple table\">\r\n        <TableHead className={classes.blue}>\r\n          <TableRow>\r\n            <TableCell className={classes.textWhite}>Tanggal</TableCell>\r\n            <TableCell className={classes.textWhite}>Deskripsi</TableCell>\r\n            <TableCell className={classes.textWhite}>Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {!isEmpty(presents.status) &&\r\n            presents.status.map((status) => (\r\n              <TableRow key={status}>\r\n                <TableCell>\r\n                  {\" \"}\r\n                  <p>\r\n                    {dateFormat(\r\n                      i * 604800000 + Date.parse(major.hoursOfSubject),\r\n                      \"mmmm d, yyyy \"\r\n                    )}\r\n                  </p>\r\n                  <p style={{ lineHeight: 0.5 }} test={i++}>\r\n                    {dateFormat(major.hoursOfSubject, \"dddd hh:MM TT\")} -{\" \"}\r\n                    {dateFormat(major.hoursOfSubjectFinish, \"hh:MM TT\")}\r\n                  </p>\r\n                </TableCell>\r\n                <TableCell style={{ color: \"#9e9e9e\" }}>\r\n                  Absen sudah ditutup\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Badge status={status} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          {undoneArray.map((undone) => (\r\n            <TableRow key={undone}>\r\n              <TableCell>\r\n                {\" \"}\r\n                <p>\r\n                  {dateFormat(\r\n                    i * 604800000 + Date.parse(major.hoursOfSubject),\r\n                    \"mmmm d, yyyy \"\r\n                  )}\r\n                </p>\r\n                <p style={{ lineHeight: 0.5 }} test={i++}>\r\n                  {dateFormat(major.hoursOfSubject, \"dddd hh:MM TT\")} -{\" \"}\r\n                  {dateFormat(major.hoursOfSubjectFinish, \"hh:MM TT\")}\r\n                </p>\r\n              </TableCell>\r\n              {Date.parse(new Date()) >\r\n              (i - 1) * 604800000 + Date.parse(major.hoursOfSubject) ? (\r\n                <TableCell\r\n                  onClick={handleClickOpen}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  Absen disini\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell style={{ color: \"#9e9e9e\" }}>\r\n                  Absen belum tersedia\r\n                </TableCell>\r\n              )}\r\n\r\n              <TableCell>\r\n                <span className={classes.blue}>Belum absen</span>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent style={{ minWidth: 480 }}>\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            <Typography variant=\"h5\" component=\"h2\" style={{ fontWeight: 500 }}>\r\n              Kehadiran\r\n            </Typography>\r\n          </DialogTitle>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                aria-label=\"gender\"\r\n                name=\"gender1\"\r\n                value={present.status}\r\n                onChange={handleChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Hadir\"\r\n                  control={<Radio />}\r\n                  label=\"Hadir\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Sakit\"\r\n                  control={<Radio />}\r\n                  label=\"Sakit\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Izin\"\r\n                  control={<Radio />}\r\n                  label=\"Izin\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n            className={classes.btnDanger}\r\n          >\r\n            Batal\r\n          </Button>\r\n          <ButtonInfo handleClick={handleSubmit}>Ok</ButtonInfo>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BasicTable);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Card\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\organisms\\Sections\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ButtonInfo\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ErrorSucess\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Create\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\QuestionExam\\index.jsx",["249"],"import React from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\n\r\nfunction QuestionExam({\r\n  i,\r\n  title,\r\n  aAnswer,\r\n  bAnswer,\r\n  cAnswer,\r\n  dAnswer,\r\n  handleChange,\r\n  value,\r\n  answer,\r\n}) {\r\n  const useStyles = makeStyles({\r\n    root: { padding: \"1rem\" },\r\n    formLabel: { marginTop: \"2rem\" },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container className={classes.root}>\r\n        <Grid item xs={1}>\r\n          <Typography variant=\"body1\" component=\"p\" align=\"center\">\r\n            {i} .{\" \"}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={11}>\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            {title}\r\n          </Typography>\r\n        </Grid>\r\n        {/* <FormLabel component=\"legend\" className={classes.formLabel}></FormLabel> */}\r\n        <RadioGroup\r\n          value={value}\r\n          onChange={(e) => {\r\n            if (!answer) {\r\n              handleChange(e, i - 1);\r\n            }\r\n          }}\r\n        >\r\n          <FormControlLabel\r\n            value=\"a\"\r\n            control={<Radio checked={answer === \"a\"} />}\r\n            label={aAnswer}\r\n          />\r\n          <FormControlLabel\r\n            value=\"b\"\r\n            control={<Radio checked={answer === \"b\"} />}\r\n            label={bAnswer}\r\n          />\r\n          <FormControlLabel\r\n            value=\"c\"\r\n            control={<Radio checked={answer === \"c\"} />}\r\n            label={cAnswer}\r\n          />\r\n          <FormControlLabel\r\n            value=\"d\"\r\n            control={<Radio checked={answer === \"d\"} />}\r\n            label={dAnswer}\r\n          />\r\n        </RadioGroup>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionExam;\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\TheoryTemplate\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\CredentialData\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\EditIcon\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\DeleteIcon\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\ExamSection\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\TheorySection\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Section\\index.jsx",[],{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":14,"column":8,"nodeType":"256","messageId":"257","endLine":14,"endColumn":13},{"ruleId":"254","severity":1,"message":"255","line":8,"column":8,"nodeType":"256","messageId":"257","endLine":8,"endColumn":13},{"ruleId":"254","severity":1,"message":"258","line":21,"column":8,"nodeType":"256","messageId":"257","endLine":21,"endColumn":13},{"ruleId":"259","severity":1,"message":"260","line":100,"column":6,"nodeType":"261","endLine":100,"endColumn":10,"suggestions":"262"},{"ruleId":"259","severity":1,"message":"263","line":121,"column":6,"nodeType":"261","endLine":121,"endColumn":17,"suggestions":"264"},{"ruleId":"259","severity":1,"message":"263","line":123,"column":6,"nodeType":"261","endLine":123,"endColumn":10,"suggestions":"265"},{"ruleId":"259","severity":1,"message":"266","line":109,"column":6,"nodeType":"261","endLine":109,"endColumn":8,"suggestions":"267"},{"ruleId":"268","severity":1,"message":"269","line":117,"column":9,"nodeType":"270","endLine":117,"endColumn":38},{"ruleId":"259","severity":1,"message":"271","line":84,"column":6,"nodeType":"261","endLine":84,"endColumn":28,"suggestions":"272"},{"ruleId":"259","severity":1,"message":"273","line":165,"column":6,"nodeType":"261","endLine":165,"endColumn":8,"suggestions":"274"},{"ruleId":"254","severity":1,"message":"275","line":8,"column":8,"nodeType":"256","messageId":"257","endLine":8,"endColumn":17},"no-native-reassign",["276"],"no-negated-in-lhs",["277"],"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'color' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'clearErrorSucess', 'exam', and 'ujian'. Either include them or remove the dependency array. If 'clearErrorSucess' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["278"],"React Hook React.useEffect has missing dependencies: 'present' and 'user.user.id'. Either include them or remove the dependency array. You can also do a functional update 'setPresent(p => ...)' if you only need 'present' in the 'setPresent' call.",["279"],["280"],"React Hook React.useEffect has a missing dependency: 'user.isAuthenticated.id'. Either include it or remove the dependency array.",["281"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook React.useEffect has a missing dependency: 'announcement'. Either include it or remove the dependency array. You can also do a functional update 'setAnnouncement(a => ...)' if you only need 'announcement' in the 'setAnnouncement' call.",["282"],"React Hook React.useEffect has missing dependencies: 'id', 'present', and 'user.user.id'. Either include them or remove the dependency array. You can also do a functional update 'setPresent(p => ...)' if you only need 'present' in the 'setPresent' call.",["283"],"'FormLabel' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"288","fix":"294"},"Update the dependencies array to be: [clearErrorSucess, exam, id, ujian]",{"range":"295","text":"296"},"Update the dependencies array to be: [id, present, ujian, user.user.id]",{"range":"297","text":"298"},"Update the dependencies array to be: [id, present, user.user.id]",{"range":"299","text":"300"},"Update the dependencies array to be: [user.isAuthenticated.id]",{"range":"301","text":"302"},"Update the dependencies array to be: [announcement, clearErrorSucess, id]",{"range":"303","text":"304"},{"range":"305","text":"300"},[2976,2980],"[clearErrorSucess, exam, id, ujian]",[2769,2780],"[id, present, ujian, user.user.id]",[2749,2753],"[id, present, user.user.id]",[2475,2477],"[user.isAuthenticated.id]",[2664,2686],"[announcement, clearErrorSucess, id]",[4150,4152]]