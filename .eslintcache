[{"E:\\Web\\JS\\React\\jarpis\\client\\src\\index.js":"1","E:\\Web\\JS\\React\\jarpis\\client\\src\\App.js":"2","E:\\Web\\JS\\React\\jarpis\\client\\src\\store.js":"3","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\index.js":"4","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\layout\\Navbar\\index.jsx":"5","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Login\\index.jsx":"6","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\color.js":"7","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\layout\\Footer\\index.jsx":"8","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\size.js":"9","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Input\\index.jsx":"10","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\PrivateRoute.jsx":"11","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Dashboard\\index.jsx":"12","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\organisms\\Cards\\index.jsx":"13","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Card\\index.jsx":"14","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Announcment\\index.jsx":"15","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\CardAnnouncement\\index.jsx":"16","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Major\\index.jsx":"17","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\organisms\\Topic\\index.jsx":"18","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Sections\\index.jsx":"19","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Section\\index.jsx":"20","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\userReducer.js":"21","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\index.js":"22","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\userAction.js":"23","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\setAuthToken.js":"24","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\proxy.js":"25","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\errorReducer.js":"26","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\is-empty.js":"27","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\PrivateRouteAdmin.jsx":"28","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Admins\\index.jsx":"29","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\organisms\\Admin\\index.jsx":"30","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Register\\index.jsx":"31","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\CKEditor\\index.jsx":"32","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\announcementReducer.js":"33","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\announcementAction.js":"34","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\sucessReducer.js":"35","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\CreateTemplate\\index.jsx":"36","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\AnnouncementUpdate\\index.jsx":"37","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Present\\index.jsx":"38","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Table\\index.jsx":"39","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Pengumuman\\index.jsx":"40","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Badge\\index.jsx":"41","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Theory\\index.jsx":"42","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\TheoryTemplate\\index.jsx":"43","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Exams\\index.jsx":"44"},{"size":197,"mtime":1607606201596,"results":"45","hashOfConfig":"46"},{"size":3376,"mtime":1607861471585,"results":"47","hashOfConfig":"46"},{"size":437,"mtime":1607609459473,"results":"48","hashOfConfig":"46"},{"size":396,"mtime":1607722526773,"results":"49","hashOfConfig":"46"},{"size":12367,"mtime":1607865808907,"results":"50","hashOfConfig":"46"},{"size":2878,"mtime":1607795822781,"results":"51","hashOfConfig":"46"},{"size":140,"mtime":1607678626958,"results":"52","hashOfConfig":"46"},{"size":813,"mtime":1607676882095,"results":"53","hashOfConfig":"46"},{"size":35,"mtime":1607670702451,"results":"54","hashOfConfig":"46"},{"size":1076,"mtime":1607864867664,"results":"55","hashOfConfig":"46"},{"size":592,"mtime":1607729791233,"results":"56","hashOfConfig":"46"},{"size":1136,"mtime":1607843429357,"results":"57","hashOfConfig":"46"},{"size":235,"mtime":1607679518609,"results":"58","hashOfConfig":"46"},{"size":2221,"mtime":1607791953721,"results":"59","hashOfConfig":"46"},{"size":848,"mtime":1607723060964,"results":"60","hashOfConfig":"46"},{"size":4057,"mtime":1607791219284,"results":"61","hashOfConfig":"46"},{"size":640,"mtime":1607775217384,"results":"62","hashOfConfig":"46"},{"size":1352,"mtime":1607792150128,"results":"63","hashOfConfig":"46"},{"size":1764,"mtime":1607843201424,"results":"64","hashOfConfig":"46"},{"size":1524,"mtime":1607839120571,"results":"65","hashOfConfig":"46"},{"size":393,"mtime":1607693014268,"results":"66","hashOfConfig":"46"},{"size":204,"mtime":1607722102579,"results":"67","hashOfConfig":"46"},{"size":2104,"mtime":1607780354090,"results":"68","hashOfConfig":"46"},{"size":313,"mtime":1607685745328,"results":"69","hashOfConfig":"46"},{"size":65,"mtime":1607687085107,"results":"70","hashOfConfig":"46"},{"size":251,"mtime":1607705342990,"results":"71","hashOfConfig":"46"},{"size":234,"mtime":1607687543429,"results":"72","hashOfConfig":"46"},{"size":644,"mtime":1607729800135,"results":"73","hashOfConfig":"46"},{"size":145,"mtime":1607697256876,"results":"74","hashOfConfig":"46"},{"size":2167,"mtime":1607725520166,"results":"75","hashOfConfig":"46"},{"size":10111,"mtime":1607843992585,"results":"76","hashOfConfig":"46"},{"size":4583,"mtime":1607795757838,"results":"77","hashOfConfig":"46"},{"size":338,"mtime":1607722975328,"results":"78","hashOfConfig":"46"},{"size":1771,"mtime":1607724898013,"results":"79","hashOfConfig":"46"},{"size":254,"mtime":1607715360901,"results":"80","hashOfConfig":"46"},{"size":1826,"mtime":1607781615778,"results":"81","hashOfConfig":"46"},{"size":434,"mtime":1607713844836,"results":"82","hashOfConfig":"46"},{"size":1080,"mtime":1607775447919,"results":"83","hashOfConfig":"46"},{"size":9026,"mtime":1607792354403,"results":"84","hashOfConfig":"46"},{"size":322,"mtime":1607781443940,"results":"85","hashOfConfig":"46"},{"size":997,"mtime":1607792233128,"results":"86","hashOfConfig":"46"},{"size":2576,"mtime":1607861454671,"results":"87","hashOfConfig":"46"},{"size":750,"mtime":1607852474807,"results":"88","hashOfConfig":"46"},{"size":6265,"mtime":1607868337225,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1sid8fm",{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"92"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Web\\JS\\React\\jarpis\\client\\src\\index.js",[],["196","197"],"E:\\Web\\JS\\React\\jarpis\\client\\src\\App.js",["198"],"E:\\Web\\JS\\React\\jarpis\\client\\src\\store.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\index.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\layout\\Navbar\\index.jsx",["199","200","201","202","203","204","205","206","207","208","209","210","211","212"],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Login\\index.jsx",["213"],"import React from \"react\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport Input from \"../../atoms/Input\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport color from \"../../../utils/color\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../../redux/actions/userAction\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction Login({ loginUser, error, history, user }) {\r\n  const [users, setUser] = React.useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e, name) => {\r\n    users[name] = e.target.value;\r\n    setUser(users);\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      // border: `1px solid ${color.white}`,\r\n      borderRadius: \"0.5rem\",\r\n      padding: \"2rem\",\r\n      backgroundColor: color.white,\r\n      boxShadow: \"0 1rem 3rem rgba(0, 0, 0, 0.175) !important\",\r\n    },\r\n    title: {\r\n      color: \"#404145\",\r\n      fontWeight: \"500\",\r\n    },\r\n    btn: {\r\n      marginTop: \"2rem\",\r\n    },\r\n    alert: {\r\n      marginTop: \"1.5rem\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    loginUser(users, history);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (user.isAuthenticated) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item xs={12} md={4}>\r\n        <form onSubmit={onSubmit}>\r\n          <div className={classes.root}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              component=\"h1\"\r\n              align=\"center\"\r\n              className={classes.title}\r\n            >\r\n              Masuk ke Jarpis\r\n            </Typography>\r\n\r\n            <Input\r\n              id=\"username\"\r\n              label=\"Email / Username\"\r\n              placeholder=\"contoh jarpis@gmail.com\"\r\n              handleChange={handleChange}\r\n            />\r\n            <Input\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              placeholder=\"*********\"\r\n              handleChange={handleChange}\r\n              isPassword={true}\r\n            />\r\n            {!isEmpty(error) && (\r\n              <Alert className={classes.alert} severity=\"error\">\r\n                {error.username || error.password}\r\n              </Alert>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              className={classes.btn}\r\n            >\r\n              Masuk\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  error: state.error,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { loginUser })(Login));\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\color.js",["214"],"export default {\r\n  grey: \"#62646a\",\r\n  white: \"#ffffff\",\r\n  black: \"#000000\",\r\n  primary: \"#3f51b5\",\r\n  label: \"rgba(0, 0, 0, 0.54)\",\r\n};\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\layout\\Footer\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\size.js",["215"],"export default {\r\n  big: 6.7,\r\n};\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Input\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\PrivateRoute.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Dashboard\\index.jsx",["216"],"import React from \"react\";\r\nimport Card from \"../../molecules/Card\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Dashboard({ user }) {\r\n  const [majors, setMajors] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    if (user.isAuthenticated.role === \"teacher\") {\r\n      axios\r\n        .post(`${proxy}/api/majors/viewByArray`, user.isAuthenticated.majorId)\r\n        .then((res) => {\r\n          setMajors(res.data);\r\n        });\r\n    } else {\r\n      axios.get(`${proxy}/api/majors/view`).then((res) => {\r\n        setMajors(res.data);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2}>\r\n        {majors.map((major) => (\r\n          <Card\r\n            id={major._id}\r\n            title={major.majorName}\r\n            from={major.hoursOfSubject}\r\n            to={major.hoursOfSubjectFinish}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\organisms\\Cards\\index.jsx",["217","218"],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Card\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Announcment\\index.jsx",["219"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport CardAnnouncement from \"../../molecules/CardAnnouncement\";\r\nimport { viewAnnouncement } from \"../../../redux/actions/announcementAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Announcement({ announcements, viewAnnouncement }) {\r\n  React.useEffect(() => {\r\n    viewAnnouncement();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {announcements.announcement.map((announcement) => (\r\n        <CardAnnouncement\r\n          id={announcement._id}\r\n          title={announcement.title}\r\n          description={announcement.description}\r\n        />\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  announcements: state.announcements,\r\n});\r\n\r\nexport default connect(mapStateToProps, { viewAnnouncement })(Announcement);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\CardAnnouncement\\index.jsx",["220","221"],"import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport color from \"../../../utils/color\";\r\nimport parse from \"html-react-parser\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteAnnouncement } from \"../../../redux/actions/announcementAction\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nfunction CardAnnouncement({\r\n  id,\r\n  title,\r\n  description,\r\n  user,\r\n  deleteAnnouncement,\r\n  sucess,\r\n}) {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: color.white,\r\n      boxShadow: \"0 .5rem 1rem rgba(0,0,0,.15)\",\r\n    },\r\n    header: {\r\n      backgroundColor: color.primary,\r\n      padding: \"1rem\",\r\n      borderTopLeftRadius: \"0.5rem\",\r\n      borderTopRightRadius: \"0.5rem\",\r\n    },\r\n    body: {\r\n      padding: \"1rem\",\r\n      backgroundColor: color.white,\r\n      borderBottomLeftRadius: \"0.5rem\",\r\n      borderBottomRightRadius: \"0.5rem\",\r\n    },\r\n    title: {\r\n      color: color.white,\r\n    },\r\n    description: {\r\n      color: color.black,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDeleteAnnnouncement = (e) => {\r\n    deleteAnnouncement(id);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} md={6}>\r\n      {user.isAuthenticated.role === \"admin\" && (\r\n        <React.Fragment>\r\n          <Link to={`/admin/pengumuman/${id}`}>\r\n            <EditIcon\r\n              style={{\r\n                color: \"green\",\r\n                padding: \"1rem\",\r\n                cursor: \"pointer\",\r\n                backgroundColor: color.white,\r\n              }}\r\n            />\r\n          </Link>\r\n          <DeleteIcon\r\n            style={{\r\n              color: \"#dc3545\",\r\n              padding: \"1rem\",\r\n              cursor: \"pointer\",\r\n              backgroundColor: color.white,\r\n            }}\r\n            onClick={handleClickOpen}\r\n          />\r\n        </React.Fragment>\r\n      )}\r\n\r\n      <div className={classes.root}>\r\n        <div className={classes.header}>\r\n          <Typography varian=\"body1\" component=\"h2\" className={classes.title}>\r\n            {title}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.body}>\r\n          <Typography\r\n            varian=\"body1\"\r\n            component=\"p\"\r\n            className={classes.description}\r\n          >\r\n            {parse(description)}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Apakah anda yakin ingin menghapus {title} ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n            style={{ color: \"#dc3545\" }}\r\n          >\r\n            Batal\r\n          </Button>\r\n          <Button\r\n            onClick={handleDeleteAnnnouncement}\r\n            style={{ backgroundColor: \"#dc3545\", color: color.white }}\r\n            autoFocus\r\n          >\r\n            Hapus\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  sucess: state.sucess,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  deleteAnnouncement,\r\n})(CardAnnouncement);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Major\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\organisms\\Topic\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Sections\\index.jsx",["222","223"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Section from \"../../atoms/Section\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport color from \"../../../utils/color\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nfunction Sections({ id, isStudent }) {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      padding: \"1rem 0 2rem\",\r\n      borderBottom: `0.05px solid #bdbdbd`,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {!isStudent && (\r\n        <Alert\r\n          severity=\"warning\"\r\n          style={{ marginTop: \"0\", marginBottom: \"1.5rem\" }}\r\n        >\r\n          Presensi hanya tersedia untuk siswa\r\n        </Alert>\r\n      )}\r\n      <Grid container spacing={2}>\r\n        <Section\r\n          icon={<PeopleIcon style={{ width: \"100%\", height: 160 }} />}\r\n          title=\"Presensi Murid \"\r\n          description=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\r\n          isLink={true}\r\n          id={id}\r\n          isStudent={isStudent}\r\n        />\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sections;\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Section\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\userReducer.js",["224"],"import { SET_CURRENT_USER } from \"../actions\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: action.payload,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\index.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\userAction.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\setAuthToken.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\proxy.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\errorReducer.js",["225"],"import { GET_ERRORS } from \"../actions\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\is-empty.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\PrivateRouteAdmin.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Admins\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\organisms\\Admin\\index.jsx",["226"],"import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport CKEditor from \"../../atoms/CKEditor\";\r\nimport Register from \"../../molecules/Register\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport color from \"../../../utils/color\";\r\nimport CreateTemplate from \"../../molecules/CreateTemplate\";\r\n\r\nfunction Admin() {\r\n  const [isRegister, setIsRegister] = React.useState(true);\r\n  const [isAnnouncement, setIsAnnouncement] = React.useState(false);\r\n  const [isMajor, setIsMajor] = React.useState(false);\r\n\r\n  const handleRegister = () => {\r\n    setIsRegister(true);\r\n    setIsAnnouncement(false);\r\n    setIsMajor(false);\r\n  };\r\n\r\n  const handleAnnouncement = () => {\r\n    setIsRegister(false);\r\n    setIsAnnouncement(true);\r\n    setIsMajor(false);\r\n  };\r\n\r\n  const handleIsMajor = () => {\r\n    setIsMajor(true);\r\n    setIsAnnouncement(false);\r\n    setIsMajor(false);\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    active: {\r\n      color: color.primary,\r\n      borderBottom: `4px solid ${color.primary}`,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper square>\r\n        <Tabs\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          aria-label=\"disabled tabs example\"\r\n        >\r\n          <Tab\r\n            label=\"Daftar\"\r\n            onClick={handleRegister}\r\n            className={isRegister && classes.active}\r\n          />\r\n          <Tab\r\n            label=\"Pengumuman\"\r\n            onClick={handleAnnouncement}\r\n            className={isAnnouncement && classes.active}\r\n          />\r\n        </Tabs>\r\n      </Paper>\r\n      <div style={{ marginTop: \"4rem\" }}></div>\r\n      {isRegister && <Register />}\r\n      {isAnnouncement && (\r\n        <CreateTemplate title=\"Buat Pengumuman\">\r\n          <CKEditor titles=\"Buat\" />{\" \"}\r\n        </CreateTemplate>\r\n      )}\r\n      {isMajor && (\r\n        <CreateTemplate title=\"Buat mata pelajaran\">\r\n          <CKEditor titles=\"Buat\" />{\" \"}\r\n        </CreateTemplate>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Register\\index.jsx",["227","228","229","230"],"import React from \"react\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport Input from \"../../atoms/Input\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport color from \"../../../utils/color\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../../redux/actions/userAction\";\r\nimport { clearErrorSucess } from \"../../../redux/actions/announcementAction\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\n\r\nfunction Register({ registerUser, error, sucess, clearErrorSucess }) {\r\n  const [users, setUser] = React.useState({\r\n    role: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    age: \"\",\r\n    address: \"\",\r\n    class: \"\",\r\n    religion: \"\",\r\n    majorId: [],\r\n    kelas: \"\",\r\n  });\r\n\r\n  const [majors, setMajors] = React.useState([]);\r\n\r\n  const [kelass, setClasss] = React.useState([]);\r\n\r\n  const handleChange = (e, name) => {\r\n    if (name === \"majorId\") {\r\n      if (users.majorId.includes(e.target.value)) {\r\n        users.majorId.filter((major) => {\r\n          return major !== e.target.value;\r\n        });\r\n        setUser({\r\n          ...users,\r\n        });\r\n      } else {\r\n        // const majorId = users.majorId.slice(0);\r\n        users.majorId.push(e.target.value);\r\n        setUser({\r\n          ...users,\r\n        });\r\n      }\r\n    } else {\r\n      users[name] = e.target.value;\r\n      setUser({ ...users });\r\n    }\r\n  };\r\n\r\n  const handleMenu = (e) => {\r\n    users[\"role\"] = e.target.value;\r\n    setUser({ ...users });\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      borderRadius: \"0.5rem\",\r\n      padding: \"2rem\",\r\n      backgroundColor: color.white,\r\n      boxShadow: \"0 1rem 3rem rgba(0, 0, 0, 0.175) !important\",\r\n    },\r\n    title: {\r\n      color: \"#404145\",\r\n      fontWeight: \"500\",\r\n    },\r\n    btn: {\r\n      marginTop: \"2rem\",\r\n    },\r\n    alert: {\r\n      marginTop: \"1.5rem\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    registerUser(users);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    clearErrorSucess();\r\n    axios.get(`${proxy}/api/majors/view`).then((res) => {\r\n      setMajors(res.data);\r\n    });\r\n    axios.get(`${proxy}/api/class/view`).then((res) => {\r\n      setClasss(res.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item xs={12} md={8}>\r\n        <form onSubmit={onSubmit}>\r\n          <div className={classes.root}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              component=\"h1\"\r\n              align=\"center\"\r\n              className={classes.title}\r\n            >\r\n              Daftar ke Jarpis\r\n            </Typography>\r\n            {/* <Input\r\n              id=\"role\"\r\n              label=\"Role\"\r\n              placeholder=\"contoh: siswa\"\r\n              handleChange={handleChange}\r\n            /> */}\r\n            <FormLabel component=\"legend\" style={{ marginTop: \"2rem\" }}>\r\n              <Typography variant=\"h5\" component=\"p\">\r\n                Role\r\n              </Typography>\r\n            </FormLabel>\r\n            <RadioGroup\r\n              aria-label=\"gender\"\r\n              name=\"Role\"\r\n              value={users.role}\r\n              onChange={handleMenu}\r\n              row\r\n            >\r\n              <FormControlLabel\r\n                value=\"siswa\"\r\n                control={<Radio />}\r\n                label=\"Siswa\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"teacher\"\r\n                control={<Radio />}\r\n                label=\"Guru\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"admin\"\r\n                control={<Radio />}\r\n                label=\"Admin\"\r\n              />\r\n            </RadioGroup>\r\n            {/* <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={users.role}\r\n              onChange={handleMenu}\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"siswa\">Siswa</MenuItem>\r\n              <MenuItem value=\"teacher\">Guru</MenuItem>\r\n              <MenuItem value=\"admin\">Admin</MenuItem>\r\n            </Select> */}\r\n            {/* <InputLabel\r\n              id=\"demo-simple-select-label\"\r\n              style={{ marginTop: \"2rem\" }}\r\n            >\r\n              Role\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={users.role}\r\n              onChange={handleMenu}\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"Siswa\">Siswa</MenuItem>\r\n              <MenuItem value=\"Guru\">Guru</MenuItem>\r\n              <MenuItem value=\"Admin\">Admin</MenuItem>\r\n            </Select> */}\r\n            <Input\r\n              id=\"username\"\r\n              label=\"Email / Username\"\r\n              placeholder=\"contoh: beta@gmail.com\"\r\n              handleChange={handleChange}\r\n            />\r\n            <Input\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              placeholder=\"*********\"\r\n              handleChange={handleChange}\r\n              isPassword={true}\r\n            />\r\n            <Input\r\n              id=\"name\"\r\n              label=\"Nama Lengkap\"\r\n              placeholder=\"contoh: Beta Kurnia\"\r\n              handleChange={handleChange}\r\n            />\r\n\r\n            {users.role === \"teacher\" && (\r\n              <React.Fragment>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  style={{ marginTop: \"1.5rem\" }}\r\n                >\r\n                  <FormLabel component=\"legend\">Mata Pelajaran</FormLabel>\r\n                  <FormGroup row>\r\n                    {majors.map((major) => (\r\n                      <React.Fragment>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              // checked={gilad}\r\n                              value={major._id}\r\n                              onChange={(e) => {\r\n                                handleChange(e, \"majorId\");\r\n                              }}\r\n                              name={major.majorName}\r\n                            />\r\n                          }\r\n                          label={major.majorName}\r\n                        />\r\n                      </React.Fragment>\r\n                    ))}\r\n                  </FormGroup>\r\n                </FormControl>\r\n                <div style={{ marginTop: \"1.5rem\" }}></div>\r\n                <label>Kelas</label>\r\n                {/* <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                    Kelas\r\n                  </InputLabel> */}\r\n                <Select\r\n                  style={{ display: \"inline-block\", width: \"100%\" }}\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={users.kelas}\r\n                  onChange={(e) => handleChange(e, \"kelas\")}\r\n                  fullWidth\r\n                >\r\n                  {kelass.map((kelas) => (\r\n                    <MenuItem value={kelas._id}>{kelas.kelas}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </React.Fragment>\r\n            )}\r\n\r\n            {users.role === \"siswa\" && (\r\n              <React.Fragment>\r\n                <Input\r\n                  id=\"class\"\r\n                  label=\"Kelas\"\r\n                  placeholder=\"contoh: 7a\"\r\n                  handleChange={handleChange}\r\n                />\r\n                <Input\r\n                  id=\"age\"\r\n                  label=\"Umur\"\r\n                  placeholder=\"contoh: 14 tahun\"\r\n                  handleChange={handleChange}\r\n                />\r\n                <Input\r\n                  id=\"address\"\r\n                  label=\"Alamat\"\r\n                  placeholder=\"contoh: Blater\"\r\n                  handleChange={handleChange}\r\n                />\r\n                <Input\r\n                  id=\"religion\"\r\n                  label=\"Agama\"\r\n                  placeholder=\"contoh: ISLAM\"\r\n                  handleChange={handleChange}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            {!isEmpty(error) && (\r\n              <Alert className={classes.alert} severity=\"error\">\r\n                {error.username || error.password || error.role || error.name}\r\n              </Alert>\r\n            )}\r\n            {sucess && (\r\n              <Alert className={classes.alert}> Akun berhasil dibuat</Alert>\r\n            )}\r\n            <Grid container justify=\"center\">\r\n              <Grid item xs={12} md={4}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  className={classes.btn}\r\n                >\r\n                  Daftar\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  error: state.error,\r\n  sucess: state.sucess,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { registerUser, clearErrorSucess })(Register)\r\n);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\CKEditor\\index.jsx",["231"],"import React from \"react\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport Input from \"../Input\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addAnnouncement,\r\n  updateAnnouncement,\r\n  clearErrorSucess,\r\n} from \"../../../redux/actions/announcementAction\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction CKEditors({\r\n  addAnnouncement,\r\n  titles,\r\n  id,\r\n  updateAnnouncement,\r\n  sucess,\r\n  clearErrorSucess,\r\n  history,\r\n  error,\r\n}) {\r\n  const useStyles = makeStyles({\r\n    btn: {\r\n      marginTop: \"2rem\",\r\n    },\r\n    alert: {\r\n      marginTop: \"1.5rem\",\r\n    },\r\n  });\r\n\r\n  const [announcement, setAnnouncement] = React.useState({\r\n    title: \"\",\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\",\r\n  });\r\n\r\n  const handleAnnouncement = (e, name) => {\r\n    announcement[name] = e.target.value;\r\n    setAnnouncement({ ...announcement });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (id) {\r\n      updateAnnouncement(id, announcement, history);\r\n    } else {\r\n      addAnnouncement(announcement, history);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    clearErrorSucess();\r\n    if (id) {\r\n      axios\r\n        .get(`${proxy}/api/announcement/view/${id}`)\r\n        .then((res) => {\r\n          announcement[\"title\"] = res.data.title;\r\n          announcement[\"description\"] = res.data.description;\r\n\r\n          setAnnouncement({ ...announcement });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <Input\r\n          id=\"title\"\r\n          label=\"Judul\"\r\n          placeholder=\"\"\r\n          handleChange={handleAnnouncement}\r\n          value={announcement.title}\r\n        />\r\n        <div style={{ marginTop: \"1.5rem\" }}>\r\n          <label style={{ color: \"rgba(0, 0, 0, 0.54)\" }}>Deskripsi</label>\r\n          <div style={{ marginTop: \"0.5rem\" }}></div>\r\n          <CKEditor\r\n            editor={ClassicEditor}\r\n            data={announcement.description}\r\n            onReady={(editor) => {\r\n              // You can store the \"editor\" and use when it is needed.\r\n              console.log(\"Editor is ready to use!\", editor);\r\n            }}\r\n            onChange={(event, editor) => {\r\n              const data = editor.getData();\r\n              console.log({ data });\r\n              announcement[\"description\"] = data;\r\n              setAnnouncement(announcement);\r\n            }}\r\n            onBlur={(event, editor) => {\r\n              console.log(\"Blur.\", editor);\r\n            }}\r\n            onFocus={(event, editor) => {\r\n              console.log(\"Focus.\", editor);\r\n            }}\r\n          />\r\n        </div>\r\n        {sucess && (\r\n          <Alert className={classes.alert}>\r\n            {titles} data pengumuman sukses\r\n          </Alert>\r\n        )}\r\n        {!isEmpty(error) && (\r\n          <Alert className={classes.alert} severity=\"error\">\r\n            {error.title || error.description}\r\n          </Alert>\r\n        )}\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12} md={4}>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              className={classes.btn}\r\n            >\r\n              {titles}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  sucess: state.sucess,\r\n  error: state.error,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    addAnnouncement,\r\n    updateAnnouncement,\r\n    clearErrorSucess,\r\n  })(CKEditors)\r\n);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\announcementReducer.js",["232"],"import { GET_ANNOUNCMENT } from \"../actions\";\r\n\r\nconst initialState = {\r\n  announcement: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ANNOUNCMENT:\r\n      return {\r\n        ...state,\r\n        announcement: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\announcementAction.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\sucessReducer.js",["233"],"import { SET_SUCESS } from \"../actions\";\r\n\r\nconst initialState = false;\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_SUCESS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\CreateTemplate\\index.jsx",["234","235","236","237","238"],"import React from \"react\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport Input from \"../../atoms/Input\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport color from \"../../../utils/color\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../../redux/actions/userAction\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction Register({ registerUser, error, sucess, title, children }) {\r\n  const [users, setUser] = React.useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    role: \"\",\r\n  });\r\n\r\n  const handleChange = (e, name) => {\r\n    users[name] = e.target.value;\r\n    setUser(users);\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      // border: `1px solid ${color.white}`,\r\n      borderRadius: \"0.5rem\",\r\n      padding: \"2rem\",\r\n      backgroundColor: color.white,\r\n      boxShadow: \"0 1rem 3rem rgba(0, 0, 0, 0.175) !important\",\r\n    },\r\n    title: {\r\n      color: \"#404145\",\r\n      fontWeight: \"500\",\r\n    },\r\n    btn: {\r\n      marginTop: \"2rem\",\r\n    },\r\n    alert: {\r\n      marginTop: \"1.5rem\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item xs={12} md={8}>\r\n        <div className={classes.root}>\r\n          <Typography\r\n            variant=\"h4\"\r\n            component=\"h1\"\r\n            align=\"center\"\r\n            className={classes.title}\r\n          >\r\n            {title}\r\n          </Typography>\r\n          {children}\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  error: state.error,\r\n  sucess: state.sucess,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { registerUser })(Register));\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\AnnouncementUpdate\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Present\\index.jsx",["239"],"import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport color from \"../../../utils/color\";\r\nimport Table from \"../../atoms/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\n\r\nfunction Present() {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: color.white,\r\n      padding: \"2rem\",\r\n      boxShadow: \"0 .5rem 1rem rgba(0,0,0,.15)\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const { id } = useParams();\r\n\r\n  const [major, setMajor] = React.useState({});\r\n\r\n  React.useEffect(() => {\r\n    axios\r\n      .get(`${proxy}/api/majors/view/${id}`)\r\n      .then((res) => {\r\n        setMajor(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h4\" component=\"h1\">\r\n        Daftar hadir siswa\r\n      </Typography>\r\n      <Table id={id} major={major} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Present;\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Table\\index.jsx",["240","241","242","243","244"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport color from \"../../../utils/color\";\r\nimport dateformat from \"dateformat\";\r\nimport Badge from \"../../atoms/Badge\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  blue: {\r\n    backgroundColor: \"#3f51b5\",\r\n    padding: \"0.5rem 1rem\",\r\n    color: \"#ffffff\",\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n];\r\n\r\nfunction BasicTable({ id, user, major }) {\r\n  var dateFormat = require(\"dateformat\");\r\n  dateFormat.i18n = {\r\n    dayNames: [\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum'at\",\r\n      \"Sabtu\",\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum;at\",\r\n      \"Sabtu\",\r\n    ],\r\n    monthNames: [\r\n      \"Junuari\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n      \"Januari\",\r\n      \"Februari\",\r\n      \"Maret\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"Desember\",\r\n    ],\r\n    timeNames: [\"a\", \"p\", \"am\", \"pm\", \"A\", \"P\", \"AM\", \"PM\"],\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [presents, setPresents] = React.useState({\r\n    status: [],\r\n  });\r\n\r\n  const [present, setPresent] = React.useState({\r\n    userId: \"\",\r\n    majorId: \"\",\r\n    status: \"hadir\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    present[\"status\"] = event.target.value;\r\n    setPresent({ ...present });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setOpen(false);\r\n\r\n    axios\r\n      .post(`${proxy}/api/presents/create`, present)\r\n      .then((res) => {\r\n        setPresents({ ...res.data });\r\n      })\r\n      .catch((err) => console.log(err.response.data));\r\n  };\r\n\r\n  const [undoneArray, setUndoneArray] = React.useState([]);\r\n\r\n  let i = 0;\r\n\r\n  React.useEffect(() => {\r\n    present[\"userId\"] = user.user.id;\r\n    present[\"majorId\"] = id;\r\n    setPresent({ ...present });\r\n\r\n    axios\r\n      .get(`${proxy}/api/presents/view/${user.user.id}/${id}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setPresents({ ...res.data });\r\n        if (!isEmpty(res.data)) {\r\n          setUndoneArray([...new Array(14 - res.data.status.length)]);\r\n        } else {\r\n          setUndoneArray([...new Array(14)]);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginTop: \"3rem\" }}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead style={{ backgroundColor: color.primary }}>\r\n          <TableRow>\r\n            <TableCell style={{ color: color.white }}>Tanggal</TableCell>\r\n            <TableCell style={{ color: color.white }}>Deskripsi</TableCell>\r\n            <TableCell style={{ color: color.white }}>Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {!isEmpty(presents.status) &&\r\n            presents.status.map((status) => (\r\n              <TableRow key={status}>\r\n                <TableCell>\r\n                  {\" \"}\r\n                  <p>\r\n                    {dateFormat(\r\n                      i * 604800000 + Date.parse(major.hoursOfSubject),\r\n                      \"mmmm d, yyyy \"\r\n                    )}\r\n                  </p>\r\n                  <p style={{ lineHeight: 0.5 }} test={i++}>\r\n                    {dateFormat(major.hoursOfSubject, \"dddd hh:MM TT\")} -{\" \"}\r\n                    {dateFormat(major.hoursOfSubjectFinish, \"hh:MM TT\")}\r\n                  </p>\r\n                </TableCell>\r\n                <TableCell style={{ color: \"#9e9e9e\" }}>\r\n                  Absen sudah ditutup\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Badge status={status} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          {undoneArray.map((undone, index) => (\r\n            <TableRow key={undone}>\r\n              <TableCell>\r\n                {\" \"}\r\n                <p>\r\n                  {dateFormat(\r\n                    i * 604800000 + Date.parse(major.hoursOfSubject),\r\n                    \"mmmm d, yyyy \"\r\n                  )}\r\n                </p>\r\n                <p style={{ lineHeight: 0.5 }} test={i++}>\r\n                  {dateFormat(major.hoursOfSubject, \"dddd hh:MM TT\")} -{\" \"}\r\n                  {dateFormat(major.hoursOfSubjectFinish, \"hh:MM TT\")}\r\n                </p>\r\n              </TableCell>\r\n              {Date.parse(new Date()) > Date.parse(major.hoursOfSubject) ? (\r\n                <TableCell\r\n                  onClick={handleClickOpen}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  Absen disini\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell style={{ color: \"#9e9e9e\" }}>\r\n                  Absen belum tersedia\r\n                </TableCell>\r\n              )}\r\n\r\n              <TableCell>\r\n                <span className={classes.blue}>Belum absen</span>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent style={{ minWidth: 480 }}>\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              Kehadiran\r\n            </Typography>\r\n          </DialogTitle>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                aria-label=\"gender\"\r\n                name=\"gender1\"\r\n                value={present.status}\r\n                onChange={handleChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Hadir\"\r\n                  control={<Radio />}\r\n                  label=\"Hadir\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Sakit\"\r\n                  control={<Radio />}\r\n                  label=\"Sakit\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Tidak Hadir\"\r\n                  control={<Radio />}\r\n                  label=\"Tidak hadir\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n            style={{ color: \"#dc3545\" }}\r\n          >\r\n            Batal\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            onClick={handleSubmit}\r\n            color=\"primary\"\r\n            autoFocus\r\n            style={{ backgroundColor: \"#008000\", color: \"#ffffff\" }}\r\n          >\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BasicTable);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Pengumuman\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Badge\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Theory\\index.jsx",["245"],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\TheoryTemplate\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Exams\\index.jsx",["246","247","248","249"],{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":21,"column":8,"nodeType":"256","messageId":"257","endLine":21,"endColumn":14},{"ruleId":"254","severity":1,"message":"258","line":9,"column":8,"nodeType":"256","messageId":"257","endLine":9,"endColumn":14},{"ruleId":"254","severity":1,"message":"259","line":10,"column":8,"nodeType":"256","messageId":"257","endLine":10,"endColumn":24},{"ruleId":"254","severity":1,"message":"260","line":15,"column":3,"nodeType":"256","messageId":"257","endLine":15,"endColumn":7},{"ruleId":"254","severity":1,"message":"261","line":16,"column":3,"nodeType":"256","messageId":"257","endLine":16,"endColumn":6},{"ruleId":"254","severity":1,"message":"262","line":18,"column":3,"nodeType":"256","messageId":"257","endLine":18,"endColumn":12},{"ruleId":"254","severity":1,"message":"263","line":19,"column":3,"nodeType":"256","messageId":"257","endLine":19,"endColumn":9},{"ruleId":"254","severity":1,"message":"264","line":32,"column":8,"nodeType":"256","messageId":"257","endLine":32,"endColumn":29},{"ruleId":"254","severity":1,"message":"265","line":94,"column":24,"nodeType":"256","messageId":"257","endLine":94,"endColumn":39},{"ruleId":"254","severity":1,"message":"266","line":96,"column":18,"nodeType":"256","messageId":"257","endLine":96,"endColumn":27},{"ruleId":"254","severity":1,"message":"267","line":109,"column":10,"nodeType":"256","messageId":"257","endLine":109,"endColumn":18},{"ruleId":"254","severity":1,"message":"268","line":109,"column":20,"nodeType":"256","messageId":"257","endLine":109,"endColumn":31},{"ruleId":"254","severity":1,"message":"269","line":117,"column":10,"nodeType":"256","messageId":"257","endLine":117,"endColumn":18},{"ruleId":"254","severity":1,"message":"270","line":117,"column":20,"nodeType":"256","messageId":"257","endLine":117,"endColumn":31},{"ruleId":"271","severity":1,"message":"272","line":154,"column":6,"nodeType":"273","endLine":154,"endColumn":33,"suggestions":"274"},{"ruleId":"271","severity":1,"message":"275","line":55,"column":6,"nodeType":"273","endLine":55,"endColumn":8,"suggestions":"276"},{"ruleId":"277","severity":1,"message":"278","line":1,"column":1,"nodeType":"279","endLine":7,"endColumn":3},{"ruleId":"277","severity":1,"message":"278","line":1,"column":1,"nodeType":"279","endLine":3,"endColumn":3},{"ruleId":"271","severity":1,"message":"280","line":23,"column":6,"nodeType":"273","endLine":23,"endColumn":8,"suggestions":"281"},{"ruleId":"254","severity":1,"message":"262","line":3,"column":10,"nodeType":"256","messageId":"257","endLine":3,"endColumn":19},{"ruleId":"254","severity":1,"message":"282","line":7,"column":9,"nodeType":"256","messageId":"257","endLine":7,"endColumn":18},{"ruleId":"271","severity":1,"message":"283","line":10,"column":6,"nodeType":"273","endLine":10,"endColumn":8,"suggestions":"284"},{"ruleId":"254","severity":1,"message":"285","line":6,"column":8,"nodeType":"256","messageId":"257","endLine":6,"endColumn":19},{"ruleId":"254","severity":1,"message":"286","line":15,"column":10,"nodeType":"256","messageId":"257","endLine":15,"endColumn":19},{"ruleId":"254","severity":1,"message":"287","line":5,"column":8,"nodeType":"256","messageId":"257","endLine":5,"endColumn":23},{"ruleId":"254","severity":1,"message":"288","line":7,"column":8,"nodeType":"256","messageId":"257","endLine":7,"endColumn":13},{"ruleId":"277","severity":1,"message":"289","line":8,"column":1,"nodeType":"279","endLine":19,"endColumn":2},{"ruleId":"277","severity":1,"message":"289","line":5,"column":1,"nodeType":"279","endLine":12,"endColumn":2},{"ruleId":"254","severity":1,"message":"290","line":28,"column":9,"nodeType":"256","messageId":"257","endLine":28,"endColumn":22},{"ruleId":"254","severity":1,"message":"291","line":13,"column":8,"nodeType":"256","messageId":"257","endLine":13,"endColumn":18},{"ruleId":"254","severity":1,"message":"292","line":22,"column":8,"nodeType":"256","messageId":"257","endLine":22,"endColumn":22},{"ruleId":"254","severity":1,"message":"293","line":99,"column":9,"nodeType":"256","messageId":"257","endLine":99,"endColumn":17},{"ruleId":"271","severity":1,"message":"294","line":109,"column":6,"nodeType":"273","endLine":109,"endColumn":8,"suggestions":"295"},{"ruleId":"271","severity":1,"message":"296","line":74,"column":6,"nodeType":"273","endLine":74,"endColumn":8,"suggestions":"297"},{"ruleId":"277","severity":1,"message":"289","line":7,"column":1,"nodeType":"279","endLine":17,"endColumn":2},{"ruleId":"277","severity":1,"message":"289","line":5,"column":1,"nodeType":"279","endLine":12,"endColumn":2},{"ruleId":"254","severity":1,"message":"298","line":2,"column":28,"nodeType":"256","messageId":"257","endLine":2,"endColumn":34},{"ruleId":"254","severity":1,"message":"299","line":3,"column":10,"nodeType":"256","messageId":"257","endLine":3,"endColumn":15},{"ruleId":"254","severity":1,"message":"300","line":4,"column":8,"nodeType":"256","messageId":"257","endLine":4,"endColumn":13},{"ruleId":"254","severity":1,"message":"301","line":9,"column":8,"nodeType":"256","messageId":"257","endLine":9,"endColumn":15},{"ruleId":"254","severity":1,"message":"302","line":19,"column":9,"nodeType":"256","messageId":"257","endLine":19,"endColumn":21},{"ruleId":"271","severity":1,"message":"303","line":32,"column":6,"nodeType":"273","endLine":32,"endColumn":8,"suggestions":"304"},{"ruleId":"254","severity":1,"message":"305","line":10,"column":10,"nodeType":"256","messageId":"257","endLine":10,"endColumn":14},{"ruleId":"254","severity":1,"message":"306","line":21,"column":8,"nodeType":"256","messageId":"257","endLine":21,"endColumn":17},{"ruleId":"254","severity":1,"message":"307","line":28,"column":8,"nodeType":"256","messageId":"257","endLine":28,"endColumn":18},{"ruleId":"254","severity":1,"message":"308","line":47,"column":7,"nodeType":"256","messageId":"257","endLine":47,"endColumn":11},{"ruleId":"271","severity":1,"message":"309","line":163,"column":6,"nodeType":"273","endLine":163,"endColumn":8,"suggestions":"310"},{"ruleId":"254","severity":1,"message":"311","line":2,"column":8,"nodeType":"256","messageId":"257","endLine":2,"endColumn":16},{"ruleId":"254","severity":1,"message":"311","line":2,"column":8,"nodeType":"256","messageId":"257","endLine":2,"endColumn":16},{"ruleId":"254","severity":1,"message":"312","line":13,"column":8,"nodeType":"256","messageId":"257","endLine":13,"endColumn":22},{"ruleId":"254","severity":1,"message":"313","line":41,"column":9,"nodeType":"256","messageId":"257","endLine":41,"endColumn":19},{"ruleId":"271","severity":1,"message":"314","line":69,"column":6,"nodeType":"273","endLine":69,"endColumn":8,"suggestions":"315"},"no-native-reassign",["316"],"no-negated-in-lhs",["317"],"no-unused-vars","'Admins' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'Hidden' is defined but never used.","'SupervisorAccountIcon' is defined but never used.","'setIsShowTheory' is assigned a value but never used.","'setAdmins' is assigned a value but never used.","'teachers' is assigned a value but never used.","'setTeachers' is assigned a value but never used.","'subTopic' is assigned a value but never used.","'setSubTopic' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'user.isAuthenticated.majorId'. Either include it or remove the dependency array.","ArrayExpression",["318"],"React Hook React.useEffect has missing dependencies: 'history' and 'user.isAuthenticated'. Either include them or remove the dependency array.",["319"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook React.useEffect has missing dependencies: 'user.isAuthenticated.majorId' and 'user.isAuthenticated.role'. Either include them or remove the dependency array.",["320"],"'useStyles' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'viewAnnouncement'. Either include it or remove the dependency array. If 'viewAnnouncement' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["321"],"'DialogTitle' is defined but never used.","'useParams' is defined but never used.","'DescriptionIcon' is defined but never used.","'color' is defined but never used.","Unexpected default export of anonymous function","'handleIsMajor' is assigned a value but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'clearErrorSucess'. Either include it or remove the dependency array. If 'clearErrorSucess' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["322"],"React Hook React.useEffect has missing dependencies: 'announcement', 'clearErrorSucess', and 'id'. Either include them or remove the dependency array. If 'clearErrorSucess' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["323"],"'Button' is defined but never used.","'Alert' is defined but never used.","'Input' is defined but never used.","'isEmpty' is defined but never used.","'handleChange' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["324"],"'Link' is defined but never used.","'FormLabel' is defined but never used.","'dateformat' is defined but never used.","'rows' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'id', 'present', and 'user.user.id'. Either include them or remove the dependency array. You can also do a functional update 'setPresent(p => ...)' if you only need 'present' in the 'setPresent' call.",["325"],"'CKEditor' is defined but never used.","'AssignmentIcon' is defined but never used.","'handleTipe' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'exam'. Either include it or remove the dependency array. You can also do a functional update 'setExam(e => ...)' if you only need 'exam' in the 'setExam' call.",["326"],"no-global-assign","no-unsafe-negation",{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"327","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},"Update the dependencies array to be: [user.isAuthenticated.majorId, user.isAuthenticated.role]",{"range":"344","text":"345"},"Update the dependencies array to be: [history, user.isAuthenticated]",{"range":"346","text":"347"},{"range":"348","text":"345"},"Update the dependencies array to be: [viewAnnouncement]",{"range":"349","text":"350"},"Update the dependencies array to be: [clearErrorSucess]",{"range":"351","text":"352"},"Update the dependencies array to be: [announcement, clearErrorSucess, id]",{"range":"353","text":"354"},"Update the dependencies array to be: [id]",{"range":"355","text":"356"},"Update the dependencies array to be: [id, present, user.user.id]",{"range":"357","text":"358"},"Update the dependencies array to be: [exam]",{"range":"359","text":"360"},[4218,4245],"[user.isAuthenticated.majorId, user.isAuthenticated.role]",[1393,1395],"[history, user.isAuthenticated]",[682,684],[377,379],"[viewAnnouncement]",[3126,3128],"[clearErrorSucess]",[2430,2432],"[announcement, clearErrorSucess, id]",[840,842],"[id]",[4325,4327],"[id, present, user.user.id]",[2030,2032],"[exam]"]