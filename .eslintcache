[{"E:\\Web\\JS\\React\\jarpis\\client\\src\\index.js":"1","E:\\Web\\JS\\React\\jarpis\\client\\src\\App.js":"2","E:\\Web\\JS\\React\\jarpis\\client\\src\\store.js":"3","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\index.js":"4","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\layout\\Navbar\\index.jsx":"5","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Login\\index.jsx":"6","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\color.js":"7","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\layout\\Footer\\index.jsx":"8","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\size.js":"9","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Input\\index.jsx":"10","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\PrivateRoute.jsx":"11","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Dashboard\\index.jsx":"12","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Announcment\\index.jsx":"13","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\CardAnnouncement\\index.jsx":"14","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Major\\index.jsx":"15","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Section\\index.jsx":"16","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\userReducer.js":"17","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\index.js":"18","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\userAction.js":"19","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\setAuthToken.js":"20","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\proxy.js":"21","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\errorReducer.js":"22","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\is-empty.js":"23","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\PrivateRouteAdmin.jsx":"24","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Register\\index.jsx":"25","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\announcementReducer.js":"26","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\announcementAction.js":"27","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\sucessReducer.js":"28","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\AnnouncementUpdate\\index.jsx":"29","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Present\\index.jsx":"30","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Pengumuman\\index.jsx":"31","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Badge\\index.jsx":"32","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Theory\\index.jsx":"33","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Exams\\index.jsx":"34","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\ExamsStudent\\index.jsx":"35","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\examAction.js":"36","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Profile\\index.jsx":"37","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\RecapitulationValue\\index.jsx":"38","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Recapitulation\\index.jsx":"39","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\RecapitulationStudent\\index.jsx":"40","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\CKEditor\\index.jsx":"41","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\helperAction.js":"42","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ButtonRed\\index.jsx":"43","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ButtonDanger\\index.jsx":"44","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Table\\index.jsx":"45","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Card\\index.jsx":"46","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\organisms\\Sections\\index.jsx":"47","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ButtonInfo\\index.jsx":"48","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ErrorSucess\\index.jsx":"49","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Create\\index.jsx":"50","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ExamSection\\index.jsx":"51","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\QuestionExam\\index.jsx":"52","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\TheorySection\\index.jsx":"53","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\TheoryTemplate\\index.jsx":"54","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\CredentialData\\index.jsx":"55"},{"size":197,"mtime":1607606201596,"results":"56","hashOfConfig":"57"},{"size":4384,"mtime":1608906919314,"results":"58","hashOfConfig":"57"},{"size":437,"mtime":1607609459473,"results":"59","hashOfConfig":"57"},{"size":396,"mtime":1607722526773,"results":"60","hashOfConfig":"57"},{"size":15507,"mtime":1609062000745,"results":"61","hashOfConfig":"57"},{"size":5784,"mtime":1609169137880,"results":"62","hashOfConfig":"57"},{"size":254,"mtime":1609148086384,"results":"63","hashOfConfig":"57"},{"size":824,"mtime":1608905042467,"results":"64","hashOfConfig":"57"},{"size":57,"mtime":1608907817813,"results":"65","hashOfConfig":"57"},{"size":1092,"mtime":1608915502309,"results":"66","hashOfConfig":"57"},{"size":592,"mtime":1607729791233,"results":"67","hashOfConfig":"57"},{"size":1284,"mtime":1608915156183,"results":"68","hashOfConfig":"57"},{"size":869,"mtime":1608915204816,"results":"69","hashOfConfig":"57"},{"size":3794,"mtime":1609170578675,"results":"70","hashOfConfig":"57"},{"size":2006,"mtime":1609152877648,"results":"71","hashOfConfig":"57"},{"size":1375,"mtime":1608905008677,"results":"72","hashOfConfig":"57"},{"size":665,"mtime":1608914836436,"results":"73","hashOfConfig":"57"},{"size":343,"mtime":1608107259180,"results":"74","hashOfConfig":"57"},{"size":2432,"mtime":1608107332339,"results":"75","hashOfConfig":"57"},{"size":313,"mtime":1607685745328,"results":"76","hashOfConfig":"57"},{"size":65,"mtime":1608125450327,"results":"77","hashOfConfig":"57"},{"size":263,"mtime":1608914855607,"results":"78","hashOfConfig":"57"},{"size":234,"mtime":1607687543429,"results":"79","hashOfConfig":"57"},{"size":644,"mtime":1607729800135,"results":"80","hashOfConfig":"57"},{"size":10372,"mtime":1609098847859,"results":"81","hashOfConfig":"57"},{"size":357,"mtime":1608914795229,"results":"82","hashOfConfig":"57"},{"size":1589,"mtime":1608903801062,"results":"83","hashOfConfig":"57"},{"size":267,"mtime":1608914902778,"results":"84","hashOfConfig":"57"},{"size":399,"mtime":1609064140217,"results":"85","hashOfConfig":"57"},{"size":1118,"mtime":1608995825252,"results":"86","hashOfConfig":"57"},{"size":289,"mtime":1609064207499,"results":"87","hashOfConfig":"57"},{"size":1077,"mtime":1608996393733,"results":"88","hashOfConfig":"57"},{"size":5647,"mtime":1609170027463,"results":"89","hashOfConfig":"57"},{"size":6578,"mtime":1609152941497,"results":"90","hashOfConfig":"57"},{"size":5067,"mtime":1609152301105,"results":"91","hashOfConfig":"57"},{"size":1542,"mtime":1608905846992,"results":"92","hashOfConfig":"57"},{"size":2992,"mtime":1608999057436,"results":"93","hashOfConfig":"57"},{"size":4481,"mtime":1609160825481,"results":"94","hashOfConfig":"57"},{"size":4894,"mtime":1609162085826,"results":"95","hashOfConfig":"57"},{"size":4329,"mtime":1609161176569,"results":"96","hashOfConfig":"57"},{"size":4728,"mtime":1609074761363,"results":"97","hashOfConfig":"57"},{"size":557,"mtime":1608904383644,"results":"98","hashOfConfig":"57"},{"size":516,"mtime":1608907019183,"results":"99","hashOfConfig":"57"},{"size":637,"mtime":1608994925313,"results":"100","hashOfConfig":"57"},{"size":8694,"mtime":1608996782394,"results":"101","hashOfConfig":"57"},{"size":2213,"mtime":1609061925627,"results":"102","hashOfConfig":"57"},{"size":5137,"mtime":1609169598185,"results":"103","hashOfConfig":"57"},{"size":700,"mtime":1609165362118,"results":"104","hashOfConfig":"57"},{"size":844,"mtime":1609083043707,"results":"105","hashOfConfig":"57"},{"size":1447,"mtime":1609083043707,"results":"106","hashOfConfig":"57"},{"size":5523,"mtime":1609170484577,"results":"107","hashOfConfig":"57"},{"size":2046,"mtime":1609001128459,"results":"108","hashOfConfig":"57"},{"size":5043,"mtime":1609170443418,"results":"109","hashOfConfig":"57"},{"size":893,"mtime":1609148099433,"results":"110","hashOfConfig":"57"},{"size":749,"mtime":1609169381269,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1sid8fm",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"114"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"114"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"114"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"114"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"E:\\Web\\JS\\React\\jarpis\\client\\src\\index.js",[],["231","232"],"E:\\Web\\JS\\React\\jarpis\\client\\src\\App.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\store.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\index.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\layout\\Navbar\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Login\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\color.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\layout\\Footer\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\size.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Input\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\PrivateRoute.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Dashboard\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Announcment\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\CardAnnouncement\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Major\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Section\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\userReducer.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\index.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\userAction.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\setAuthToken.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\proxy.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\errorReducer.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\is-empty.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\PrivateRouteAdmin.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Register\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\announcementReducer.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\announcementAction.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\sucessReducer.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\AnnouncementUpdate\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Present\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Pengumuman\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Badge\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Theory\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Exams\\index.jsx",["233"],"import React from \"react\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Input from \"../../atoms/Input\";\r\nimport Create from \"../../atoms/Create\";\r\n\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport color from \"../../../utils/color\";\r\nimport { createExam } from \"../../../redux/actions/examAction\";\r\nimport { clearErrorSucess } from \"../../../redux/actions/helperAction\";\r\n\r\nfunction Exams({ error, sucess, createExam, user, clearErrorSucess }) {\r\n  const { ujian, id } = useParams();\r\n\r\n  const [exam, setExam] = React.useState([...new Array(5)]);\r\n\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const handleMenus = (e, i) => {\r\n    exam[i].answer = e.target.value;\r\n\r\n    setExam([...exam]);\r\n  };\r\n\r\n  const handleAdd = (e) => {\r\n    const question = [\r\n      { examName: \"\", possibilitesAnswer: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n      { examName: \"\", possibilitesAnswer: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n      { examName: \"\", possibilitesAnswer: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n      { examName: \"\", possibilitesAnswer: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n      { examName: \"\", possibilitesAnswer: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n    ];\r\n    setExam([...exam, ...question]);\r\n  };\r\n\r\n  const handleChange = (e, id, idx = false) => {\r\n    if (idx === false) {\r\n      exam[id].examName = e.target.value;\r\n      setExam([...exam]);\r\n    } else {\r\n      exam[id].possibilitesAnswer[idx] = e.target.value;\r\n      setExam([...exam]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    createExam({\r\n      userId: \"guru\",\r\n      teacherId: user.user.id,\r\n      majorId: id,\r\n      question: exam,\r\n      type: ujian,\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    clearErrorSucess();\r\n    axios.get(`${proxy}/api/exams/view/${id}?type=${ujian}`).then((res) => {\r\n      if (res.data) {\r\n        console.log(res.data);\r\n        setExam([...res.data.question]);\r\n      } else {\r\n        exam.forEach((a, i) => {\r\n          let obj = {\r\n            examName: \"\",\r\n            possibilitesAnswer: [\"\", \"\", \"\", \"\"],\r\n            answer: \"\",\r\n          };\r\n          exam[i] = obj;\r\n        });\r\n        setExam([...exam]);\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <Create title={`${ujian.split(\"-\").join(\" \")}`}>\r\n      <div\r\n        style={{\r\n          paddingBottom: \"2rem\",\r\n          borderBottom: `0.05px solid ${color.greyLight}`,\r\n        }}\r\n      ></div>\r\n      {!loading &&\r\n        exam.map((arr, i) => (\r\n          <React.Fragment>\r\n            <Input\r\n              id={i}\r\n              label={`Soal no ${i + 1}`}\r\n              placeholder=\"\"\r\n              handleChange={handleChange}\r\n              value={arr.examName}\r\n            ></Input>\r\n            <ul style={{ listStyle: \"none\" }}>\r\n              <RadioGroup\r\n                aria-label=\"answer\"\r\n                name={i}\r\n                value={arr.answer}\r\n                onChange={(e) => {\r\n                  handleMenus(e, i);\r\n                }}\r\n              >\r\n                <li style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n                  {\" \"}\r\n                  <FormControlLabel value=\"a\" control={<Radio />} />{\" \"}\r\n                  <Input\r\n                    id={`${i}`}\r\n                    label=\"Jawaban a\"\r\n                    // placeholder=\"contoh: 1 + 1\"\r\n                    idx={0}\r\n                    handleChange={handleChange}\r\n                    value={arr.possibilitesAnswer[0]}\r\n                  ></Input>\r\n                </li>\r\n                <li style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n                  <FormControlLabel value=\"b\" control={<Radio />} />{\" \"}\r\n                  <Input\r\n                    id={`${i}`}\r\n                    label=\"Jawaban b\"\r\n                    // placeholder=\"contoh: 1 + 1\"\r\n                    idx={1}\r\n                    handleChange={handleChange}\r\n                    value={arr.possibilitesAnswer[1]}\r\n                  ></Input>\r\n                </li>\r\n                <li style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n                  <FormControlLabel value=\"c\" control={<Radio />} />{\" \"}\r\n                  <Input\r\n                    id={`${i}`}\r\n                    label=\"Jawaban c\"\r\n                    // placeholder=\"contoh: 1 + 1\"\r\n                    idx={2}\r\n                    handleChange={handleChange}\r\n                    value={arr.possibilitesAnswer[2]}\r\n                  ></Input>\r\n                </li>\r\n                <li style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n                  <FormControlLabel value=\"d\" control={<Radio />} />{\" \"}\r\n                  <Input\r\n                    id={`${i}`}\r\n                    label=\"Jawaban d\"\r\n                    // placeholder=\"contoh: 1 + 1\"\r\n                    idx={3}\r\n                    handleChange={handleChange}\r\n                    value={arr.possibilitesAnswer[3]}\r\n                  ></Input>\r\n                </li>\r\n              </RadioGroup>\r\n            </ul>\r\n          </React.Fragment>\r\n        ))}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        style={{ marginTop: \"2rem\" }}\r\n        onClick={handleAdd}\r\n      >\r\n        Tambah 5 Soal <AddIcon style={{ paddingLeft: \"0.5rem\" }} />\r\n      </Button>{\" \"}\r\n      {sucess && <Alert style={{ marginTop: \"2rem\" }}>Berhasil dibuat </Alert>}\r\n      {!isEmpty(error) && (\r\n        <Alert severity=\"error\" style={{ marginTop: \"2rem\" }}>\r\n          {error.examStudentAnswer}\r\n        </Alert>\r\n      )}\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={12} md={6}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSubmit}\r\n            style={{ marginTop: \"1.5rem\" }}\r\n            fullWidth\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Create>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  error: state.error,\r\n  sucess: state.sucess,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createExam, clearErrorSucess })(\r\n  Exams\r\n);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\ExamsStudent\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\examAction.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Profile\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\RecapitulationValue\\index.jsx",["234"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport color from \"../../../utils/color\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  blue: {\r\n    backgroundColor: color.primary,\r\n    padding: \"0.5rem 1rem\",\r\n    color: color.white,\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n});\r\n\r\nfunction BasicTable({ user, major }) {\r\n  var dateFormat = require(\"dateformat\");\r\n  dateFormat.i18n = {\r\n    dayNames: [\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum'at\",\r\n      \"Sabtu\",\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum;at\",\r\n      \"Sabtu\",\r\n    ],\r\n    monthNames: [\r\n      \"Junuari\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n      \"Januari\",\r\n      \"Februari\",\r\n      \"Maret\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"Desember\",\r\n    ],\r\n    timeNames: [\"a\", \"p\", \"am\", \"pm\", \"A\", \"P\", \"AM\", \"PM\"],\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const { ujian, id } = useParams();\r\n\r\n  const [recapitulation, setRecapitulation] = React.useState([]);\r\n\r\n  const [present, setPresent] = React.useState({\r\n    userId: \"\",\r\n    majorId: \"\",\r\n    status: \"hadir\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    present[\"userId\"] = user.user.id;\r\n    present[\"majorId\"] = id;\r\n    setPresent({ ...present });\r\n\r\n    axios\r\n      .get(`${proxy}/api/exams/view/recapitulation/${id}?type=${ujian}`)\r\n      .then((res) => {\r\n        setRecapitulation([...res.data]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [id, ujian]);\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginTop: \"3rem\" }}>\r\n      <Table\r\n        className={classes.table}\r\n        aria-label=\"simple table\"\r\n        style={{ marginTop: \"2rem\" }}\r\n      >\r\n        <TableHead style={{ backgroundColor: color.primary }}>\r\n          <TableRow>\r\n            <TableCell style={{ color: color.white }}>Siswa</TableCell>\r\n            <TableCell style={{ color: color.white }}>Nilai</TableCell>\r\n            <TableCell style={{ color: color.white }}>Mata Pelajaran</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {!isEmpty(recapitulation) &&\r\n            recapitulation.map((recapitulatio) => (\r\n              <TableRow key={recapitulatio}>\r\n                <TableCell>\r\n                  {\" \"}\r\n                  <p>{recapitulatio.userId.name}</p>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {recapitulatio.result > 70 ? (\r\n                    <TableCell\r\n                      style={{\r\n                        backgroundColor: \"green\",\r\n                        padding: \"0.5rem 1rem\",\r\n                        color: \"#ffffff\",\r\n                        borderRadius: \"0.5rem\",\r\n                      }}\r\n                    >\r\n                      {recapitulatio.result}\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell\r\n                      style={{\r\n                        backgroundColor: \"#dc3545\",\r\n                        padding: \"0.5rem 1rem\",\r\n                        color: \"#ffffff\",\r\n                        borderRadius: \"0.5rem\",\r\n                      }}\r\n                    >\r\n                      {recapitulatio.result}\r\n                    </TableCell>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell>{recapitulatio.majorId.majorName}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BasicTable);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Recapitulation\\index.jsx",["235"],"import React from \"react\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport color from \"../../../utils/color\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  blue: {\r\n    backgroundColor: \"#3f51b5\",\r\n    padding: \"0.5rem 1rem\",\r\n    color: color.white,\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n});\r\n\r\nfunction BasicTable({ id, user, major }) {\r\n  var dateFormat = require(\"dateformat\");\r\n  dateFormat.i18n = {\r\n    dayNames: [\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum'at\",\r\n      \"Sabtu\",\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum;at\",\r\n      \"Sabtu\",\r\n    ],\r\n    monthNames: [\r\n      \"Junuari\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n      \"Januari\",\r\n      \"Februari\",\r\n      \"Maret\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"Desember\",\r\n    ],\r\n    timeNames: [\"a\", \"p\", \"am\", \"pm\", \"A\", \"P\", \"AM\", \"PM\"],\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const [recapitulation, setRecapitulation] = React.useState([]);\r\n\r\n  const [present, setPresent] = React.useState({\r\n    userId: \"\",\r\n    majorId: \"\",\r\n    status: \"hadir\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    present[\"userId\"] = user.user.id;\r\n    present[\"majorId\"] = id;\r\n    setPresent({ ...present });\r\n\r\n    axios\r\n      .get(`${proxy}/api/users/view`)\r\n      .then((res) => {\r\n        setRecapitulation([...res.data]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [id]);\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginTop: \"3rem\" }}>\r\n      <Alert severity=\"warning\">\r\n        Dapat mengikuti ujian ketika kehadiran lebih dari 8\r\n      </Alert>\r\n      <Table\r\n        className={classes.table}\r\n        aria-label=\"simple table\"\r\n        style={{ marginTop: \"2rem\" }}\r\n      >\r\n        <TableHead style={{ backgroundColor: color.primary }}>\r\n          <TableRow>\r\n            <TableCell style={{ color: color.white }}>Siswa</TableCell>\r\n            <TableCell style={{ color: color.white }}>Mata Pelajaran</TableCell>\r\n            <TableCell style={{ color: color.white }}>\r\n              Total Kehadiran\r\n            </TableCell>\r\n            <TableCell style={{ color: color.white }}>\r\n              Dapat Mengikuti Ujian\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {!isEmpty(recapitulation) &&\r\n            recapitulation.map((recapitulatio) => (\r\n              <TableRow key={recapitulatio}>\r\n                <TableCell>\r\n                  {\" \"}\r\n                  <p>{recapitulatio.userId.name}</p>\r\n                </TableCell>\r\n                <TableCell>{recapitulatio.majorId.majorName}</TableCell>\r\n                <TableCell>\r\n                  <p>\r\n                    <p>{recapitulatio.status.length} / 14</p>\r\n                  </p>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <p>\r\n                    {recapitulatio.status.length > 7 ? (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: \"#dc3545\",\r\n                          padding: \"0.5rem 1rem\",\r\n                          color: \"green\",\r\n                          borderRadius: \"0.5rem\",\r\n                        }}\r\n                      >\r\n                        Diizinkan\r\n                      </span>\r\n                    ) : (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: \"#dc3545\",\r\n                          padding: \"0.5rem 1rem\",\r\n                          color: \"#ffffff\",\r\n                          borderRadius: \"0.5rem\",\r\n                        }}\r\n                      >\r\n                        Tidak\r\n                      </span>\r\n                    )}\r\n                  </p>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BasicTable);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\RecapitulationStudent\\index.jsx",["236"],"import React from \"react\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport color from \"../../../utils/color\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  blue: {\r\n    backgroundColor: color.primary,\r\n    padding: \"0.5rem 1rem\",\r\n    color: color.white,\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n});\r\n\r\nfunction BasicTable({ user, major }) {\r\n  var dateFormat = require(\"dateformat\");\r\n  dateFormat.i18n = {\r\n    dayNames: [\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum'at\",\r\n      \"Sabtu\",\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum;at\",\r\n      \"Sabtu\",\r\n    ],\r\n    monthNames: [\r\n      \"Junuari\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n      \"Januari\",\r\n      \"Februari\",\r\n      \"Maret\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"Desember\",\r\n    ],\r\n    timeNames: [\"a\", \"p\", \"am\", \"pm\", \"A\", \"P\", \"AM\", \"PM\"],\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const [recapitulation, setRecapitulation] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    axios\r\n      .get(`${proxy}/api/exams/view/recapitulations/${user.isAuthenticated.id}`)\r\n      .then((res) => {\r\n        setRecapitulation([...res.data]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginTop: \"3rem\" }}>\r\n      <Table\r\n        className={classes.table}\r\n        aria-label=\"simple table\"\r\n        style={{ marginTop: \"2rem\" }}\r\n      >\r\n        <TableHead style={{ backgroundColor: color.primary }}>\r\n          <TableRow>\r\n            <TableCell style={{ color: color.white }}>Siswa</TableCell>\r\n            <TableCell style={{ color: color.white }}>Tipe</TableCell>\r\n            <TableCell style={{ color: color.white }}>Mata Pelajaran</TableCell>\r\n            <TableCell style={{ color: color.white }}>Nilai</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {!isEmpty(recapitulation) &&\r\n            recapitulation.map((recapitulatio) => (\r\n              <TableRow key={recapitulatio}>\r\n                <TableCell>\r\n                  {\" \"}\r\n                  <p>{recapitulatio.userId.name}</p>\r\n                </TableCell>\r\n\r\n                <TableCell>{recapitulatio.type.split(\"-\")[0]}</TableCell>\r\n                <TableCell>{recapitulatio.majorId.majorName}</TableCell>\r\n                <TableCell>\r\n                  {recapitulatio.result > 70 ? (\r\n                    <TableCell\r\n                      style={{\r\n                        backgroundColor: \"green\",\r\n                        padding: \"0.5rem 1rem\",\r\n                        color: \"#ffffff\",\r\n                        borderRadius: \"0.5rem\",\r\n                      }}\r\n                    >\r\n                      {recapitulatio.type}\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell\r\n                      style={{\r\n                        backgroundColor: \"#dc3545\",\r\n                        padding: \"0.5rem 1rem\",\r\n                        color: \"#ffffff\",\r\n                        borderRadius: \"0.5rem\",\r\n                      }}\r\n                    >\r\n                      {recapitulatio.result}\r\n                    </TableCell>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BasicTable);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\CKEditor\\index.jsx",["237"],"import React from \"react\";\r\n\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport Input from \"../../atoms/Input\";\r\nimport ErrorSucess from \"../../atoms/ErrorSucess\";\r\n\r\nimport {\r\n  addAnnouncement,\r\n  updateAnnouncement,\r\n} from \"../../../redux/actions/announcementAction\";\r\nimport { clearErrorSucess } from \"../../../redux/actions/helperAction\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport color from \"../../../utils/color\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\n\r\nfunction CKEditors({\r\n  addAnnouncement,\r\n  titles,\r\n  id,\r\n  updateAnnouncement,\r\n  sucess,\r\n  clearErrorSucess,\r\n  history,\r\n  error,\r\n}) {\r\n  const useStyles = makeStyles({\r\n    btn: {\r\n      marginTop: \"2rem\",\r\n    },\r\n    alert: {\r\n      marginTop: \"1.5rem\",\r\n    },\r\n    formControl: {\r\n      marginTop: \"1.5rem\",\r\n    },\r\n    label: {\r\n      color: color.label,\r\n    },\r\n  });\r\n\r\n  const [announcement, setAnnouncement] = React.useState({\r\n    title: \"\",\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\",\r\n  });\r\n\r\n  const handleAnnouncement = (e, name) => {\r\n    announcement[name] = e.target.value;\r\n    setAnnouncement({ ...announcement });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (id) {\r\n      updateAnnouncement(id, announcement, history);\r\n    } else {\r\n      addAnnouncement(announcement, history);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    clearErrorSucess();\r\n    if (id) {\r\n      axios\r\n        .get(`${proxy}/api/announcement/view/${id}`)\r\n        .then((res) => {\r\n          announcement[\"title\"] = res.data.title;\r\n          announcement[\"description\"] = res.data.description;\r\n\r\n          setAnnouncement({ ...announcement });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [clearErrorSucess, id]);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <Input\r\n          id=\"title\"\r\n          label=\"Judul\"\r\n          placeholder=\"\"\r\n          handleChange={handleAnnouncement}\r\n          value={announcement.title}\r\n        />\r\n        <div className={classes.formControl}>\r\n          <label className={classes.label}>Deskripsi</label>\r\n          <div style={{ marginTop: \"0.5rem\" }}></div>\r\n          <CKEditor\r\n            editor={ClassicEditor}\r\n            data={announcement.description}\r\n            onReady={(editor) => {\r\n              // You can store the \"editor\" and use when it is needed.\r\n              console.log(\"Editor is ready to use!\", editor);\r\n            }}\r\n            onChange={(event, editor) => {\r\n              const data = editor.getData();\r\n              console.log({ data });\r\n              announcement[\"description\"] = data;\r\n              setAnnouncement(announcement);\r\n            }}\r\n            onBlur={(event, editor) => {\r\n              console.log(\"Blur.\", editor);\r\n            }}\r\n            onFocus={(event, editor) => {\r\n              console.log(\"Focus.\", editor);\r\n            }}\r\n          />\r\n        </div>\r\n        <ErrorSucess\r\n          isSucess={Boolean(sucess)}\r\n          isError={!isEmpty(error)}\r\n          // sucessMessage={\"data pengumuman sukses\"}\r\n          errorMessage={[error.title, error.description]}\r\n        />\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12} md={4}>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              className={classes.btn}\r\n            >\r\n              {titles}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  sucess: state.sucess,\r\n  error: state.error,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    addAnnouncement,\r\n    updateAnnouncement,\r\n    clearErrorSucess,\r\n  })(CKEditors)\r\n);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\helperAction.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ButtonRed\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ButtonDanger\\index.jsx",[],["238","239"],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Table\\index.jsx",["240"],"import React from \"react\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\n\r\nimport Badge from \"../../atoms/Badge\";\r\nimport ButtonInfo from \"../../atoms/ButtonInfo\";\r\n\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport color from \"../../../utils/color\";\r\n\r\nfunction BasicTable({ id, user, major }) {\r\n  var dateFormat = require(\"dateformat\");\r\n  dateFormat.i18n = {\r\n    dayNames: [\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum'at\",\r\n      \"Sabtu\",\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum;at\",\r\n      \"Sabtu\",\r\n    ],\r\n    monthNames: [\r\n      \"Junuari\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n      \"Januari\",\r\n      \"Februari\",\r\n      \"Maret\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"Desember\",\r\n    ],\r\n    timeNames: [\"a\", \"p\", \"am\", \"pm\", \"A\", \"P\", \"AM\", \"PM\"],\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    blue: {\r\n      backgroundColor: color.primary,\r\n      padding: \"0.5rem 1rem\",\r\n      color: color.white,\r\n      borderRadius: \"0.5rem\",\r\n    },\r\n    textWhite: {\r\n      color: color.white,\r\n    },\r\n    bgPrimary: {\r\n      backgroundColor: color.primary,\r\n    },\r\n    btnDanger: {\r\n      color: color.danger,\r\n    },\r\n    btnInfo: {\r\n      backgroundColor: color.black,\r\n      color: color.white,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [presents, setPresents] = React.useState({\r\n    status: [],\r\n  });\r\n\r\n  const [present, setPresent] = React.useState({\r\n    userId: \"\",\r\n    majorId: \"\",\r\n    status: \"Hadir\",\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    present[\"status\"] = event.target.value;\r\n    setPresent({ ...present });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setOpen(false);\r\n\r\n    axios\r\n      .post(`${proxy}/api/presents/create`, present)\r\n      .then((res) => {\r\n        setPresents({ ...res.data });\r\n      })\r\n      .catch((err) => console.log(err.response.data));\r\n  };\r\n\r\n  const [undoneArray, setUndoneArray] = React.useState([]);\r\n\r\n  let i = 0;\r\n\r\n  React.useEffect(() => {\r\n    present[\"userId\"] = user.user.id;\r\n    present[\"majorId\"] = id;\r\n    setPresent({ ...present });\r\n\r\n    axios\r\n      .get(`${proxy}/api/presents/view/${user.user.id}/${id}`)\r\n      .then((res) => {\r\n        setPresents({ ...res.data });\r\n        if (!isEmpty(res.data)) {\r\n          setUndoneArray([...new Array(14 - res.data.status.length)]);\r\n        } else {\r\n          setUndoneArray([...new Array(14)]);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginTop: \"3rem\" }}>\r\n      <Table className={clsx(classes.table)} aria-label=\"simple table\">\r\n        <TableHead className={classes.blue}>\r\n          <TableRow>\r\n            <TableCell className={classes.textWhite}>Tanggal</TableCell>\r\n            <TableCell className={classes.textWhite}>Deskripsi</TableCell>\r\n            <TableCell className={classes.textWhite}>Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {!isEmpty(presents.status) &&\r\n            presents.status.map((status) => (\r\n              <TableRow key={status}>\r\n                <TableCell>\r\n                  {\" \"}\r\n                  <p>\r\n                    {dateFormat(\r\n                      i * 604800000 + Date.parse(major.hoursOfSubject),\r\n                      \"mmmm d, yyyy \"\r\n                    )}\r\n                  </p>\r\n                  <p style={{ lineHeight: 0.5 }} test={i++}>\r\n                    {dateFormat(major.hoursOfSubject, \"dddd hh:MM TT\")} -{\" \"}\r\n                    {dateFormat(major.hoursOfSubjectFinish, \"hh:MM TT\")}\r\n                  </p>\r\n                </TableCell>\r\n                <TableCell style={{ color: \"#9e9e9e\" }}>\r\n                  Absen sudah ditutup\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Badge status={status} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          {undoneArray.map((undone) => (\r\n            <TableRow key={undone}>\r\n              <TableCell>\r\n                {\" \"}\r\n                <p>\r\n                  {dateFormat(\r\n                    i * 604800000 + Date.parse(major.hoursOfSubject),\r\n                    \"mmmm d, yyyy \"\r\n                  )}\r\n                </p>\r\n                <p style={{ lineHeight: 0.5 }} test={i++}>\r\n                  {dateFormat(major.hoursOfSubject, \"dddd hh:MM TT\")} -{\" \"}\r\n                  {dateFormat(major.hoursOfSubjectFinish, \"hh:MM TT\")}\r\n                </p>\r\n              </TableCell>\r\n              {Date.parse(new Date()) >\r\n              (i - 1) * 604800000 + Date.parse(major.hoursOfSubject) ? (\r\n                <TableCell\r\n                  onClick={handleClickOpen}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  Absen disini\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell style={{ color: \"#9e9e9e\" }}>\r\n                  Absen belum tersedia\r\n                </TableCell>\r\n              )}\r\n\r\n              <TableCell>\r\n                <span className={classes.blue}>Belum absen</span>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent style={{ minWidth: 480 }}>\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            <Typography variant=\"h5\" component=\"h2\" style={{ fontWeight: 500 }}>\r\n              Kehadiran\r\n            </Typography>\r\n          </DialogTitle>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                aria-label=\"gender\"\r\n                name=\"gender1\"\r\n                value={present.status}\r\n                onChange={handleChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Hadir\"\r\n                  control={<Radio />}\r\n                  label=\"Hadir\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Sakit\"\r\n                  control={<Radio />}\r\n                  label=\"Sakit\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Izin\"\r\n                  control={<Radio />}\r\n                  label=\"Izin\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n            className={classes.btnDanger}\r\n          >\r\n            Batal\r\n          </Button>\r\n          <ButtonInfo handleDelete={handleSubmit}>Ok</ButtonInfo>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BasicTable);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Card\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\organisms\\Sections\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ButtonInfo\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ErrorSucess\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Create\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ExamSection\\index.jsx",["241"],"import React from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\n\r\nimport color from \"../../../utils/color\";\r\n\r\nfunction ExakSection({\r\n  description,\r\n  icon,\r\n  id,\r\n  i,\r\n  isStudent,\r\n  isTeacher,\r\n  majorName,\r\n  title,\r\n  type,\r\n  history,\r\n  handleDelete,\r\n}) {\r\n  const useStyles = makeStyles({\r\n    alert: { marginTop: \"0\", marginBottom: \"1.5rem\" },\r\n    link: {\r\n      cursor: \"pointer\",\r\n    },\r\n    description: {\r\n      color: color.grey,\r\n    },\r\n    link: {\r\n      cursor: \"pointer\",\r\n    },\r\n    icon: {\r\n      padding: \"1rem\",\r\n      backgroundColor: color.white,\r\n    },\r\n    info: {\r\n      color: color.info,\r\n    },\r\n    danger: {\r\n      color: color.danger,\r\n    },\r\n    btnInfo: { backgroundColor: color.danger, color: color.white },\r\n    btnDanger: { backgroundColor: color.white, color: color.danger },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [open2, setOpen2] = React.useState(false);\r\n\r\n  const handleClickOpen = (e, isDelete) => {\r\n    if (isDelete === \"delete\") {\r\n      setOpen2(true);\r\n    } else {\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = (e, status) => {\r\n    setOpen(false);\r\n    if (status === \"yes\") {\r\n      history.push(`/mata-pelajaran/${title}${majorName}/${id}`);\r\n    }\r\n  };\r\n\r\n  const handleClose2 = () => {\r\n    handleDelete(id, type);\r\n    setOpen2(false);\r\n  };\r\n\r\n  const handleClose3 = () => {\r\n    setOpen2(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!isTeacher && <div style={{ marginTop: \"1.5rem\" }}></div>}\r\n      {!isStudent && i === 0 && (\r\n        <Alert severity=\"warning\" className={classes.alert}>\r\n          Ujian hanya tersedia untuk siswa\r\n        </Alert>\r\n      )}\r\n\r\n      {isTeacher && (\r\n        <React.Fragment>\r\n          <Link to={`/guru/ujian/${type}/${id}`}>\r\n            <EditIcon className={clsx(classes.icon, classes.info)} />\r\n          </Link>{\" \"}\r\n          <DeleteIcon\r\n            className={clsx(classes.icon, classes.danger, classes.link)}\r\n            onClick={(e) => {\r\n              handleClickOpen(e, \"delete\");\r\n            }}\r\n          />\r\n        </React.Fragment>\r\n      )}\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={4} md={2}>\r\n          <span className={classes.icon}> {icon}</span>\r\n        </Grid>\r\n\r\n        <Grid item xs={8} md={10}>\r\n          {isStudent ? (\r\n            <Link to={`/mata-pelajaran/${title}/${id}`}>\r\n              <Typography variant=\"h6\" component=\"p\">\r\n                {title.split(\"-\")[0]}\r\n              </Typography>\r\n            </Link>\r\n          ) : (\r\n            <Typography variant=\"h6\" component=\"p\">\r\n              {title.split(\"-\")[0]}\r\n            </Typography>\r\n          )}\r\n\r\n          <Typography\r\n            variant=\"body1\"\r\n            component=\"p\"\r\n            className={classes.description}\r\n          >\r\n            {description}\r\n          </Typography>\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                Apakah anda yakin ingin mengikuti ujian?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={(e) => {\r\n                  handleClose(e, \"yes\");\r\n                }}\r\n                color=\"primary\"\r\n                className={classes.btnInfo}\r\n              >\r\n                Ya\r\n              </Button>\r\n              <Button\r\n                onClick={handleClose}\r\n                color=\"primary\"\r\n                autoFocus\r\n                className={classes.btnDanger}\r\n              >\r\n                Tidak\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          <Dialog\r\n            open={open2}\r\n            onClose={handleClose}\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                Apakah anda yakin ingin mengapus {title}?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={handleClose3}\r\n                color=\"primary\"\r\n                className={classes.danger}\r\n              >\r\n                Batal\r\n              </Button>\r\n              <Button\r\n                onClick={handleClose2}\r\n                color=\"primary\"\r\n                autoFocus\r\n                className={classes.btnInfo}\r\n              >\r\n                Ok\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(ExakSection);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\QuestionExam\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\TheorySection\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\TheoryTemplate\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\CredentialData\\index.jsx",[],{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":86,"column":6,"nodeType":"248","endLine":86,"endColumn":10,"suggestions":"249"},{"ruleId":"246","severity":1,"message":"250","line":101,"column":6,"nodeType":"248","endLine":101,"endColumn":17,"suggestions":"251"},{"ruleId":"246","severity":1,"message":"250","line":100,"column":6,"nodeType":"248","endLine":100,"endColumn":10,"suggestions":"252"},{"ruleId":"246","severity":1,"message":"253","line":89,"column":6,"nodeType":"248","endLine":89,"endColumn":8,"suggestions":"254"},{"ruleId":"246","severity":1,"message":"255","line":84,"column":6,"nodeType":"248","endLine":84,"endColumn":28,"suggestions":"256"},{"ruleId":"242","replacedBy":"257"},{"ruleId":"244","replacedBy":"258"},{"ruleId":"246","severity":1,"message":"259","line":165,"column":6,"nodeType":"248","endLine":165,"endColumn":8,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":41,"column":5,"nodeType":"263","messageId":"264","endLine":41,"endColumn":9},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'clearErrorSucess', 'exam', and 'ujian'. Either include them or remove the dependency array. If 'clearErrorSucess' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["267"],"React Hook React.useEffect has missing dependencies: 'present' and 'user.user.id'. Either include them or remove the dependency array. You can also do a functional update 'setPresent(p => ...)' if you only need 'present' in the 'setPresent' call.",["268"],["269"],"React Hook React.useEffect has a missing dependency: 'user.isAuthenticated.id'. Either include it or remove the dependency array.",["270"],"React Hook React.useEffect has a missing dependency: 'announcement'. Either include it or remove the dependency array. You can also do a functional update 'setAnnouncement(a => ...)' if you only need 'announcement' in the 'setAnnouncement' call.",["271"],["265"],["266"],"React Hook React.useEffect has missing dependencies: 'id', 'present', and 'user.user.id'. Either include them or remove the dependency array. You can also do a functional update 'setPresent(p => ...)' if you only need 'present' in the 'setPresent' call.",["272"],"no-dupe-keys","Duplicate key 'link'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"277","fix":"283"},"Update the dependencies array to be: [clearErrorSucess, exam, id, ujian]",{"range":"284","text":"285"},"Update the dependencies array to be: [id, present, ujian, user.user.id]",{"range":"286","text":"287"},"Update the dependencies array to be: [id, present, user.user.id]",{"range":"288","text":"289"},"Update the dependencies array to be: [user.isAuthenticated.id]",{"range":"290","text":"291"},"Update the dependencies array to be: [announcement, clearErrorSucess, id]",{"range":"292","text":"293"},{"range":"294","text":"289"},[2663,2667],"[clearErrorSucess, exam, id, ujian]",[2354,2365],"[id, present, ujian, user.user.id]",[2286,2290],"[id, present, user.user.id]",[2064,2066],"[user.isAuthenticated.id]",[2664,2686],"[announcement, clearErrorSucess, id]",[4150,4152]]