[{"E:\\Web\\JS\\React\\jarpis\\client\\src\\index.js":"1","E:\\Web\\JS\\React\\jarpis\\client\\src\\App.js":"2","E:\\Web\\JS\\React\\jarpis\\client\\src\\store.js":"3","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\index.js":"4","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\layout\\Navbar\\index.jsx":"5","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Login\\index.jsx":"6","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\color.js":"7","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\layout\\Footer\\index.jsx":"8","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\size.js":"9","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Input\\index.jsx":"10","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\PrivateRoute.jsx":"11","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Dashboard\\index.jsx":"12","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\organisms\\Cards\\index.jsx":"13","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Card\\index.jsx":"14","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Announcment\\index.jsx":"15","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\CardAnnouncement\\index.jsx":"16","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Major\\index.jsx":"17","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\organisms\\Topic\\index.jsx":"18","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Sections\\index.jsx":"19","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Section\\index.jsx":"20","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\userReducer.js":"21","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\index.js":"22","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\userAction.js":"23","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\setAuthToken.js":"24","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\proxy.js":"25","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\errorReducer.js":"26","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\is-empty.js":"27","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\PrivateRouteAdmin.jsx":"28","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Admins\\index.jsx":"29","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\organisms\\Admin\\index.jsx":"30","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Register\\index.jsx":"31","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\CKEditor\\index.jsx":"32","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\announcementReducer.js":"33","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\announcementAction.js":"34","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\sucessReducer.js":"35","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\CreateTemplate\\index.jsx":"36","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\AnnouncementUpdate\\index.jsx":"37","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Present\\index.jsx":"38","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Table\\index.jsx":"39","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Pengumuman\\index.jsx":"40","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Badge\\index.jsx":"41","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Theory\\index.jsx":"42","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\TheoryTemplate\\index.jsx":"43","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Exams\\index.jsx":"44","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ExamSection\\index.jsx":"45","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\ExamsStudent\\index.jsx":"46","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\QuestionExam\\index.jsx":"47","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\examAction.js":"48","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\TheorySection\\index.jsx":"49","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Profile\\index.jsx":"50","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\RecapitulationValue\\index.jsx":"51","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Recapitulation\\index.jsx":"52","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\RecapitulationStudent\\index.jsx":"53"},{"size":197,"mtime":1607606201596,"results":"54","hashOfConfig":"55"},{"size":4431,"mtime":1608133473697,"results":"56","hashOfConfig":"55"},{"size":437,"mtime":1607609459473,"results":"57","hashOfConfig":"55"},{"size":396,"mtime":1607722526773,"results":"58","hashOfConfig":"55"},{"size":16351,"mtime":1608181260674,"results":"59","hashOfConfig":"55"},{"size":2759,"mtime":1607960456965,"results":"60","hashOfConfig":"55"},{"size":140,"mtime":1607678626958,"results":"61","hashOfConfig":"55"},{"size":813,"mtime":1607676882095,"results":"62","hashOfConfig":"55"},{"size":35,"mtime":1607670702451,"results":"63","hashOfConfig":"55"},{"size":1122,"mtime":1608014997971,"results":"64","hashOfConfig":"55"},{"size":592,"mtime":1607729791233,"results":"65","hashOfConfig":"55"},{"size":1189,"mtime":1608180650197,"results":"66","hashOfConfig":"55"},{"size":235,"mtime":1607679518609,"results":"67","hashOfConfig":"55"},{"size":2221,"mtime":1607791953721,"results":"68","hashOfConfig":"55"},{"size":848,"mtime":1607723060964,"results":"69","hashOfConfig":"55"},{"size":4057,"mtime":1607918431111,"results":"70","hashOfConfig":"55"},{"size":640,"mtime":1607775217384,"results":"71","hashOfConfig":"55"},{"size":1519,"mtime":1608115010216,"results":"72","hashOfConfig":"55"},{"size":5490,"mtime":1608135508525,"results":"73","hashOfConfig":"55"},{"size":1546,"mtime":1607925364061,"results":"74","hashOfConfig":"55"},{"size":654,"mtime":1608107264803,"results":"75","hashOfConfig":"55"},{"size":343,"mtime":1608107259180,"results":"76","hashOfConfig":"55"},{"size":2432,"mtime":1608107332339,"results":"77","hashOfConfig":"55"},{"size":313,"mtime":1607685745328,"results":"78","hashOfConfig":"55"},{"size":65,"mtime":1608125450327,"results":"79","hashOfConfig":"55"},{"size":251,"mtime":1607705342990,"results":"80","hashOfConfig":"55"},{"size":234,"mtime":1607687543429,"results":"81","hashOfConfig":"55"},{"size":644,"mtime":1607729800135,"results":"82","hashOfConfig":"55"},{"size":145,"mtime":1607697256876,"results":"83","hashOfConfig":"55"},{"size":2167,"mtime":1607725520166,"results":"84","hashOfConfig":"55"},{"size":12048,"mtime":1608181135712,"results":"85","hashOfConfig":"55"},{"size":4583,"mtime":1607795757838,"results":"86","hashOfConfig":"55"},{"size":338,"mtime":1607927225236,"results":"87","hashOfConfig":"55"},{"size":1771,"mtime":1607724898013,"results":"88","hashOfConfig":"55"},{"size":254,"mtime":1607715360901,"results":"89","hashOfConfig":"55"},{"size":1826,"mtime":1607781615778,"results":"90","hashOfConfig":"55"},{"size":434,"mtime":1607713844836,"results":"91","hashOfConfig":"55"},{"size":1108,"mtime":1608029629925,"results":"92","hashOfConfig":"55"},{"size":9263,"mtime":1608181317914,"results":"93","hashOfConfig":"55"},{"size":322,"mtime":1607781443940,"results":"94","hashOfConfig":"55"},{"size":997,"mtime":1607792233128,"results":"95","hashOfConfig":"55"},{"size":5591,"mtime":1608027090306,"results":"96","hashOfConfig":"55"},{"size":750,"mtime":1607919311017,"results":"97","hashOfConfig":"55"},{"size":7436,"mtime":1608119425405,"results":"98","hashOfConfig":"55"},{"size":6059,"mtime":1608135216175,"results":"99","hashOfConfig":"55"},{"size":6228,"mtime":1608176506144,"results":"100","hashOfConfig":"55"},{"size":2088,"mtime":1608092926832,"results":"101","hashOfConfig":"55"},{"size":1999,"mtime":1608084227336,"results":"102","hashOfConfig":"55"},{"size":5531,"mtime":1608115827404,"results":"103","hashOfConfig":"55"},{"size":2899,"mtime":1608132749779,"results":"104","hashOfConfig":"55"},{"size":6466,"mtime":1608121132573,"results":"105","hashOfConfig":"55"},{"size":6827,"mtime":1608182102846,"results":"106","hashOfConfig":"55"},{"size":6371,"mtime":1608134102615,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1sid8fm",{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"110"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"110"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"110"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"110"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"110"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"110"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"110"},"E:\\Web\\JS\\React\\jarpis\\client\\src\\index.js",[],["248","249"],"E:\\Web\\JS\\React\\jarpis\\client\\src\\App.js",["250"],"import React from \"react\";\nimport \"./App.css\";\nimport { Container } from \"@material-ui/core\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"./utils/PrivateRoute\";\nimport PrivateRouteAdmin from \"./utils/PrivateRouteAdmin\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./redux/actions/userAction\";\n\n// components\nimport Login from \"./components/molecules/Login\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Footer from \"./components/layout/Footer\";\nimport Dashboard from \"./components/pages/Dashboard\";\nimport Profile from \"./components/pages/Profile\";\nimport Announcment from \"./components/pages/Announcment\";\nimport Major from \"./components/pages/Major\";\nimport Pengumuman from \"./components/pages/Pengumuman\";\nimport Admins from \"./components/pages/Admins\";\nimport RecapitulationValue from \"./components/pages/RecapitulationValue\";\nimport RecapitulationStudent from \"./components/pages/RecapitulationStudent\";\nimport Recapitulation from \"./components/pages/Recapitulation\";\nimport Present from \"./components/pages/Present\";\nimport Theory from \"./components/pages/Theory\";\n// import CKEditor from \"./components/atoms/CKEditor\";\nimport Register from \"./components/molecules/Register\";\nimport Exams from \"./components/pages/Exams\";\nimport ExamsStudent from \"./components/pages/ExamsStudent\";\nimport AnnouncementUpdate from \"./components/pages/AnnouncementUpdate\";\n// import CreateTemplate from \"../../molecules/CreateTemplate\";\n\n// Check for token\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Clear current Profile\n    // store.dispatch(clearCurrentProfile());\n    // Redirect to login\n    window.location.href = \"/\";\n  }\n}\n\nconst App = () => {\n  return (\n    <div>\n      <Provider store={store}>\n        <Router>\n          <Route path=\"/\">\n            <Navbar />\n          </Route>\n          <Route path=\"/\" exact>\n            <Login />\n          </Route>\n          <Container>\n            <PrivateRoute component={Dashboard} path=\"/dashboard\" />\n            <PrivateRoute component={Profile} path=\"/profile\" />\n            <PrivateRoute component={RecapitulationStudent} path=\"/nilai\" />\n            <Route path=\"/pengumuman\">\n              <Announcment />\n            </Route>\n            <PrivateRoute component={Major} path=\"/mata-pelajaran/:id\" exact />\n\n            <Switch>\n              <PrivateRoute\n                component={Present}\n                path=\"/mata-pelajaran/presensi/:id\"\n                exact\n              />\n              <PrivateRoute\n                component={ExamsStudent}\n                path=\"/mata-pelajaran/:ujian/:id\"\n                exact\n              />\n            </Switch>\n            <PrivateRoute component={Present} path=\"/presensi/:id\" exact />\n            <PrivateRoute component={Theory} path=\"/guru/materi/:i/:id\" exact />\n            <PrivateRoute\n              component={Exams}\n              path=\"/guru/ujian/:ujian/:id\"\n              exact\n            />\n            <PrivateRouteAdmin\n              component={Register}\n              path=\"/admin/register\"\n              exact\n            />\n            <PrivateRouteAdmin\n              component={Recapitulation}\n              path=\"/admin/rekapitulasi\"\n              exact\n            />\n            <PrivateRoute\n              component={RecapitulationValue}\n              path=\"/guru/rekapitulasi/:ujian/:id\"\n              exact\n            />\n            <PrivateRouteAdmin\n              component={Pengumuman}\n              path=\"/admin/pengumuman\"\n              exact\n            />\n            <PrivateRouteAdmin\n              component={AnnouncementUpdate}\n              path=\"/admin/pengumuman/:id\"\n            />\n          </Container>\n          <Route path=\"/\">\n            {\" \"}\n            <Footer />\n          </Route>\n        </Router>\n      </Provider>\n    </div>\n  );\n};\n\nexport default App;\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\store.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\index.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\layout\\Navbar\\index.jsx",["251","252","253","254","255","256","257","258","259","260","261","262","263","264","265"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Drawer,\r\n  Container,\r\n  Hidden,\r\n  List,\r\n  ListItemText,\r\n  ListItem,\r\n  ListItemIcon,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport size from \"../../../utils/size\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport { connect } from \"react-redux\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { logoutUser } from \"../../../redux/actions/userAction\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport CastForEducationIcon from \"@material-ui/icons/CastForEducation\";\r\nimport TabIcon from \"@material-ui/icons/Tab\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport AnnouncementIcon from \"@material-ui/icons/Announcement\";\r\nimport LibraryAddIcon from \"@material-ui/icons/LibraryAdd\";\r\nimport ClassIcon from \"@material-ui/icons/Class\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport BookIcon from \"@material-ui/icons/Book\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport TableChartIcon from \"@material-ui/icons/TableChart\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: `${size.big}rem`,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  menuItem: {\r\n    minWidth: 300,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    cursor: \"pointer\",\r\n  },\r\n  announcement: {\r\n    padding: \"0 2rem\",\r\n    display: \"inline-block\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      padding: \"0 0 0 1rem\",\r\n    },\r\n  },\r\n  disabled: {\r\n    cursor: \"default\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"inherit\",\r\n    },\r\n    \"&:visited\": {\r\n      backgroundColor: \"inherit\",\r\n    },\r\n    \"&:active\": {\r\n      backgroundColor: \"inherit\",\r\n    },\r\n  },\r\n  subTab: {\r\n    paddingLeft: \"2rem\",\r\n  },\r\n  subSubTab: {\r\n    paddingLeft: \"4rem\",\r\n  },\r\n}));\r\n\r\nfunction MenuAppBar({ user, logoutUser, history }) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const [majors, setMajors] = React.useState([]);\r\n  const [theorys, setTheorys] = React.useState([]);\r\n\r\n  const [isDrawerOpen, setIsDrawerOpen] = React.useState(false);\r\n  const [isShowTheory, setIsShowTheory] = React.useState(true);\r\n\r\n  const [admins, setAdmins] = React.useState([\r\n    {\r\n      name: \"Register\",\r\n      link: \"/admin/register\",\r\n      icon: <LockOpenIcon />,\r\n    },\r\n    {\r\n      name: \"Pengumuman\",\r\n      link: \"/admin/pengumuman\",\r\n      icon: <AnnouncementIcon />,\r\n    },\r\n    {\r\n      name: \"Rekapitulasi\",\r\n      link: \"/admin/rekapitulasi\",\r\n      icon: <TableChartIcon />,\r\n    },\r\n  ]);\r\n\r\n  const [teachers, setTeachers] = React.useState([\r\n    {\r\n      name: \"Topik\",\r\n      link: \"/guru/topik\",\r\n      icon: <LibraryAddIcon />,\r\n    },\r\n  ]);\r\n\r\n  const [subTopic, setSubTopic] = React.useState(new Array(14));\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const [recapitulation, setRecapitulation] = React.useState([]);\r\n\r\n  const handleClose = (e, status) => {\r\n    if (status === \"profile\") {\r\n      history.push(\"/profile\");\r\n    }\r\n    if (status === \"nilai\") {\r\n      history.push(\"/nilai\");\r\n    }\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogOut = () => {\r\n    setAnchorEl(null);\r\n\r\n    logoutUser(history);\r\n  };\r\n\r\n  const handleShowTheory = () => {\r\n    setIsDrawerOpen(true);\r\n  };\r\n\r\n  const handleToggleDrawer = (e) => {\r\n    setIsDrawerOpen(!isDrawerOpen);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (user.isAuthenticated.role === \"teacher\") {\r\n      axios\r\n        .post(`${proxy}/api/majors/viewByArray`, user.isAuthenticated.majorId)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setMajors(res.data);\r\n          setRecapitulation([...res.data]);\r\n        });\r\n      axios\r\n        .post(`${proxy}/api/theorys/view`, user.isAuthenticated.majorId)\r\n        .then((res) => {\r\n          setTheorys([...res.data]);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      axios.get(`${proxy}/api/majors/view`).then((res) => {\r\n        setMajors(res.data);\r\n      });\r\n    }\r\n  }, [user.isAuthenticated.role]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormGroup>\r\n        {/* <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={auth}\r\n              onChange={handleChange}\r\n              aria-label=\"login switch\"\r\n            />\r\n          }\r\n          label={auth ? \"Logout\" : \"Login\"}\r\n        /> */}\r\n      </FormGroup>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {user.isAuthenticated && (\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              onClick={handleToggleDrawer}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          )}\r\n\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link to=\"/\">\r\n              <SchoolIcon style={{ padding: \"0 0.4rem\" }} />\r\n              Jarpis\r\n            </Link>\r\n            <Link to=\"/pengumuman\" className={classes.announcement}>\r\n              <Typography className={classes.announcement}>\r\n                Pengumuman\r\n              </Typography>\r\n            </Link>\r\n          </Typography>\r\n\r\n          {user.isAuthenticated && (\r\n            <div>\r\n              <span>{user.isAuthenticated.name}</span>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                {user.isAuthenticated.role === \"siswa\" && (\r\n                  <React.Fragment>\r\n                    <MenuItem\r\n                      onClick={(e) => {\r\n                        handleClose(e, \"profile\");\r\n                      }}\r\n                    >\r\n                      Profile\r\n                    </MenuItem>{\" \"}\r\n                    <MenuItem\r\n                      onClick={(e) => {\r\n                        handleClose(e, \"nilai\");\r\n                      }}\r\n                    >\r\n                      Nilai{\" \"}\r\n                    </MenuItem>\r\n                  </React.Fragment>\r\n                )}\r\n                <MenuItem onClick={handleLogOut}>\r\n                  Log Out <ExitToAppIcon style={{ paddingLeft: \"0.5rem\" }} />\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n        <Drawer anchor=\"left\" open={isDrawerOpen} onClose={handleToggleDrawer}>\r\n          <div onClick={handleToggleDrawer} onKeyDown={handleToggleDrawer}>\r\n            <List>\r\n              <Link to=\"/dashboard\">\r\n                <ListItem button key=\"dashboard\" className={classes.menuItem}>\r\n                  <ListItemIcon>{<DashboardIcon />}</ListItemIcon>\r\n                  <ListItemText primary=\"Dashboard\" />\r\n                </ListItem>\r\n              </Link>\r\n              {user.isAuthenticated.role === \"siswa\" ? (\r\n                <ListItem\r\n                  button\r\n                  className={(classes.menuItem, classes.disabled)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <ClassIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText> Kelas {user.user.kelas}</ListItemText>\r\n                </ListItem>\r\n              ) : (\r\n                <ListItem\r\n                  button\r\n                  className={(classes.menuItem, classes.disabled)}\r\n                >\r\n                  <ListItemIcon>\r\n                    {\" \"}\r\n                    {user.isAuthenticated.role === \"teacher\" ? (\r\n                      <ClassIcon />\r\n                    ) : (\r\n                      <TabIcon />\r\n                    )}\r\n                  </ListItemIcon>\r\n                  <ListItemText>\r\n                    {user.isAuthenticated.role === \"teacher\"\r\n                      ? \"Kelas\"\r\n                      : \"Mata Pelajaran\"}\r\n                    {!isEmpty(user.user.kelas) && user.user.kelas.split(\"\")[0]}\r\n                  </ListItemText>\r\n                </ListItem>\r\n              )}\r\n\r\n              {majors.map((major) => (\r\n                <Link to={`/mata-pelajaran/${major._id}`}>\r\n                  <ListItem\r\n                    button\r\n                    key={major.majorName}\r\n                    className={(classes.menuItem, classes.subTab)}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <CastForEducationIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={major.majorName} />\r\n                  </ListItem>\r\n                </Link>\r\n              ))}\r\n              {user.isAuthenticated.role === \"admin\" && (\r\n                <React.Fragment>\r\n                  <ListItem\r\n                    button\r\n                    key=\"Admin\"\r\n                    className={(classes.menuItem, classes.disabled)}\r\n                  >\r\n                    <ListItemIcon>\r\n                      {\" \"}\r\n                      <TabIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Admin Panel\" />\r\n                  </ListItem>\r\n                  {admins.map((admin) => (\r\n                    <Link to={`${admin.link}`}>\r\n                      <ListItem\r\n                        button\r\n                        key={admin.name}\r\n                        className={(classes.menuItem, classes.subTab)}\r\n                      >\r\n                        <ListItemIcon> {admin.icon}</ListItemIcon>\r\n                        <ListItemText primary={admin.name} />\r\n                      </ListItem>\r\n                    </Link>\r\n                  ))}\r\n                </React.Fragment>\r\n              )}\r\n\r\n              {user.isAuthenticated.role === \"teacher\" && (\r\n                <React.Fragment>\r\n                  <ListItem\r\n                    button\r\n                    key=\"Teacher\"\r\n                    className={(classes.menuItem, classes.disabled)}\r\n                  >\r\n                    <ListItemIcon>\r\n                      {\" \"}\r\n                      <TabIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Guru Panel\" />\r\n                  </ListItem>\r\n\r\n                  {majors.map((major) => (\r\n                    <React.Fragment>\r\n                      <ListItem\r\n                        name=\"subTab\"\r\n                        onClick={handleShowTheory}\r\n                        button\r\n                        className={(classes.menuItem, classes.subTab)}\r\n                      >\r\n                        <ListItemIcon>\r\n                          {\" \"}\r\n                          <BookIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText>{major.majorName} </ListItemText>\r\n                        <ListItemIcon>\r\n                          {\" \"}\r\n                          <ArrowDropDownIcon />\r\n                        </ListItemIcon>\r\n                      </ListItem>\r\n                      {isShowTheory &&\r\n                        [...new Array(14)].map((a, i) => (\r\n                          <Link\r\n                            to={`${\r\n                              i + 1 === 7\r\n                                ? `/guru/ujian/UTS-${major.majorName}/${major._id}`\r\n                                : \"\"\r\n                            }${\r\n                              i + 1 === 14\r\n                                ? `/guru/ujian/UAS-${major.majorName}/${major._id}`\r\n                                : \"\"\r\n                            }${\r\n                              !(i + 1 === 7) && !(i + 1 === 14)\r\n                                ? `/guru/materi/${i + 1}/${major._id}`\r\n                                : \"\"\r\n                            }`}\r\n                          >\r\n                            <ListItem\r\n                              key={i}\r\n                              button\r\n                              className={(classes.menuItem, classes.subSubTab)}\r\n                            >\r\n                              <ListItemIcon>\r\n                                {\" \"}\r\n                                <LibraryAddIcon />\r\n                              </ListItemIcon>\r\n                              <ListItemText>\r\n                                {i + 1 === 7 && \"UTS\"} {i + 1 === 14 && \"UAS\"}{\" \"}\r\n                                {!(i + 1 === 7) &&\r\n                                  !(i + 1 === 14) &&\r\n                                  `Materi ke ${i + 1}`}{\" \"}\r\n                              </ListItemText>\r\n                            </ListItem>\r\n                          </Link>\r\n                        ))}\r\n                    </React.Fragment>\r\n                  ))}\r\n                  <ListItem\r\n                    button\r\n                    key=\"Rekapitulasi Nilai\"\r\n                    // className={(classes.menuItem, classes.disabled)}\r\n                  >\r\n                    <ListItemIcon>\r\n                      {\" \"}\r\n                      <TableChartIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Rekapitulasi Nilai\" />\r\n                  </ListItem>\r\n                </React.Fragment>\r\n              )}\r\n\r\n              {recapitulation.map((recap) => (\r\n                <div>\r\n                  <Link\r\n                    to={`/guru/rekapitulasi/UTS-${recap.majorName}/${recap._id}`}\r\n                    style={{ marginTop: 0 }}\r\n                  >\r\n                    <ListItem\r\n                      button\r\n                      key={recap.majorName}\r\n                      className={(classes.menuItem, classes.subTab)}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <CastForEducationIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText>UTS {recap.majorName}</ListItemText>\r\n                    </ListItem>\r\n                  </Link>\r\n                  <Link\r\n                    to={`/guru/rekapitulasi/UAS-${recap.majorName}/${recap._id}`}\r\n                  >\r\n                    <ListItem\r\n                      button\r\n                      key={recap.majorName}\r\n                      className={(classes.menuItem, classes.subTab)}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <CastForEducationIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText>UAS {recap.majorName}</ListItemText>\r\n                    </ListItem>\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { logoutUser })(MenuAppBar));\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Login\\index.jsx",["266","267"],"import React from \"react\";\r\nimport { Grid, Typography, Button, Container } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport Input from \"../../atoms/Input\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport color from \"../../../utils/color\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../../redux/actions/userAction\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction Login({ loginUser, error, history, user }) {\r\n  const [users, setUser] = React.useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e, name) => {\r\n    users[name] = e.target.value;\r\n    setUser(users);\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      // border: `1px solid ${color.white}`,\r\n      borderRadius: \"0.5rem\",\r\n      padding: \"2rem\",\r\n      backgroundColor: color.white,\r\n      boxShadow: \"0 1rem 3rem rgba(0, 0, 0, 0.175) !important\",\r\n    },\r\n    title: {\r\n      color: \"#404145\",\r\n      fontWeight: \"500\",\r\n    },\r\n    btn: {\r\n      marginTop: \"2rem\",\r\n    },\r\n    alert: {\r\n      marginTop: \"1.5rem\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    loginUser(users, history);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (user.isAuthenticated) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <form onSubmit={onSubmit}>\r\n        <div className={classes.root}>\r\n          <Typography\r\n            variant=\"h4\"\r\n            component=\"h1\"\r\n            align=\"center\"\r\n            className={classes.title}\r\n          >\r\n            Masuk ke Jarpis\r\n          </Typography>\r\n\r\n          <Input\r\n            id=\"username\"\r\n            label=\"Email / Username\"\r\n            placeholder=\"contoh jarpis@gmail.com\"\r\n            handleChange={handleChange}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            placeholder=\"*********\"\r\n            handleChange={handleChange}\r\n            isPassword={true}\r\n          />\r\n          {!isEmpty(error) && (\r\n            <Alert className={classes.alert} severity=\"error\">\r\n              {error.username || error.password}\r\n            </Alert>\r\n          )}\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            className={classes.btn}\r\n          >\r\n            Masuk\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  error: state.error,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { loginUser })(Login));\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\color.js",["268"],"export default {\r\n  grey: \"#62646a\",\r\n  white: \"#ffffff\",\r\n  black: \"#000000\",\r\n  primary: \"#3f51b5\",\r\n  label: \"rgba(0, 0, 0, 0.54)\",\r\n};\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\layout\\Footer\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\size.js",["269"],"export default {\r\n  big: 6.7,\r\n};\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Input\\index.jsx",["270","271"],"import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport color from \"../../../utils/color\";\r\n\r\nfunction Input({\r\n  id,\r\n  label,\r\n  placeholder,\r\n  handleChange,\r\n  isPassword,\r\n  value,\r\n  idx,\r\n}) {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      marginTop: \"1.5rem\",\r\n    },\r\n    label: {\r\n      color: color.label,\r\n      fontSize: \"1rem\",\r\n    },\r\n    form: {\r\n      marginTop: \"0.5rem\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <label htmlFor={`${id}` + `${idx && idx}`} className={classes.label}>\r\n        {label}\r\n      </label>\r\n      <TextField\r\n        id={`${id}` + `${idx && idx}`}\r\n        placeholder={placeholder}\r\n        fullWidth\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        className={classes.form}\r\n        variant=\"outlined\"\r\n        type={isPassword && \"password\"}\r\n        value={value}\r\n        onChange={(e) => {\r\n          handleChange(e, id, idx);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\PrivateRoute.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Dashboard\\index.jsx",["272"],"import React from \"react\";\r\nimport Card from \"../../molecules/Card\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Dashboard({ user }) {\r\n  const [majors, setMajors] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    if (user.isAuthenticated.role === \"teacher\") {\r\n      axios\r\n        .post(`${proxy}/api/majors/viewByArray`, user.isAuthenticated.majorId)\r\n        .then((res) => {\r\n          setMajors(res.data);\r\n        });\r\n    } else {\r\n      axios\r\n        .get(`${proxy}/api/majors/view?kelasId=${user.user.kelasId}`)\r\n        .then((res) => {\r\n          setMajors(res.data);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2}>\r\n        {majors.map((major) => (\r\n          <Card\r\n            id={major._id}\r\n            title={major.majorName}\r\n            from={major.hoursOfSubject}\r\n            to={major.hoursOfSubjectFinish}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\organisms\\Cards\\index.jsx",["273","274"],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Card\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Announcment\\index.jsx",["275"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport CardAnnouncement from \"../../molecules/CardAnnouncement\";\r\nimport { viewAnnouncement } from \"../../../redux/actions/announcementAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Announcement({ announcements, viewAnnouncement }) {\r\n  React.useEffect(() => {\r\n    viewAnnouncement();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {announcements.announcement.map((announcement) => (\r\n        <CardAnnouncement\r\n          id={announcement._id}\r\n          title={announcement.title}\r\n          description={announcement.description}\r\n        />\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  announcements: state.announcements,\r\n});\r\n\r\nexport default connect(mapStateToProps, { viewAnnouncement })(Announcement);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\CardAnnouncement\\index.jsx",["276","277"],"import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport color from \"../../../utils/color\";\r\nimport parse from \"html-react-parser\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteAnnouncement } from \"../../../redux/actions/announcementAction\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nfunction CardAnnouncement({\r\n  id,\r\n  title,\r\n  description,\r\n  user,\r\n  deleteAnnouncement,\r\n  sucess,\r\n}) {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: color.white,\r\n      boxShadow: \"0 .5rem 1rem rgba(0,0,0,.15)\",\r\n    },\r\n    header: {\r\n      backgroundColor: color.primary,\r\n      padding: \"1rem\",\r\n      borderTopLeftRadius: \"0.5rem\",\r\n      borderTopRightRadius: \"0.5rem\",\r\n    },\r\n    body: {\r\n      padding: \"1rem\",\r\n      backgroundColor: color.white,\r\n      borderBottomLeftRadius: \"0.5rem\",\r\n      borderBottomRightRadius: \"0.5rem\",\r\n    },\r\n    title: {\r\n      color: color.white,\r\n    },\r\n    description: {\r\n      color: color.black,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDeleteAnnnouncement = (e) => {\r\n    deleteAnnouncement(id);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} md={6}>\r\n      {user.isAuthenticated.role === \"admin\" && (\r\n        <React.Fragment>\r\n          <Link to={`/admin/pengumuman/${id}`}>\r\n            <EditIcon\r\n              style={{\r\n                color: \"green\",\r\n                padding: \"1rem\",\r\n                cursor: \"pointer\",\r\n                backgroundColor: color.white,\r\n              }}\r\n            />\r\n          </Link>\r\n          <DeleteIcon\r\n            style={{\r\n              color: \"#dc3545\",\r\n              padding: \"1rem\",\r\n              cursor: \"pointer\",\r\n              backgroundColor: color.white,\r\n            }}\r\n            onClick={handleClickOpen}\r\n          />\r\n        </React.Fragment>\r\n      )}\r\n\r\n      <div className={classes.root}>\r\n        <div className={classes.header}>\r\n          <Typography varian=\"body1\" component=\"h2\" className={classes.title}>\r\n            {title}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.body}>\r\n          <Typography\r\n            varian=\"body1\"\r\n            component=\"p\"\r\n            className={classes.description}\r\n          >\r\n            {parse(description)}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Apakah anda yakin ingin menghapus {title} ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n            style={{ color: \"#dc3545\" }}\r\n          >\r\n            Batal\r\n          </Button>\r\n          <Button\r\n            onClick={handleDeleteAnnnouncement}\r\n            style={{ backgroundColor: \"#dc3545\", color: color.white }}\r\n            autoFocus\r\n          >\r\n            Hapus\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  sucess: state.sucess,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  deleteAnnouncement,\r\n})(CardAnnouncement);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Major\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\organisms\\Topic\\index.jsx",["278"],"import React from \"react\";\r\nimport { Grid, Typography, Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Sections from \"../../molecules/Sections\";\r\nimport color from \"../../../utils/color\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Topic({ id, major, user }) {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: color.white,\r\n      padding: \"2rem\",\r\n      boxShadow: \"0 1rem 3rem rgba(0, 0, 0, 0.175) !important\",\r\n      borderBottomLeftRadius: \"0.5rem\",\r\n      borderTopLeftradius: \"0.5rem\",\r\n    },\r\n    header: {\r\n      backgroundColor: color.primary,\r\n      color: color.white,\r\n      padding: \"1rem 2rem\",\r\n      borderTopLeftRadius: \"0.5rem\",\r\n      borderTopRightRadius: \"0.5rem\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.header}>\r\n        <Typography variant=\"h4\" component=\"h1\" style={{ fontWeight: 500 }}>\r\n          {major.majorName}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.root}>\r\n        <Container maxWidth=\"lg\">\r\n          <Sections\r\n            id={id}\r\n            isStudent={user.isAuthenticated.role === \"siswa\"}\r\n            isTeacher={user.isAuthenticated.role === \"teacher\"}\r\n            majorName={major.majorName}\r\n          />\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Topic);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Sections\\index.jsx",["279","280"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Section from \"../../atoms/Section\";\r\nimport ExamSection from \"../../atoms/ExamSection\";\r\nimport TheorySection from \"../../atoms/TheorySection\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport color from \"../../../utils/color\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport { deleteExam } from \"../../../redux/actions/examAction\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport SystemUpdateAltIcon from \"@material-ui/icons/SystemUpdateAlt\";\r\nimport { GET_ERRORS, SET_SUCESS } from \"../../../redux/actions\";\r\n\r\nfunction Sections({ id, isStudent, isTeacher, majorName }) {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      padding: \"1rem 0 2rem\",\r\n    },\r\n    subRoot: {\r\n      padding: \"2rem 0 2rem\",\r\n      borderBottom: `0.05px solid #bdbdbd`,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [theorys, setTheorys] = React.useState([]);\r\n\r\n  const [exams, setExams] = React.useState([]);\r\n\r\n  const handleDeleteTheory = (e, i, majorId) => {\r\n    axios.post(`${proxy}/api/theorys/delete/${i}/${majorId}`).then((res) => {\r\n      setTheorys([...res.data]);\r\n    });\r\n  };\r\n\r\n  const deleteExam = (id, type) => {\r\n    axios\r\n      .post(`${proxy}/api/exams/delete/${id}/${type}`)\r\n      .then((res) => {\r\n        setExams([...res.data]);\r\n        dispatch({ type: GET_ERRORS, payload: {} });\r\n        dispatch({ type: SET_SUCESS, payload: true });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: SET_SUCESS, payload: false });\r\n        dispatch({ type: GET_ERRORS, payload: err.response.data });\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    axios\r\n      .get(`${proxy}/api/exams/view-exam/${id}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setExams([...res.data]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    axios\r\n      .get(`${proxy}/api/theorys/view/${id}`)\r\n      .then((res) => {\r\n        setTheorys([...res.data]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {!isStudent && (\r\n        <Alert\r\n          severity=\"warning\"\r\n          style={{ marginTop: \"0\", marginBottom: \"1.5rem\" }}\r\n        >\r\n          Presensi hanya tersedia untuk siswa\r\n        </Alert>\r\n      )}\r\n      <Grid container spacing={2} className={classes.subRoot}>\r\n        <Section\r\n          icon={<PeopleIcon style={{ width: \"100%\", height: 160 }} />}\r\n          title=\"Presensi Murid \"\r\n          description=\"Silahkan absen disini\"\r\n          isLink={true}\r\n          id={id}\r\n          isStudent={isStudent}\r\n        />\r\n      </Grid>\r\n      <Grid container spacing={2} className={classes.subRoot}>\r\n        {theorys.map((theory) => (\r\n          <TheorySection\r\n            icon={\r\n              <img\r\n                src={\"/helper/theorys.jpg\"}\r\n                alt=\"exam\"\r\n                style={{ width: \"100%\", height: 100 }}\r\n              />\r\n            }\r\n            title={`Materi ke ${theory.numberOfTheory}`}\r\n            isLink={true}\r\n            id={id}\r\n            isStudent={isStudent}\r\n            majorName={majorName}\r\n            i={theory.numberOfTheory}\r\n            handleDelete={handleDeleteTheory}\r\n            isTeacher={isTeacher}\r\n          >\r\n            <Grid\r\n              container\r\n              alignItems=\"flex-end\"\r\n              style={{ paddingTop: \"0.25rem\" }}\r\n            >\r\n              <AssignmentIcon /> {theory.description}\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              alignItems=\"flex-end\"\r\n              style={{ paddingTop: \"0.75rem\" }}\r\n            >\r\n              <SystemUpdateAltIcon />{\" \"}\r\n              <span\r\n                style={{ padding: \"0 0.5rem\", cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  axios\r\n                    .get(\r\n                      `${proxy}/api/theorys/download?filename=${theory.fileName}`\r\n                    )\r\n                    .then(() => {\r\n                      alert(\"sucess\");\r\n                      // fileDownload(data, `${theory.fileName}`);\r\n                    })\r\n                    .catch((err) => console.log(\"error\"));\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Download {theory.fileName}\r\n              </span>\r\n            </Grid>\r\n          </TheorySection>\r\n        ))}\r\n      </Grid>\r\n      <Grid container spacing={2} className={classes.subRoot}>\r\n        {exams.map((exam, i) => (\r\n          <ExamSection\r\n            icon={\r\n              <img\r\n                src={\"/helper/exam.png\"}\r\n                alt=\"exam\"\r\n                style={{ width: \"100%\", height: 200 }}\r\n              />\r\n            }\r\n            title={exam.type}\r\n            description={exam.type.split(\"-\").join(\" \")}\r\n            isLink={true}\r\n            id={id}\r\n            isStudent={isStudent}\r\n            majorName={majorName}\r\n            handleDelete={deleteExam}\r\n            type={exam.type}\r\n            isTeacher={isTeacher}\r\n            i={i}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(null, { deleteExam })(Sections);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Section\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\userReducer.js",["281"],"import { SET_CURRENT_USER, SET_USER, SET_LOADING } from \"../actions\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  userData: {},\r\n  loading: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: action.payload,\r\n        user: action.payload,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        userData: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\index.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\userAction.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\setAuthToken.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\proxy.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\errorReducer.js",["282"],"import { GET_ERRORS } from \"../actions\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\is-empty.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\utils\\PrivateRouteAdmin.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Admins\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\organisms\\Admin\\index.jsx",["283"],"import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport CKEditor from \"../../atoms/CKEditor\";\r\nimport Register from \"../../molecules/Register\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport color from \"../../../utils/color\";\r\nimport CreateTemplate from \"../../molecules/CreateTemplate\";\r\n\r\nfunction Admin() {\r\n  const [isRegister, setIsRegister] = React.useState(true);\r\n  const [isAnnouncement, setIsAnnouncement] = React.useState(false);\r\n  const [isMajor, setIsMajor] = React.useState(false);\r\n\r\n  const handleRegister = () => {\r\n    setIsRegister(true);\r\n    setIsAnnouncement(false);\r\n    setIsMajor(false);\r\n  };\r\n\r\n  const handleAnnouncement = () => {\r\n    setIsRegister(false);\r\n    setIsAnnouncement(true);\r\n    setIsMajor(false);\r\n  };\r\n\r\n  const handleIsMajor = () => {\r\n    setIsMajor(true);\r\n    setIsAnnouncement(false);\r\n    setIsMajor(false);\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    active: {\r\n      color: color.primary,\r\n      borderBottom: `4px solid ${color.primary}`,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper square>\r\n        <Tabs\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          aria-label=\"disabled tabs example\"\r\n        >\r\n          <Tab\r\n            label=\"Daftar\"\r\n            onClick={handleRegister}\r\n            className={isRegister && classes.active}\r\n          />\r\n          <Tab\r\n            label=\"Pengumuman\"\r\n            onClick={handleAnnouncement}\r\n            className={isAnnouncement && classes.active}\r\n          />\r\n        </Tabs>\r\n      </Paper>\r\n      <div style={{ marginTop: \"4rem\" }}></div>\r\n      {isRegister && <Register />}\r\n      {isAnnouncement && (\r\n        <CreateTemplate title=\"Buat Pengumuman\">\r\n          <CKEditor titles=\"Buat\" />{\" \"}\r\n        </CreateTemplate>\r\n      )}\r\n      {isMajor && (\r\n        <CreateTemplate title=\"Buat mata pelajaran\">\r\n          <CKEditor titles=\"Buat\" />{\" \"}\r\n        </CreateTemplate>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\Register\\index.jsx",["284","285","286","287","288","289"],"import React from \"react\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport Input from \"../../atoms/Input\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport color from \"../../../utils/color\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../../redux/actions/userAction\";\r\nimport { clearErrorSucess } from \"../../../redux/actions/announcementAction\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"10px 26px 10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nfunction Register({ registerUser, error, sucess, clearErrorSucess }) {\r\n  const [users, setUser] = React.useState({\r\n    role: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    nis: \"\",\r\n    age: \"\",\r\n    address: \"\",\r\n    religion: \"\",\r\n    majorId: [],\r\n    kelas: \"\",\r\n  });\r\n\r\n  const [majors, setMajors] = React.useState([]);\r\n\r\n  const [kelass, setClasss] = React.useState([]);\r\n\r\n  const handleChange = (e, name) => {\r\n    if (name === \"majorId\") {\r\n      if (users.majorId.includes(e.target.value)) {\r\n        users.majorId.filter((major) => {\r\n          return major !== e.target.value;\r\n        });\r\n        setUser({\r\n          ...users,\r\n        });\r\n      } else {\r\n        // const majorId = users.majorId.slice(0);\r\n        users.majorId.push(e.target.value);\r\n        setUser({\r\n          ...users,\r\n        });\r\n      }\r\n    } else {\r\n      users[name] = e.target.value;\r\n      setUser({ ...users });\r\n    }\r\n  };\r\n\r\n  const handleMenu = (e) => {\r\n    users[\"role\"] = e.target.value;\r\n    setUser({ ...users });\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      borderRadius: \"0.5rem\",\r\n      padding: \"2rem\",\r\n      backgroundColor: color.white,\r\n      boxShadow: \"0 1rem 3rem rgba(0, 0, 0, 0.175) !important\",\r\n    },\r\n    title: {\r\n      color: \"#404145\",\r\n      fontWeight: \"500\",\r\n    },\r\n    btn: {\r\n      marginTop: \"2rem\",\r\n    },\r\n    alert: {\r\n      marginTop: \"1.5rem\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    registerUser(users);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    clearErrorSucess();\r\n    axios.get(`${proxy}/api/majors/view`).then((res) => {\r\n      setMajors(res.data);\r\n    });\r\n    axios.get(`${proxy}/api/class/view`).then((res) => {\r\n      setClasss(res.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item xs={12} md={8}>\r\n        <form onSubmit={onSubmit}>\r\n          <div className={classes.root}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              component=\"h1\"\r\n              align=\"center\"\r\n              className={classes.title}\r\n            >\r\n              Daftar ke Jarpis\r\n            </Typography>\r\n            <FormLabel component=\"legend\" style={{ marginTop: \"2rem\" }}>\r\n              <Typography variant=\"h5\" component=\"p\">\r\n                Role\r\n              </Typography>\r\n            </FormLabel>\r\n            <RadioGroup\r\n              aria-label=\"gender\"\r\n              name=\"Role\"\r\n              value={users.role}\r\n              onChange={handleMenu}\r\n              row\r\n            >\r\n              <FormControlLabel\r\n                value=\"siswa\"\r\n                control={<Radio />}\r\n                label=\"Siswa\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"teacher\"\r\n                control={<Radio />}\r\n                label=\"Guru\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"admin\"\r\n                control={<Radio />}\r\n                label=\"Admin\"\r\n              />\r\n            </RadioGroup>\r\n            {/* <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={users.role}\r\n              onChange={handleMenu}\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"siswa\">Siswa</MenuItem>\r\n              <MenuItem value=\"teacher\">Guru</MenuItem>\r\n              <MenuItem value=\"admin\">Admin</MenuItem>\r\n            </Select> */}\r\n            {/* <InputLabel\r\n              id=\"demo-simple-select-label\"\r\n              style={{ marginTop: \"2rem\" }}\r\n            >\r\n              Role\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={users.role}\r\n              onChange={handleMenu}\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"Siswa\">Siswa</MenuItem>\r\n              <MenuItem value=\"Guru\">Guru</MenuItem>\r\n              <MenuItem value=\"Admin\">Admin</MenuItem>\r\n            </Select> */}\r\n            <Input\r\n              id=\"username\"\r\n              label=\"Email / Username\"\r\n              placeholder=\"contoh: beta@gmail.com\"\r\n              handleChange={handleChange}\r\n            />\r\n            <Input\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              placeholder=\"*********\"\r\n              handleChange={handleChange}\r\n              isPassword={true}\r\n            />\r\n            <Input\r\n              id=\"name\"\r\n              label=\"Nama Lengkap\"\r\n              placeholder=\"contoh: Beta Kurnia\"\r\n              handleChange={handleChange}\r\n            />\r\n\r\n            {users.role === \"teacher\" && (\r\n              <React.Fragment>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  style={{ marginTop: \"1.5rem\" }}\r\n                >\r\n                  <FormLabel component=\"legend\">Mata Pelajaran</FormLabel>\r\n                  <FormGroup row>\r\n                    {majors.map((major) => (\r\n                      <React.Fragment>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              // checked={gilad}\r\n                              value={major._id}\r\n                              onChange={(e) => {\r\n                                handleChange(e, \"majorId\");\r\n                              }}\r\n                              name={major.majorName}\r\n                            />\r\n                          }\r\n                          label={major.majorName}\r\n                        />\r\n                      </React.Fragment>\r\n                    ))}\r\n                  </FormGroup>\r\n                </FormControl>\r\n                <label\r\n                  style={{\r\n                    marginTop: \"1.5rem\",\r\n                    display: \"block\",\r\n                    color: color.label,\r\n                    fontSize: \"1rem\",\r\n                  }}\r\n                >\r\n                  Kelas\r\n                </label>\r\n                {/* <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                    Kelas\r\n                  </InputLabel> */}\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  style={{ marginTop: \"0.5rem\" }}\r\n                  value={users.kelas}\r\n                  onChange={(e) => {\r\n                    handleChange(e, \"kelas\");\r\n                  }}\r\n                  input={<BootstrapInput />}\r\n                  fullWidth\r\n                >\r\n                  {kelass.map((kelas) => (\r\n                    <option value={kelas._id}>{kelas.kelas}</option>\r\n                  ))}\r\n                </NativeSelect>\r\n              </React.Fragment>\r\n            )}\r\n\r\n            {users.role === \"siswa\" && (\r\n              <React.Fragment>\r\n                <Input\r\n                  id=\"nis\"\r\n                  label=\"NIS\"\r\n                  placeholder=\"contoh: 1234567890\"\r\n                  handleChange={handleChange}\r\n                />\r\n                <label\r\n                  style={{\r\n                    marginTop: \"1.5rem\",\r\n                    display: \"block\",\r\n                    color: color.label,\r\n                    fontSize: \"1rem\",\r\n                  }}\r\n                >\r\n                  Kelas\r\n                </label>\r\n                <NativeSelect\r\n                  id=\"demo-customized-select-native\"\r\n                  style={{ marginTop: \"0.5rem\" }}\r\n                  value={users.kelas}\r\n                  onChange={(e) => {\r\n                    handleChange(e, \"kelas\");\r\n                  }}\r\n                  input={<BootstrapInput />}\r\n                  fullWidth\r\n                >\r\n                  {kelass.map((kelas) => (\r\n                    <option value={kelas._id}>{kelas.kelas}</option>\r\n                  ))}\r\n                </NativeSelect>\r\n                <Input\r\n                  id=\"age\"\r\n                  label=\"Umur\"\r\n                  placeholder=\"contoh: 14 tahun\"\r\n                  handleChange={handleChange}\r\n                />\r\n                <Input\r\n                  id=\"address\"\r\n                  label=\"Alamat\"\r\n                  placeholder=\"contoh: Blater\"\r\n                  handleChange={handleChange}\r\n                />\r\n                <Input\r\n                  id=\"religion\"\r\n                  label=\"Agama\"\r\n                  placeholder=\"contoh: ISLAM\"\r\n                  handleChange={handleChange}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            {!isEmpty(error) && (\r\n              <Alert className={classes.alert} severity=\"error\">\r\n                {error.username || error.password || error.role || error.name}\r\n              </Alert>\r\n            )}\r\n            {sucess && (\r\n              <Alert className={classes.alert}> Akun berhasil dibuat</Alert>\r\n            )}\r\n            <Grid container justify=\"center\">\r\n              <Grid item xs={12} md={4}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  className={classes.btn}\r\n                >\r\n                  Daftar\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  error: state.error,\r\n  sucess: state.sucess,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { registerUser, clearErrorSucess })(Register)\r\n);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\CKEditor\\index.jsx",["290"],"import React from \"react\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport Input from \"../Input\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addAnnouncement,\r\n  updateAnnouncement,\r\n  clearErrorSucess,\r\n} from \"../../../redux/actions/announcementAction\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction CKEditors({\r\n  addAnnouncement,\r\n  titles,\r\n  id,\r\n  updateAnnouncement,\r\n  sucess,\r\n  clearErrorSucess,\r\n  history,\r\n  error,\r\n}) {\r\n  const useStyles = makeStyles({\r\n    btn: {\r\n      marginTop: \"2rem\",\r\n    },\r\n    alert: {\r\n      marginTop: \"1.5rem\",\r\n    },\r\n  });\r\n\r\n  const [announcement, setAnnouncement] = React.useState({\r\n    title: \"\",\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\",\r\n  });\r\n\r\n  const handleAnnouncement = (e, name) => {\r\n    announcement[name] = e.target.value;\r\n    setAnnouncement({ ...announcement });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (id) {\r\n      updateAnnouncement(id, announcement, history);\r\n    } else {\r\n      addAnnouncement(announcement, history);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    clearErrorSucess();\r\n    if (id) {\r\n      axios\r\n        .get(`${proxy}/api/announcement/view/${id}`)\r\n        .then((res) => {\r\n          announcement[\"title\"] = res.data.title;\r\n          announcement[\"description\"] = res.data.description;\r\n\r\n          setAnnouncement({ ...announcement });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <Input\r\n          id=\"title\"\r\n          label=\"Judul\"\r\n          placeholder=\"\"\r\n          handleChange={handleAnnouncement}\r\n          value={announcement.title}\r\n        />\r\n        <div style={{ marginTop: \"1.5rem\" }}>\r\n          <label style={{ color: \"rgba(0, 0, 0, 0.54)\" }}>Deskripsi</label>\r\n          <div style={{ marginTop: \"0.5rem\" }}></div>\r\n          <CKEditor\r\n            editor={ClassicEditor}\r\n            data={announcement.description}\r\n            onReady={(editor) => {\r\n              // You can store the \"editor\" and use when it is needed.\r\n              console.log(\"Editor is ready to use!\", editor);\r\n            }}\r\n            onChange={(event, editor) => {\r\n              const data = editor.getData();\r\n              console.log({ data });\r\n              announcement[\"description\"] = data;\r\n              setAnnouncement(announcement);\r\n            }}\r\n            onBlur={(event, editor) => {\r\n              console.log(\"Blur.\", editor);\r\n            }}\r\n            onFocus={(event, editor) => {\r\n              console.log(\"Focus.\", editor);\r\n            }}\r\n          />\r\n        </div>\r\n        {sucess && (\r\n          <Alert className={classes.alert}>\r\n            {titles} data pengumuman sukses\r\n          </Alert>\r\n        )}\r\n        {!isEmpty(error) && (\r\n          <Alert className={classes.alert} severity=\"error\">\r\n            {error.title || error.description}\r\n          </Alert>\r\n        )}\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12} md={4}>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              className={classes.btn}\r\n            >\r\n              {titles}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  sucess: state.sucess,\r\n  error: state.error,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    addAnnouncement,\r\n    updateAnnouncement,\r\n    clearErrorSucess,\r\n  })(CKEditors)\r\n);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\announcementReducer.js",["291"],"import { GET_ANNOUNCMENT } from \"../actions\";\r\n\r\nconst initialState = {\r\n  announcement: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ANNOUNCMENT:\r\n      return {\r\n        ...state,\r\n        announcement: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\announcementAction.js",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\reducers\\sucessReducer.js",["292"],"import { SET_SUCESS } from \"../actions\";\r\n\r\nconst initialState = false;\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_SUCESS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\CreateTemplate\\index.jsx",["293","294","295","296","297"],"import React from \"react\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport Input from \"../../atoms/Input\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport color from \"../../../utils/color\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../../redux/actions/userAction\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction Register({ registerUser, error, sucess, title, children }) {\r\n  const [users, setUser] = React.useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    role: \"\",\r\n  });\r\n\r\n  const handleChange = (e, name) => {\r\n    users[name] = e.target.value;\r\n    setUser(users);\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      // border: `1px solid ${color.white}`,\r\n      borderRadius: \"0.5rem\",\r\n      padding: \"2rem\",\r\n      backgroundColor: color.white,\r\n      boxShadow: \"0 1rem 3rem rgba(0, 0, 0, 0.175) !important\",\r\n    },\r\n    title: {\r\n      color: \"#404145\",\r\n      fontWeight: \"500\",\r\n    },\r\n    btn: {\r\n      marginTop: \"2rem\",\r\n    },\r\n    alert: {\r\n      marginTop: \"1.5rem\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item xs={12} md={8}>\r\n        <div className={classes.root}>\r\n          <Typography\r\n            variant=\"h4\"\r\n            component=\"h1\"\r\n            align=\"center\"\r\n            className={classes.title}\r\n          >\r\n            {title}\r\n          </Typography>\r\n          {children}\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  error: state.error,\r\n  sucess: state.sucess,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { registerUser })(Register));\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\AnnouncementUpdate\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Present\\index.jsx",["298"],"import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport color from \"../../../utils/color\";\r\nimport Table from \"../../atoms/Table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\n\r\nfunction Present() {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: color.white,\r\n      padding: \"2rem\",\r\n      boxShadow: \"0 .5rem 1rem rgba(0,0,0,.15)\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const { id } = useParams();\r\n\r\n  const [major, setMajor] = React.useState({});\r\n\r\n  React.useEffect(() => {\r\n    axios\r\n      .get(`${proxy}/api/majors/view/${id}`)\r\n      .then((res) => {\r\n        setMajor(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h4\" component=\"h1\" style={{ fontWeight: 500 }}>\r\n        Daftar hadir siswa\r\n      </Typography>\r\n      <Table id={id} major={major} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Present;\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Table\\index.jsx",["299","300","301","302","303"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport color from \"../../../utils/color\";\r\nimport dateformat from \"dateformat\";\r\nimport Badge from \"../../atoms/Badge\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  blue: {\r\n    backgroundColor: \"#3f51b5\",\r\n    padding: \"0.5rem 1rem\",\r\n    color: \"#ffffff\",\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n];\r\n\r\nfunction BasicTable({ id, user, major }) {\r\n  var dateFormat = require(\"dateformat\");\r\n  dateFormat.i18n = {\r\n    dayNames: [\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum'at\",\r\n      \"Sabtu\",\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum;at\",\r\n      \"Sabtu\",\r\n    ],\r\n    monthNames: [\r\n      \"Junuari\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n      \"Januari\",\r\n      \"Februari\",\r\n      \"Maret\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"Desember\",\r\n    ],\r\n    timeNames: [\"a\", \"p\", \"am\", \"pm\", \"A\", \"P\", \"AM\", \"PM\"],\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [presents, setPresents] = React.useState({\r\n    status: [],\r\n  });\r\n\r\n  const [present, setPresent] = React.useState({\r\n    userId: \"\",\r\n    majorId: \"\",\r\n    status: \"Hadir\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    present[\"status\"] = event.target.value;\r\n    setPresent({ ...present });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setOpen(false);\r\n\r\n    axios\r\n      .post(`${proxy}/api/presents/create`, present)\r\n      .then((res) => {\r\n        setPresents({ ...res.data });\r\n      })\r\n      .catch((err) => console.log(err.response.data));\r\n  };\r\n\r\n  const [undoneArray, setUndoneArray] = React.useState([]);\r\n\r\n  let i = 0;\r\n\r\n  React.useEffect(() => {\r\n    present[\"userId\"] = user.user.id;\r\n    present[\"majorId\"] = id;\r\n    setPresent({ ...present });\r\n\r\n    axios\r\n      .get(`${proxy}/api/presents/view/${user.user.id}/${id}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setPresents({ ...res.data });\r\n        if (!isEmpty(res.data)) {\r\n          setUndoneArray([...new Array(14 - res.data.status.length)]);\r\n        } else {\r\n          setUndoneArray([...new Array(14)]);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginTop: \"3rem\" }}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead style={{ backgroundColor: color.primary }}>\r\n          <TableRow>\r\n            <TableCell style={{ color: color.white }}>Tanggal</TableCell>\r\n            <TableCell style={{ color: color.white }}>Deskripsi</TableCell>\r\n            <TableCell style={{ color: color.white }}>Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {!isEmpty(presents.status) &&\r\n            presents.status.map((status) => (\r\n              <TableRow key={status}>\r\n                <TableCell>\r\n                  {\" \"}\r\n                  <p>\r\n                    {dateFormat(\r\n                      i * 604800000 + Date.parse(major.hoursOfSubject),\r\n                      \"mmmm d, yyyy \"\r\n                    )}\r\n                  </p>\r\n                  <p style={{ lineHeight: 0.5 }} test={i++}>\r\n                    {dateFormat(major.hoursOfSubject, \"dddd hh:MM TT\")} -{\" \"}\r\n                    {dateFormat(major.hoursOfSubjectFinish, \"hh:MM TT\")}\r\n                  </p>\r\n                </TableCell>\r\n                <TableCell style={{ color: \"#9e9e9e\" }}>\r\n                  Absen sudah ditutup\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Badge status={status} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          {undoneArray.map((undone, index) => (\r\n            <TableRow key={undone}>\r\n              <TableCell>\r\n                {\" \"}\r\n                <p>\r\n                  {dateFormat(\r\n                    i * 604800000 + Date.parse(major.hoursOfSubject),\r\n                    \"mmmm d, yyyy \"\r\n                  )}\r\n                </p>\r\n                <p style={{ lineHeight: 0.5 }} test={i++}>\r\n                  {dateFormat(major.hoursOfSubject, \"dddd hh:MM TT\")} -{\" \"}\r\n                  {dateFormat(major.hoursOfSubjectFinish, \"hh:MM TT\")}\r\n                </p>\r\n              </TableCell>\r\n              {console.log(Date.parse(new Date()))}\r\n              {console.log(\r\n                (i - 1) * 604800000 + Date.parse(major.hoursOfSubject)\r\n              )}\r\n              {Date.parse(new Date()) >\r\n              (i - 1) * 604800000 + Date.parse(major.hoursOfSubject) ? (\r\n                <TableCell\r\n                  onClick={handleClickOpen}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  Absen disini\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell style={{ color: \"#9e9e9e\" }}>\r\n                  Absen belum tersedia\r\n                </TableCell>\r\n              )}\r\n\r\n              <TableCell>\r\n                <span className={classes.blue}>Belum absen</span>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent style={{ minWidth: 480 }}>\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            <Typography variant=\"h5\" component=\"h2\" style={{ fontWeight: 500 }}>\r\n              Kehadiran\r\n            </Typography>\r\n          </DialogTitle>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                aria-label=\"gender\"\r\n                name=\"gender1\"\r\n                value={present.status}\r\n                onChange={handleChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Hadir\"\r\n                  control={<Radio />}\r\n                  label=\"Hadir\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Sakit\"\r\n                  control={<Radio />}\r\n                  label=\"Sakit\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Tidak Hadir\"\r\n                  control={<Radio />}\r\n                  label=\"Tidak hadir\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n            style={{ color: \"#dc3545\" }}\r\n          >\r\n            Batal\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            onClick={handleSubmit}\r\n            color=\"primary\"\r\n            autoFocus\r\n            style={{ backgroundColor: \"#008000\", color: \"#ffffff\" }}\r\n          >\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BasicTable);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Pengumuman\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\Badge\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Theory\\index.jsx",["304","305","306","307","308","309"],"import React from \"react\";\r\nimport CKEditor from \"../../atoms/CKEditor\";\r\nimport CreateTemplate from \"../../molecules/CreateTemplate\";\r\nimport TheoryTemplate from \"../../molecules/TheoryTemplate\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Input from \"../../atoms/Input\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SET_SUCESS, GET_ERRORS } from \"../../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Pengumuman({ sucess, error }) {\r\n  const { i, id } = useParams();\r\n\r\n  const [tipes, setTipes] = React.useState([]);\r\n\r\n  const [theory, setTheory] = React.useState({\r\n    numberOfTheory: i,\r\n    description: \"\",\r\n    file: \"\",\r\n    fileName: \"upload materi\",\r\n  });\r\n\r\n  const handleFile = (e) => {\r\n    console.log(e.target.files[0]);\r\n    theory[\"file\"] = e.target.files[0];\r\n    theory[\"fileName\"] = e.target.files[0].name;\r\n    setTheory({ ...theory });\r\n    console.log(theory);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    theory[\"description\"] = e.target.value;\r\n    setTheory({ ...theory });\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      marginTop: \"1.5rem\",\r\n      \"& > *\": {\r\n        margin: \"0.5rem\",\r\n      },\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n    alert: {\r\n      marginTop: \"1.5rem\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const file = new FormData();\r\n\r\n    file.append(\"file\", theory.file);\r\n    file.append(\"fileName\", theory.fileName);\r\n    file.append(\"description\", theory.description);\r\n    file.append(\"numberOfTheory\", theory.numberOfTheory);\r\n    file.append(\"majorId\", id);\r\n\r\n    axios\r\n      .post(`${proxy}/api/theorys/create`, file)\r\n      .then((res) => {\r\n        dispatch({ type: GET_ERRORS, payload: {} });\r\n        dispatch({ type: SET_SUCESS, payload: true });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: SET_SUCESS, payload: false });\r\n        dispatch({ type: GET_ERRORS, payload: err.response.data });\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    axios\r\n      .get(`${proxy}/api/theorys/view/${i}/${id}`)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setTheory({ ...res.data });\r\n        } else {\r\n          setTheory({\r\n            numberOfTheory: i,\r\n            description: \"\",\r\n            file: \"\",\r\n            fileName: \"upload materi\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [i, id]);\r\n\r\n  return (\r\n    <CreateTemplate title={`Materi ke ${i}`}>\r\n      <div\r\n        style={{\r\n          paddingBottom: \"2rem\",\r\n          borderBottom: `0.05px solid #bdbdbd`,\r\n        }}\r\n      ></div>\r\n      <form onSubmit={handleSubmit} enctype=\"multipart/form-data\">\r\n        <TheoryTemplate title=\"Tugas\" icon={<AssignmentIcon />}>\r\n          <Input\r\n            id=\"description\"\r\n            label=\"Deskripsi\"\r\n            value={theory.description}\r\n            handleChange={handleChange}\r\n          />\r\n        </TheoryTemplate>\r\n        <TheoryTemplate title=\"Materi\">\r\n          <Button>\r\n            <div className={classes.root}>\r\n              <input\r\n                accept=\"application/pdf, application/vnd.ms-excel\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                name=\"file\"\r\n                onChange={(e) => {\r\n                  handleFile(e);\r\n                }}\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"secondary\" component=\"span\">\r\n                  {theory.fileName}\r\n                </Button>\r\n              </label>\r\n            </div>\r\n          </Button>\r\n        </TheoryTemplate>\r\n        {tipes.map(({ tipe }) => (\r\n          <React.Fragment>\r\n            <TheoryTemplate title={tipe}></TheoryTemplate>\r\n          </React.Fragment>\r\n        ))}\r\n        {!isEmpty(error) && (\r\n          <Alert className={classes.alert} severity=\"error\">\r\n            {error.description || error.file}\r\n          </Alert>\r\n        )}\r\n        {sucess && (\r\n          <Alert className={classes.alert}> Materi berhasil dibuat</Alert>\r\n        )}\r\n        <FormLabel component=\"legend\" style={{ marginTop: \"2rem\" }}></FormLabel>\r\n\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12} md={4}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{ marginTop: \"0.5rem\" }}\r\n              fullWidth\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </CreateTemplate>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.error,\r\n  sucess: state.sucess,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Pengumuman);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\TheoryTemplate\\index.jsx",[],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Exams\\index.jsx",["310","311","312","313","314","315","316","317"],"import React from \"react\";\r\nimport CKEditor from \"../../atoms/CKEditor\";\r\nimport CreateTemplate from \"../../molecules/CreateTemplate\";\r\nimport TheoryTemplate from \"../../molecules/TheoryTemplate\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport Input from \"../../atoms/Input\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport { connect } from \"react-redux\";\r\nimport { createExam } from \"../../../redux/actions/examAction\";\r\nimport { clearErrorSucess } from \"../../../redux/actions/announcementAction\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nfunction Exams({ error, sucess, createExam, user, clearErrorSucess }) {\r\n  const [role, setRole] = React.useState(5);\r\n  // const [arrLen, setArrLen] = React.useState([...new Array(20)]);\r\n\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const [exam, setExam] = React.useState([...new Array(5)]);\r\n\r\n  const { ujian, id } = useParams();\r\n\r\n  const handleMenu = (e) => {\r\n    setRole(e.target.value);\r\n\r\n    setExam([...new Array(e.target.value)]);\r\n  };\r\n\r\n  const handleMenus = (e, i) => {\r\n    exam[i].answer = e.target.value;\r\n\r\n    setExam([...exam]);\r\n    console.log(exam);\r\n  };\r\n\r\n  const [tipes, setTipes] = React.useState([]);\r\n\r\n  const handleAdd = (e) => {\r\n    const a = [\r\n      { examName: \"\", possibilitesAnswer: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n      { examName: \"\", possibilitesAnswer: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n      { examName: \"\", possibilitesAnswer: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n      { examName: \"\", possibilitesAnswer: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n      { examName: \"\", possibilitesAnswer: [\"\", \"\", \"\", \"\"], answer: \"\" },\r\n    ];\r\n    // console.log([...exam]);\r\n    setExam([...exam, ...a]);\r\n  };\r\n\r\n  const handleTipe = (e, val) => {\r\n    tipes.push({\r\n      tipe: val,\r\n    });\r\n    setTipes([...tipes]);\r\n  };\r\n\r\n  const handleChange = (e, id, idx = false) => {\r\n    if (idx === false) {\r\n      exam[id].examName = e.target.value;\r\n      setExam([...exam]);\r\n    } else {\r\n      exam[id].possibilitesAnswer[idx] = e.target.value;\r\n      setExam([...exam]);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    clearErrorSucess();\r\n    axios.get(`${proxy}/api/exams/view/${id}?type=${ujian}`).then((res) => {\r\n      if (res.data) {\r\n        console.log(res.data);\r\n        setExam([...res.data.question]);\r\n      } else {\r\n        exam.forEach((a, i) => {\r\n          let obj = {\r\n            examName: \"\",\r\n            possibilitesAnswer: [\"\", \"\", \"\", \"\"],\r\n            answer: \"\",\r\n          };\r\n          exam[i] = obj;\r\n        });\r\n        setExam([...exam]);\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, [id, ujian]);\r\n\r\n  const handleSubmit = () => {\r\n    createExam({\r\n      userId: \"guru\",\r\n      teacherId: user.user.id,\r\n      majorId: id,\r\n      question: exam,\r\n      type: ujian,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <CreateTemplate title={`${ujian}`}>\r\n      <div\r\n        style={{\r\n          paddingBottom: \"2rem\",\r\n          borderBottom: `0.05px solid #bdbdbd`,\r\n        }}\r\n      ></div>\r\n      {tipes.map(({ tipe }) => (\r\n        <React.Fragment>\r\n          <TheoryTemplate title={tipe}></TheoryTemplate>\r\n        </React.Fragment>\r\n      ))}\r\n      {!loading &&\r\n        exam.map((arr, i) => (\r\n          <React.Fragment>\r\n            <Input\r\n              id={i}\r\n              label={`Soal no ${i + 1}`}\r\n              placeholder=\"contoh: 1 + 1\"\r\n              handleChange={handleChange}\r\n              value={arr.examName}\r\n            ></Input>\r\n            <ul style={{ listStyle: \"none\" }}>\r\n              <RadioGroup\r\n                aria-label=\"answer\"\r\n                name={i}\r\n                value={arr.answer}\r\n                onChange={(e) => {\r\n                  handleMenus(e, i);\r\n                }}\r\n              >\r\n                <li style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n                  {\" \"}\r\n                  <FormControlLabel value=\"a\" control={<Radio />} />{\" \"}\r\n                  <Input\r\n                    id={`${i}`}\r\n                    label=\"Jawaban a\"\r\n                    // placeholder=\"contoh: 1 + 1\"\r\n                    idx={0}\r\n                    handleChange={handleChange}\r\n                    value={arr.possibilitesAnswer[0]}\r\n                  ></Input>\r\n                </li>\r\n                <li style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n                  <FormControlLabel value=\"b\" control={<Radio />} />{\" \"}\r\n                  <Input\r\n                    id={`${i}`}\r\n                    label=\"Jawaban b\"\r\n                    // placeholder=\"contoh: 1 + 1\"\r\n                    idx={1}\r\n                    handleChange={handleChange}\r\n                    value={arr.possibilitesAnswer[1]}\r\n                  ></Input>\r\n                </li>\r\n                <li style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n                  <FormControlLabel value=\"c\" control={<Radio />} />{\" \"}\r\n                  <Input\r\n                    id={`${i}`}\r\n                    label=\"Jawaban c\"\r\n                    // placeholder=\"contoh: 1 + 1\"\r\n                    idx={2}\r\n                    handleChange={handleChange}\r\n                    value={arr.possibilitesAnswer[2]}\r\n                  ></Input>\r\n                </li>\r\n                <li style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n                  <FormControlLabel value=\"d\" control={<Radio />} />{\" \"}\r\n                  <Input\r\n                    id={`${i}`}\r\n                    label=\"Jawaban d\"\r\n                    // placeholder=\"contoh: 1 + 1\"\r\n                    idx={3}\r\n                    handleChange={handleChange}\r\n                    value={arr.possibilitesAnswer[3]}\r\n                  ></Input>\r\n                </li>\r\n              </RadioGroup>\r\n            </ul>\r\n          </React.Fragment>\r\n        ))}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        style={{ marginTop: \"2rem\" }}\r\n        onClick={handleAdd}\r\n      >\r\n        Tambah 5 Soal <AddIcon style={{ paddingLeft: \"0.5rem\" }} />\r\n      </Button>{\" \"}\r\n      {sucess && <Alert style={{ marginTop: \"2rem\" }}>Berhasil dibuat </Alert>}\r\n      {!isEmpty(error) && (\r\n        <Alert severity=\"error\" style={{ marginTop: \"2rem\" }}>\r\n          {error.examStudentAnswer}\r\n        </Alert>\r\n      )}\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={12} md={6}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSubmit}\r\n            style={{ marginTop: \"1.5rem\" }}\r\n            fullWidth\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </CreateTemplate>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  error: state.error,\r\n  sucess: state.sucess,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createExam, clearErrorSucess })(\r\n  Exams\r\n);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\ExamSection\\index.jsx",["318"],"import React from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport color from \"../../../utils/color\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nfunction Section({\r\n  description,\r\n  icon,\r\n  title,\r\n  isLink,\r\n  id,\r\n  isStudent,\r\n  majorName,\r\n  handleDelete,\r\n  history,\r\n  type,\r\n  isTeacher,\r\n  i,\r\n}) {\r\n  const useStyles = makeStyles({\r\n    icon: {\r\n      width: \"100%\",\r\n    },\r\n    link: {\r\n      cursor: \"pointer\",\r\n    },\r\n    description: {\r\n      color: \"#424242\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [open2, setOpen2] = React.useState(false);\r\n\r\n  const handleClickOpen = (e, isDelete) => {\r\n    if (isDelete === \"delete\") {\r\n      setOpen2(true);\r\n    } else {\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = (e, a) => {\r\n    setOpen(false);\r\n    if (a == \"a\") {\r\n      history.push(`/mata-pelajaran/${title}${majorName}/${id}`);\r\n    }\r\n  };\r\n\r\n  const handleClose2 = () => {\r\n    handleDelete(id, type);\r\n    setOpen2(false);\r\n  };\r\n\r\n  const handleClose3 = () => {\r\n    setOpen2(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12}>\r\n        {!isStudent && i === 0 && (\r\n          <React.Fragment>\r\n            <Alert\r\n              severity=\"warning\"\r\n              style={{ marginTop: \"0\", marginBottom: \"1.5rem\" }}\r\n            >\r\n              Ujian hanya tersedia untuk siswa\r\n            </Alert>{\" \"}\r\n          </React.Fragment>\r\n        )}\r\n        {isTeacher && (\r\n          <React.Fragment>\r\n            <Link to={`/guru/ujian/${title}/${id}`}>\r\n              <EditIcon\r\n                style={{\r\n                  color: \"green\",\r\n                  padding: \"1rem\",\r\n                  cursor: \"pointer\",\r\n                  backgroundColor: color.white,\r\n                }}\r\n              />\r\n            </Link>\r\n            <DeleteIcon\r\n              style={{\r\n                color: \"#dc3545\",\r\n                padding: \"1rem\",\r\n                cursor: \"pointer\",\r\n                backgroundColor: color.white,\r\n              }}\r\n              onClick={(e) => {\r\n                handleClickOpen(e, \"delete\");\r\n              }}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </Grid>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={4} md={2}>\r\n          <span className={classes.icon}> {icon}</span>\r\n        </Grid>\r\n        <Grid item xs={8} md={10}>\r\n          {isLink ? (\r\n            <React.Fragment>\r\n              {isStudent ? (\r\n                <Link to={`/mata-pelajaran/${title}/${id}`}>\r\n                  <Typography variant=\"h6\" component=\"p\">\r\n                    {title}a\r\n                  </Typography>\r\n                </Link>\r\n              ) : (\r\n                <React.Fragment>\r\n                  <Typography variant=\"h6\" component=\"p\">\r\n                    {title}\r\n                  </Typography>\r\n                </React.Fragment>\r\n              )}\r\n            </React.Fragment>\r\n          ) : (\r\n            <Link to={`/mata-pelajaran/${title}/${id}`}>\r\n              <Typography variant=\"h6\" component=\"p\">\r\n                {title}a\r\n              </Typography>\r\n            </Link>\r\n          )}\r\n\r\n          <Typography\r\n            variant=\"body1\"\r\n            component=\"p\"\r\n            className={classes.description}\r\n          >\r\n            {description}\r\n          </Typography>\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                Apakah anda yakin ingin mengikuti ujian?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={(e) => {\r\n                  handleClose(e, \"a\");\r\n                }}\r\n                color=\"primary\"\r\n                style={{ backgroundColor: \"#28a745\", color: \"#ffffff\" }}\r\n              >\r\n                Ya\r\n              </Button>\r\n              <Button\r\n                onClick={handleClose}\r\n                color=\"primary\"\r\n                autoFocus\r\n                style={{ backgroundColor: \"#ffffff\", color: \"#dc3545\" }}\r\n              >\r\n                Tidak\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          <Dialog\r\n            open={open2}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                Apakah anda yakin ingin mengapus {title}?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={handleClose3}\r\n                color=\"primary\"\r\n                style={{ color: \"#dc3545\" }}\r\n              >\r\n                Batal\r\n              </Button>\r\n              <Button\r\n                onClick={handleClose2}\r\n                color=\"primary\"\r\n                autoFocus\r\n                style={{ backgroundColor: \"#dc3545\", color: \"#ffffff\" }}\r\n              >\r\n                Ok\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(Section);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\ExamsStudent\\index.jsx",["319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334"],"import React from \"react\";\r\nimport CKEditor from \"../../atoms/CKEditor\";\r\nimport CreateTemplate from \"../../molecules/CreateTemplate\";\r\nimport TheoryTemplate from \"../../molecules/TheoryTemplate\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport Input from \"../../atoms/Input\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport IsEmpty from \"../../../utils/is-empty\";\r\nimport QuestionExam from \"../../molecules/QuestionExam\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { createExamStudent } from \"../../../redux/actions/examAction\";\r\nimport { clearErrorSucess } from \"../../../redux/actions/announcementAction\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\n\r\nfunction ExamsStudent({ user, createExamStudent, error, sucess }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [suces, setSucess] = React.useState(false);\r\n\r\n  const [role, setRole] = React.useState(\"5\");\r\n  // const [arrLen, setArrLen] = React.useState([...new Array(20)]);\r\n\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const [examStudentAnswer, setExamStudentAnswer] = React.useState([\r\n    ...new Array(5),\r\n  ]);\r\n\r\n  const [exam, setExam] = React.useState([...new Array(5)]);\r\n\r\n  const { ujian, id } = useParams();\r\n\r\n  const handleMenu = (e) => {\r\n    setRole(e.target.value);\r\n    setExam([...new Array(Number(e.target.value))]);\r\n  };\r\n\r\n  const handleExamStudentAnswer = (e, i) => {\r\n    examStudentAnswer[i] = e.target.value;\r\n    setExamStudentAnswer([...examStudentAnswer]);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = (e, id, idx = false) => {\r\n    if (idx === false) {\r\n      exam[id].examName = e.target.value;\r\n      setExam([...exam]);\r\n    } else {\r\n      exam[id].possibilitesAnswer[idx] = e.target.value;\r\n      setExam([...exam]);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // window.scrollTo(0);\r\n    clearErrorSucess();\r\n    axios\r\n      .get(\r\n        `${proxy}/api/exams/view/${id}/${user.isAuthenticated.id}?type=${ujian}`\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setSucess(true);\r\n          setExamStudentAnswer([...res.data.examStudentAnswer]);\r\n          setExam([...res.data.question]);\r\n          setLoading(false);\r\n        } else {\r\n          axios\r\n            .get(`${proxy}/api/exams/view/${id}?type=${ujian}`)\r\n            .then((res) => {\r\n              setExamStudentAnswer([...res.data.examStudentAnswer]);\r\n              setExam([...res.data.question]);\r\n              setLoading(false);\r\n            });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const handleSubmit = () => {\r\n    setOpen(false);\r\n\r\n    createExamStudent({\r\n      userId: user.user.id,\r\n      majorId: id,\r\n      question: exam,\r\n      type: ujian,\r\n      examStudentAnswer,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <CreateTemplate title={`${ujian}`}>\r\n      <div\r\n        style={{\r\n          paddingBottom: \"2rem\",\r\n          borderBottom: `0.05px solid #bdbdbd`,\r\n        }}\r\n      ></div>\r\n      <div style={{ paddingTop: \"1rem\" }}></div>\r\n      {!loading &&\r\n        exam.map((exam, i) => (\r\n          <QuestionExam\r\n            i={i + 1}\r\n            title={exam.examName}\r\n            aAnswer={exam.possibilitesAnswer[0]}\r\n            bAnswer={exam.possibilitesAnswer[1]}\r\n            cAnswer={exam.possibilitesAnswer[2]}\r\n            dAnswer={exam.possibilitesAnswer[3]}\r\n            handleChange={handleExamStudentAnswer}\r\n            value={examStudentAnswer[i]}\r\n            answer={examStudentAnswer[i]}\r\n          />\r\n        ))}\r\n      {sucess && <Alert>Berhasil dikirim</Alert>}\r\n      {!isEmpty(error) && (\r\n        <Alert severity=\"error\">{error.examStudentAnswer}</Alert>\r\n      )}\r\n      {suces ? (\r\n        <Alert>Anda telah mengikuti Ujian</Alert>\r\n      ) : (\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12} md={6}>\r\n            {\" \"}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n              style={{ marginTop: \"1.5rem\" }}\r\n              fullWidth\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Apakah anda yakin ingin submit?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            color=\"primary\"\r\n            style={{ backgroundColor: \"#28a745\", color: \"#ffffff\" }}\r\n          >\r\n            Ya\r\n          </Button>\r\n          <Button\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n            autoFocus\r\n            style={{ backgroundColor: \"#ffffff\", color: \"#dc3545\" }}\r\n          >\r\n            Tidak\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </CreateTemplate>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  error: state.error,\r\n  sucess: state.sucess,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createExamStudent })(ExamsStudent);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\molecules\\QuestionExam\\index.jsx",["335","336"],"import React from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\n\r\nfunction QuestionExam({\r\n  i,\r\n  title,\r\n  aAnswer,\r\n  bAnswer,\r\n  cAnswer,\r\n  dAnswer,\r\n  handleChange,\r\n  value,\r\n  answer,\r\n}) {\r\n  const useStyles = makeStyles({\r\n    root: { padding: \"1rem\" },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container className={classes.root}>\r\n        <Grid item xs={0.5}>\r\n          <Typography\r\n            variant=\"body1\"\r\n            component=\"p\"\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            {i} .{\" \"}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={11}>\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            {title}\r\n          </Typography>\r\n        </Grid>\r\n        <FormLabel component=\"legend\" style={{ marginTop: \"2rem\" }}></FormLabel>\r\n        <RadioGroup\r\n          value={value}\r\n          onChange={(e) => {\r\n            handleChange(e, i - 1);\r\n          }}\r\n        >\r\n          <FormControlLabel\r\n            value=\"a\"\r\n            control={<Radio checked={answer === \"a\"} />}\r\n            label={aAnswer}\r\n          />\r\n          <FormControlLabel\r\n            value=\"b\"\r\n            control={<Radio checked={answer === \"b\"} />}\r\n            label={bAnswer}\r\n          />\r\n          <FormControlLabel\r\n            value=\"c\"\r\n            control={<Radio checked={answer === \"c\"} />}\r\n            label={cAnswer}\r\n          />\r\n          <FormControlLabel\r\n            value=\"d\"\r\n            control={<Radio checked={answer === \"d\"} />}\r\n            label={dAnswer}\r\n          />\r\n        </RadioGroup>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionExam;\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\redux\\actions\\examAction.js",["337"],"import axios from \"axios\";\r\nimport { CREATE_EXAM_STUDENT, SET_SUCESS, GET_ERRORS } from \".\";\r\nimport proxy from \"../../utils/proxy\";\r\n\r\nexport const createExam = (exams) => (dispatch) => {\r\n  axios\r\n    .post(`${proxy}/api/exams/create?types=${exams.type}`, exams)\r\n    .then(() => {\r\n      dispatch({ type: GET_ERRORS, payload: {} });\r\n      dispatch({ type: SET_SUCESS, payload: true });\r\n      setTimeout(() => {\r\n        window.location.href = \"/dashboard\";\r\n      }, 1000);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: SET_SUCESS, payload: false });\r\n      dispatch({ type: GET_ERRORS, payload: err.response.data });\r\n    });\r\n};\r\n\r\nexport const createExamStudent = (exams) => (dispatch) => {\r\n  axios\r\n    .post(`${proxy}/api/exams/create/user`, exams)\r\n    .then(() => {\r\n      dispatch({ type: GET_ERRORS, payload: {} });\r\n      dispatch({ type: SET_SUCESS, payload: true });\r\n      setTimeout(() => {\r\n        window.location.href = \"/dashboard\";\r\n      }, 1000);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: SET_SUCESS, payload: false });\r\n      dispatch({ type: GET_ERRORS, payload: err.response.data });\r\n    });\r\n};\r\n\r\n// export const updateExam = (id) => (dispatch) => {\r\n//   axios\r\n//     .post(`${proxy}/api/exams/delete/${id}` )\r\n//     .then(() => {\r\n//       dispatch({ type: GET_ERRORS, payload: {} });\r\n//       dispatch({ type: SET_SUCESS, payload: true });\r\n//     })\r\n//     .catch((err) => {\r\n//       dispatch({ type: SET_SUCESS, payload: false });\r\n//       dispatch({ type: GET_ERRORS, payload: err.response.data });\r\n//     });\r\n// };\r\n\r\nexport const deleteExam = (id, type) => (dispatch) => {\r\n  axios\r\n    .post(`${proxy}/api/exams/delete/${id}/${type}`)\r\n    .then(() => {\r\n      dispatch({ type: GET_ERRORS, payload: {} });\r\n      dispatch({ type: SET_SUCESS, payload: true });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: SET_SUCESS, payload: false });\r\n      dispatch({ type: GET_ERRORS, payload: err.response.data });\r\n    });\r\n};\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\atoms\\TheorySection\\index.jsx",["338","339","340"],"import React from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport color from \"../../../utils/color\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport axios from \"axios\";\r\n\r\nfunction TheorySection({\r\n  description,\r\n  icon,\r\n  title,\r\n  isLink,\r\n  id,\r\n  isStudent,\r\n  majorName,\r\n  children,\r\n  i,\r\n  handleDelete,\r\n  isTeacher,\r\n}) {\r\n  const useStyles = makeStyles({\r\n    icon: {\r\n      width: \"100%\",\r\n    },\r\n    link: {\r\n      cursor: \"pointer\",\r\n    },\r\n    description: {\r\n      color: \"#424242\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [open2, setOpen2] = React.useState(false);\r\n\r\n  const handleClickOpen = (e, isDelete) => {\r\n    if (isDelete === \"delete\") {\r\n      setOpen2(true);\r\n    } else {\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen2(false);\r\n  };\r\n\r\n  const handleClose2 = (e) => {\r\n    handleDelete(e, i, id);\r\n    setOpen2(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12}>\r\n        {!isTeacher && <div style={{ marginTop: \"1.5rem\" }}></div>}\r\n        {isTeacher && (\r\n          <React.Fragment>\r\n            {\" \"}\r\n            <Link to={`/guru/materi/${i}/${id}`}>\r\n              <EditIcon\r\n                style={{\r\n                  color: \"green\",\r\n                  padding: \"1rem\",\r\n                  cursor: \"pointer\",\r\n                  backgroundColor: color.white,\r\n                }}\r\n              />\r\n            </Link>\r\n            <DeleteIcon\r\n              style={{\r\n                color: \"#dc3545\",\r\n                padding: \"1rem\",\r\n                cursor: \"pointer\",\r\n                backgroundColor: color.white,\r\n              }}\r\n              onClick={(e) => {\r\n                handleClickOpen(e, \"delete\");\r\n              }}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </Grid>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={3} md={1}>\r\n          <span className={classes.icon}> {icon}</span>\r\n        </Grid>\r\n        <Grid item xs={9} md={10.5}>\r\n          {isLink ? (\r\n            <React.Fragment>\r\n              {isStudent ? (\r\n                <Typography variant=\"h6\" component=\"p\">\r\n                  {title}\r\n                </Typography>\r\n              ) : (\r\n                <React.Fragment>\r\n                  <Typography variant=\"h6\" component=\"p\">\r\n                    {title}\r\n                  </Typography>\r\n                </React.Fragment>\r\n              )}\r\n            </React.Fragment>\r\n          ) : (\r\n            <Typography variant=\"h6\" component=\"p\">\r\n              {title}\r\n            </Typography>\r\n          )}\r\n\r\n          <Typography\r\n            variant=\"body1\"\r\n            component=\"p\"\r\n            className={classes.description}\r\n          >\r\n            {children}\r\n          </Typography>\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                Apakah anda yakin ingin mengikuti ujian?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={handleClose}\r\n                color=\"primary\"\r\n                style={{ backgroundColor: \"#28a745\", color: \"#ffffff\" }}\r\n              >\r\n                <Link to={`/guru/materi/1/${title}${i}/${id}`}>Ya</Link>\r\n              </Button>\r\n              <Button\r\n                onClick={handleClose}\r\n                color=\"primary\"\r\n                autoFocus\r\n                style={{ backgroundColor: \"#ffffff\", color: \"#dc3545\" }}\r\n              >\r\n                Tidak\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          <Dialog\r\n            open={open2}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                Apakah anda yakin ingin mengapus {title}?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={handleClose}\r\n                color=\"primary\"\r\n                style={{ color: \"#dc3545\" }}\r\n              >\r\n                Batal\r\n              </Button>\r\n              <Button\r\n                onClick={handleClose2}\r\n                color=\"primary\"\r\n                autoFocus\r\n                style={{ backgroundColor: \"#dc3545\", color: \"#ffffff\" }}\r\n              >\r\n                Ok\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TheorySection;\r\n",["341","342"],"E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Profile\\index.jsx",["343","344"],"import React from \"react\";\r\nimport { Grid, Typography, Avatar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserById } from \"../../../redux/actions/userAction\";\r\nimport { isEmpty } from \"../../../utils/is-empty\";\r\n\r\nfunction Profile({ user, getUserById }) {\r\n  React.useEffect(() => {\r\n    getUserById(user.isAuthenticated.id);\r\n  }, []);\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      padding: \"4rem 0rem \",\r\n      boxShadow: \"0 .5rem 1rem rgba(0,0,0,.15)\",\r\n    },\r\n    name: {\r\n      fontWeight: 800,\r\n    },\r\n    clas: {\r\n      marginTop: \"2rem\",\r\n      fontSize: \"1.5rem \",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {Object.keys(user.userData).length > 1 && (\r\n        <Grid container justify=\"center\" spacing={6}>\r\n          <Grid item xs={2}>\r\n            <Avatar style={{ width: \"100%\", height: 160 }}></Avatar>\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              component=\"h2\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              {user.userData.name}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              style={{\r\n                marginTop: \"0.75rem\",\r\n                fontSize: \"1.1rem\",\r\n                color: \"#757575\",\r\n              }}\r\n            >\r\n              Kelas: {user.userData.kelas.kelas}{\" \"}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              style={{\r\n                marginTop: \"0.75rem\",\r\n                fontSize: \"1.1rem\",\r\n                color: \"#757575\",\r\n              }}\r\n            >\r\n              Umur: {user.userData.age}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              classes={classes.clas}\r\n            ></Typography>\r\n            <Typography\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              style={{\r\n                marginTop: \"0.75rem\",\r\n                fontSize: \"1.1rem\",\r\n                color: \"#757575\",\r\n              }}\r\n            >\r\n              Kota: {user.userData.address}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              style={{\r\n                marginTop: \"0.75rem\",\r\n                fontSize: \"1.1rem\",\r\n                color: \"#757575\",\r\n              }}\r\n            >\r\n              Agama: {user.userData.religion}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserById })(Profile);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\RecapitulationValue\\index.jsx",["345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport color from \"../../../utils/color\";\r\nimport dateformat from \"dateformat\";\r\nimport Badge from \"../../atoms/Badge\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  blue: {\r\n    backgroundColor: \"#3f51b5\",\r\n    padding: \"0.5rem 1rem\",\r\n    color: \"#ffffff\",\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n];\r\n\r\nfunction BasicTable({ user, major }) {\r\n  var dateFormat = require(\"dateformat\");\r\n  dateFormat.i18n = {\r\n    dayNames: [\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum'at\",\r\n      \"Sabtu\",\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum;at\",\r\n      \"Sabtu\",\r\n    ],\r\n    monthNames: [\r\n      \"Junuari\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n      \"Januari\",\r\n      \"Februari\",\r\n      \"Maret\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"Desember\",\r\n    ],\r\n    timeNames: [\"a\", \"p\", \"am\", \"pm\", \"A\", \"P\", \"AM\", \"PM\"],\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const { ujian, id } = useParams();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [recapitulation, setRecapitulation] = React.useState([]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [presents, setPresents] = React.useState({\r\n    status: [],\r\n  });\r\n\r\n  const [present, setPresent] = React.useState({\r\n    userId: \"\",\r\n    majorId: \"\",\r\n    status: \"hadir\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    present[\"status\"] = event.target.value;\r\n    setPresent({ ...present });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setOpen(false);\r\n\r\n    axios\r\n      .post(`${proxy}/api/presents/create`, present)\r\n      .then((res) => {\r\n        setPresents({ ...res.data });\r\n      })\r\n      .catch((err) => console.log(err.response.data));\r\n  };\r\n\r\n  const [undoneArray, setUndoneArray] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    present[\"userId\"] = user.user.id;\r\n    present[\"majorId\"] = id;\r\n    setPresent({ ...present });\r\n\r\n    axios\r\n      .get(`${proxy}/api/exams/view/recapitulation/${id}?type=${ujian}`)\r\n      .then((res) => {\r\n        setRecapitulation([...res.data]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [id, ujian]);\r\n\r\n  console.log(recapitulation);\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginTop: \"3rem\" }}>\r\n      <Table\r\n        className={classes.table}\r\n        aria-label=\"simple table\"\r\n        style={{ marginTop: \"2rem\" }}\r\n      >\r\n        <TableHead style={{ backgroundColor: color.primary }}>\r\n          <TableRow>\r\n            <TableCell style={{ color: color.white }}>Siswa</TableCell>\r\n            <TableCell style={{ color: color.white }}>Nilai</TableCell>\r\n            <TableCell style={{ color: color.white }}>Mata Pelajaran</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {!isEmpty(recapitulation) &&\r\n            recapitulation.map((recapitulatio) => (\r\n              <TableRow key={recapitulatio}>\r\n                <TableCell>\r\n                  {\" \"}\r\n                  <p>{recapitulatio.userId.name}</p>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {recapitulatio.result > 70 ? (\r\n                    <TableCell\r\n                      style={{\r\n                        backgroundColor: \"green\",\r\n                        padding: \"0.5rem 1rem\",\r\n                        color: \"#ffffff\",\r\n                        borderRadius: \"0.5rem\",\r\n                      }}\r\n                    >\r\n                      {recapitulatio.result}\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell\r\n                      style={{\r\n                        backgroundColor: \"#dc3545\",\r\n                        padding: \"0.5rem 1rem\",\r\n                        color: \"#ffffff\",\r\n                        borderRadius: \"0.5rem\",\r\n                      }}\r\n                    >\r\n                      {recapitulatio.result}\r\n                    </TableCell>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell>{recapitulatio.majorId.majorName}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BasicTable);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\Recapitulation\\index.jsx",["371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport color from \"../../../utils/color\";\r\nimport dateformat from \"dateformat\";\r\nimport Badge from \"../../atoms/Badge\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  blue: {\r\n    backgroundColor: \"#3f51b5\",\r\n    padding: \"0.5rem 1rem\",\r\n    color: \"#ffffff\",\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n];\r\n\r\nfunction BasicTable({ id, user, major }) {\r\n  var dateFormat = require(\"dateformat\");\r\n  dateFormat.i18n = {\r\n    dayNames: [\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum'at\",\r\n      \"Sabtu\",\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum;at\",\r\n      \"Sabtu\",\r\n    ],\r\n    monthNames: [\r\n      \"Junuari\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n      \"Januari\",\r\n      \"Februari\",\r\n      \"Maret\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"Desember\",\r\n    ],\r\n    timeNames: [\"a\", \"p\", \"am\", \"pm\", \"A\", \"P\", \"AM\", \"PM\"],\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [recapitulation, setRecapitulation] = React.useState([]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [presents, setPresents] = React.useState({\r\n    status: [],\r\n  });\r\n\r\n  const [present, setPresent] = React.useState({\r\n    userId: \"\",\r\n    majorId: \"\",\r\n    status: \"hadir\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    present[\"status\"] = event.target.value;\r\n    setPresent({ ...present });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setOpen(false);\r\n\r\n    axios\r\n      .post(`${proxy}/api/presents/create`, present)\r\n      .then((res) => {\r\n        setPresents({ ...res.data });\r\n      })\r\n      .catch((err) => console.log(err.response.data));\r\n  };\r\n\r\n  const [undoneArray, setUndoneArray] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    present[\"userId\"] = user.user.id;\r\n    present[\"majorId\"] = id;\r\n    setPresent({ ...present });\r\n\r\n    axios\r\n      .get(`${proxy}/api/users/view`)\r\n      .then((res) => {\r\n        setRecapitulation([...res.data]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  console.log(recapitulation);\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginTop: \"3rem\" }}>\r\n      <Alert severity=\"warning\">\r\n        Dapat mengikuti ujian ketika kehadiran lebih dari 8\r\n      </Alert>\r\n      <Table\r\n        className={classes.table}\r\n        aria-label=\"simple table\"\r\n        style={{ marginTop: \"2rem\" }}\r\n      >\r\n        <TableHead style={{ backgroundColor: color.primary }}>\r\n          <TableRow>\r\n            <TableCell style={{ color: color.white }}>Siswa</TableCell>\r\n            <TableCell style={{ color: color.white }}>\r\n              Total Kehadiran\r\n            </TableCell>\r\n            <TableCell style={{ color: color.white }}>Mata Pelajaran</TableCell>\r\n            <TableCell style={{ color: color.white }}>\r\n              Dapat mengikuti ujian\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {!isEmpty(recapitulation) &&\r\n            recapitulation.map((recapitulatio) => (\r\n              <TableRow key={recapitulatio}>\r\n                <TableCell>\r\n                  {\" \"}\r\n                  <p>{recapitulatio.userId.name}</p>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <p>\r\n                    <p>{recapitulatio.status.length} / 14</p>\r\n                  </p>\r\n                </TableCell>\r\n                <TableCell>{recapitulatio.majorId.majorName}</TableCell>\r\n                <TableCell>\r\n                  <p>\r\n                    {recapitulatio.status.length > 7 ? (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: \"#dc3545\",\r\n                          padding: \"0.5rem 1rem\",\r\n                          color: \"green\",\r\n                          borderRadius: \"0.5rem\",\r\n                        }}\r\n                      >\r\n                        Diizinkan\r\n                      </span>\r\n                    ) : (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: \"#dc3545\",\r\n                          padding: \"0.5rem 1rem\",\r\n                          color: \"#ffffff\",\r\n                          borderRadius: \"0.5rem\",\r\n                        }}\r\n                      >\r\n                        Tidak\r\n                      </span>\r\n                    )}\r\n                  </p>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BasicTable);\r\n","E:\\Web\\JS\\React\\jarpis\\client\\src\\components\\pages\\RecapitulationStudent\\index.jsx",["396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport proxy from \"../../../utils/proxy\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport color from \"../../../utils/color\";\r\nimport dateformat from \"dateformat\";\r\nimport Badge from \"../../atoms/Badge\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  blue: {\r\n    backgroundColor: \"#3f51b5\",\r\n    padding: \"0.5rem 1rem\",\r\n    color: \"#ffffff\",\r\n    borderRadius: \"0.5rem\",\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n];\r\n\r\nfunction BasicTable({ user, major }) {\r\n  var dateFormat = require(\"dateformat\");\r\n  dateFormat.i18n = {\r\n    dayNames: [\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum'at\",\r\n      \"Sabtu\",\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jum;at\",\r\n      \"Sabtu\",\r\n    ],\r\n    monthNames: [\r\n      \"Junuari\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n      \"Januari\",\r\n      \"Februari\",\r\n      \"Maret\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"Desember\",\r\n    ],\r\n    timeNames: [\"a\", \"p\", \"am\", \"pm\", \"A\", \"P\", \"AM\", \"PM\"],\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [recapitulation, setRecapitulation] = React.useState([]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [presents, setPresents] = React.useState({\r\n    status: [],\r\n  });\r\n\r\n  const [present, setPresent] = React.useState({\r\n    userId: \"\",\r\n    majorId: \"\",\r\n    status: \"hadir\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    present[\"status\"] = event.target.value;\r\n    setPresent({ ...present });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setOpen(false);\r\n\r\n    axios\r\n      .post(`${proxy}/api/presents/create`, present)\r\n      .then((res) => {\r\n        setPresents({ ...res.data });\r\n      })\r\n      .catch((err) => console.log(err.response.data));\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // present[\"userId\"] = user.user.id;\r\n    // present[\"majorId\"] = id;\r\n    // setPresent({ ...present });\r\n\r\n    axios\r\n      .get(`${proxy}/api/exams/view/recapitulations/${user.isAuthenticated.id}`)\r\n      .then((res) => {\r\n        setRecapitulation([...res.data]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  console.log(recapitulation);\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginTop: \"3rem\" }}>\r\n      <Table\r\n        className={classes.table}\r\n        aria-label=\"simple table\"\r\n        style={{ marginTop: \"2rem\" }}\r\n      >\r\n        <TableHead style={{ backgroundColor: color.primary }}>\r\n          <TableRow>\r\n            <TableCell style={{ color: color.white }}>Siswa</TableCell>\r\n            <TableCell style={{ color: color.white }}>Nilai</TableCell>\r\n            <TableCell style={{ color: color.white }}>Mata Pelajaran</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {!isEmpty(recapitulation) &&\r\n            recapitulation.map((recapitulatio) => (\r\n              <TableRow key={recapitulatio}>\r\n                <TableCell>\r\n                  {\" \"}\r\n                  <p>{recapitulatio.userId.name}</p>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {recapitulatio.result > 70 ? (\r\n                    <TableCell\r\n                      style={{\r\n                        backgroundColor: \"green\",\r\n                        padding: \"0.5rem 1rem\",\r\n                        color: \"#ffffff\",\r\n                        borderRadius: \"0.5rem\",\r\n                      }}\r\n                    >\r\n                      {recapitulatio.result}\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell\r\n                      style={{\r\n                        backgroundColor: \"#dc3545\",\r\n                        padding: \"0.5rem 1rem\",\r\n                        color: \"#ffffff\",\r\n                        borderRadius: \"0.5rem\",\r\n                      }}\r\n                    >\r\n                      {recapitulatio.result}\r\n                    </TableCell>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell>{recapitulatio.majorId.majorName}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BasicTable);\r\n",{"ruleId":"421","replacedBy":"422"},{"ruleId":"423","replacedBy":"424"},{"ruleId":"425","severity":1,"message":"426","line":22,"column":8,"nodeType":"427","messageId":"428","endLine":22,"endColumn":14},{"ruleId":"425","severity":1,"message":"429","line":9,"column":8,"nodeType":"427","messageId":"428","endLine":9,"endColumn":14},{"ruleId":"425","severity":1,"message":"430","line":10,"column":8,"nodeType":"427","messageId":"428","endLine":10,"endColumn":24},{"ruleId":"425","severity":1,"message":"431","line":15,"column":3,"nodeType":"427","messageId":"428","endLine":15,"endColumn":7},{"ruleId":"425","severity":1,"message":"432","line":16,"column":3,"nodeType":"427","messageId":"428","endLine":16,"endColumn":6},{"ruleId":"425","severity":1,"message":"433","line":18,"column":3,"nodeType":"427","messageId":"428","endLine":18,"endColumn":12},{"ruleId":"425","severity":1,"message":"434","line":19,"column":3,"nodeType":"427","messageId":"428","endLine":19,"endColumn":9},{"ruleId":"425","severity":1,"message":"435","line":32,"column":8,"nodeType":"427","messageId":"428","endLine":32,"endColumn":29},{"ruleId":"425","severity":1,"message":"436","line":95,"column":10,"nodeType":"427","messageId":"428","endLine":95,"endColumn":17},{"ruleId":"425","severity":1,"message":"437","line":98,"column":24,"nodeType":"427","messageId":"428","endLine":98,"endColumn":39},{"ruleId":"425","severity":1,"message":"438","line":100,"column":18,"nodeType":"427","messageId":"428","endLine":100,"endColumn":27},{"ruleId":"425","severity":1,"message":"439","line":118,"column":10,"nodeType":"427","messageId":"428","endLine":118,"endColumn":18},{"ruleId":"425","severity":1,"message":"440","line":118,"column":20,"nodeType":"427","messageId":"428","endLine":118,"endColumn":31},{"ruleId":"425","severity":1,"message":"441","line":126,"column":10,"nodeType":"427","messageId":"428","endLine":126,"endColumn":18},{"ruleId":"425","severity":1,"message":"442","line":126,"column":20,"nodeType":"427","messageId":"428","endLine":126,"endColumn":31},{"ruleId":"443","severity":1,"message":"444","line":179,"column":6,"nodeType":"445","endLine":179,"endColumn":33,"suggestions":"446"},{"ruleId":"425","severity":1,"message":"431","line":2,"column":10,"nodeType":"427","messageId":"428","endLine":2,"endColumn":14},{"ruleId":"443","severity":1,"message":"447","line":55,"column":6,"nodeType":"445","endLine":55,"endColumn":8,"suggestions":"448"},{"ruleId":"449","severity":1,"message":"450","line":1,"column":1,"nodeType":"451","endLine":7,"endColumn":3},{"ruleId":"449","severity":1,"message":"450","line":1,"column":1,"nodeType":"451","endLine":3,"endColumn":3},{"ruleId":"452","severity":1,"message":"453","line":32,"column":31,"nodeType":"454","messageId":"455","endLine":32,"endColumn":32},{"ruleId":"452","severity":1,"message":"453","line":36,"column":21,"nodeType":"454","messageId":"455","endLine":36,"endColumn":22},{"ruleId":"443","severity":1,"message":"456","line":25,"column":6,"nodeType":"445","endLine":25,"endColumn":8,"suggestions":"457"},{"ruleId":"425","severity":1,"message":"433","line":3,"column":10,"nodeType":"427","messageId":"428","endLine":3,"endColumn":19},{"ruleId":"425","severity":1,"message":"458","line":7,"column":9,"nodeType":"427","messageId":"428","endLine":7,"endColumn":18},{"ruleId":"443","severity":1,"message":"459","line":10,"column":6,"nodeType":"445","endLine":10,"endColumn":8,"suggestions":"460"},{"ruleId":"425","severity":1,"message":"461","line":6,"column":8,"nodeType":"427","messageId":"428","endLine":6,"endColumn":19},{"ruleId":"425","severity":1,"message":"462","line":15,"column":10,"nodeType":"427","messageId":"428","endLine":15,"endColumn":19},{"ruleId":"425","severity":1,"message":"431","line":2,"column":10,"nodeType":"427","messageId":"428","endLine":2,"endColumn":14},{"ruleId":"425","severity":1,"message":"463","line":7,"column":8,"nodeType":"427","messageId":"428","endLine":7,"endColumn":23},{"ruleId":"425","severity":1,"message":"464","line":9,"column":8,"nodeType":"427","messageId":"428","endLine":9,"endColumn":13},{"ruleId":"449","severity":1,"message":"465","line":10,"column":1,"nodeType":"451","endLine":31,"endColumn":2},{"ruleId":"449","severity":1,"message":"465","line":5,"column":1,"nodeType":"451","endLine":12,"endColumn":2},{"ruleId":"425","severity":1,"message":"466","line":28,"column":9,"nodeType":"427","messageId":"428","endLine":28,"endColumn":22},{"ruleId":"425","severity":1,"message":"467","line":13,"column":8,"nodeType":"427","messageId":"428","endLine":13,"endColumn":18},{"ruleId":"425","severity":1,"message":"468","line":14,"column":8,"nodeType":"427","messageId":"428","endLine":14,"endColumn":16},{"ruleId":"425","severity":1,"message":"469","line":16,"column":8,"nodeType":"427","messageId":"428","endLine":16,"endColumn":14},{"ruleId":"425","severity":1,"message":"470","line":23,"column":8,"nodeType":"427","messageId":"428","endLine":23,"endColumn":22},{"ruleId":"425","severity":1,"message":"471","line":136,"column":9,"nodeType":"427","messageId":"428","endLine":136,"endColumn":17},{"ruleId":"443","severity":1,"message":"472","line":146,"column":6,"nodeType":"445","endLine":146,"endColumn":8,"suggestions":"473"},{"ruleId":"443","severity":1,"message":"474","line":74,"column":6,"nodeType":"445","endLine":74,"endColumn":8,"suggestions":"475"},{"ruleId":"449","severity":1,"message":"465","line":7,"column":1,"nodeType":"451","endLine":17,"endColumn":2},{"ruleId":"449","severity":1,"message":"465","line":5,"column":1,"nodeType":"451","endLine":12,"endColumn":2},{"ruleId":"425","severity":1,"message":"476","line":2,"column":28,"nodeType":"427","messageId":"428","endLine":2,"endColumn":34},{"ruleId":"425","severity":1,"message":"477","line":3,"column":10,"nodeType":"427","messageId":"428","endLine":3,"endColumn":15},{"ruleId":"425","severity":1,"message":"478","line":4,"column":8,"nodeType":"427","messageId":"428","endLine":4,"endColumn":13},{"ruleId":"425","severity":1,"message":"479","line":9,"column":8,"nodeType":"427","messageId":"428","endLine":9,"endColumn":15},{"ruleId":"425","severity":1,"message":"480","line":19,"column":9,"nodeType":"427","messageId":"428","endLine":19,"endColumn":21},{"ruleId":"443","severity":1,"message":"481","line":32,"column":6,"nodeType":"445","endLine":32,"endColumn":8,"suggestions":"482"},{"ruleId":"425","severity":1,"message":"483","line":10,"column":10,"nodeType":"427","messageId":"428","endLine":10,"endColumn":14},{"ruleId":"425","severity":1,"message":"484","line":21,"column":8,"nodeType":"427","messageId":"428","endLine":21,"endColumn":17},{"ruleId":"425","severity":1,"message":"485","line":28,"column":8,"nodeType":"427","messageId":"428","endLine":28,"endColumn":18},{"ruleId":"425","severity":1,"message":"486","line":47,"column":7,"nodeType":"427","messageId":"428","endLine":47,"endColumn":11},{"ruleId":"443","severity":1,"message":"487","line":163,"column":6,"nodeType":"445","endLine":163,"endColumn":8,"suggestions":"488"},{"ruleId":"425","severity":1,"message":"489","line":2,"column":8,"nodeType":"427","messageId":"428","endLine":2,"endColumn":16},{"ruleId":"425","severity":1,"message":"490","line":7,"column":8,"nodeType":"427","messageId":"428","endLine":7,"endColumn":13},{"ruleId":"425","severity":1,"message":"491","line":8,"column":8,"nodeType":"427","messageId":"428","endLine":8,"endColumn":18},{"ruleId":"425","severity":1,"message":"430","line":9,"column":8,"nodeType":"427","messageId":"428","endLine":9,"endColumn":24},{"ruleId":"425","severity":1,"message":"492","line":10,"column":8,"nodeType":"427","messageId":"428","endLine":10,"endColumn":18},{"ruleId":"425","severity":1,"message":"493","line":27,"column":17,"nodeType":"427","messageId":"428","endLine":27,"endColumn":25},{"ruleId":"425","severity":1,"message":"489","line":2,"column":8,"nodeType":"427","messageId":"428","endLine":2,"endColumn":16},{"ruleId":"425","severity":1,"message":"484","line":6,"column":8,"nodeType":"427","messageId":"428","endLine":6,"endColumn":17},{"ruleId":"425","severity":1,"message":"492","line":10,"column":8,"nodeType":"427","messageId":"428","endLine":10,"endColumn":18},{"ruleId":"425","severity":1,"message":"494","line":13,"column":8,"nodeType":"427","messageId":"428","endLine":13,"endColumn":22},{"ruleId":"425","severity":1,"message":"495","line":25,"column":10,"nodeType":"427","messageId":"428","endLine":25,"endColumn":14},{"ruleId":"425","severity":1,"message":"496","line":34,"column":9,"nodeType":"427","messageId":"428","endLine":34,"endColumn":19},{"ruleId":"425","severity":1,"message":"497","line":61,"column":9,"nodeType":"427","messageId":"428","endLine":61,"endColumn":19},{"ruleId":"443","severity":1,"message":"498","line":97,"column":6,"nodeType":"445","endLine":97,"endColumn":17,"suggestions":"499"},{"ruleId":"500","severity":1,"message":"501","line":57,"column":11,"nodeType":"454","messageId":"502","endLine":57,"endColumn":13},{"ruleId":"425","severity":1,"message":"489","line":2,"column":8,"nodeType":"427","messageId":"428","endLine":2,"endColumn":16},{"ruleId":"425","severity":1,"message":"503","line":4,"column":8,"nodeType":"427","messageId":"428","endLine":4,"endColumn":22},{"ruleId":"425","severity":1,"message":"484","line":6,"column":8,"nodeType":"427","messageId":"428","endLine":6,"endColumn":17},{"ruleId":"425","severity":1,"message":"490","line":7,"column":8,"nodeType":"427","messageId":"428","endLine":7,"endColumn":13},{"ruleId":"425","severity":1,"message":"491","line":8,"column":8,"nodeType":"427","messageId":"428","endLine":8,"endColumn":18},{"ruleId":"425","severity":1,"message":"430","line":9,"column":8,"nodeType":"427","messageId":"428","endLine":9,"endColumn":24},{"ruleId":"425","severity":1,"message":"492","line":10,"column":8,"nodeType":"427","messageId":"428","endLine":10,"endColumn":18},{"ruleId":"425","severity":1,"message":"494","line":13,"column":8,"nodeType":"427","messageId":"428","endLine":13,"endColumn":22},{"ruleId":"425","severity":1,"message":"478","line":14,"column":8,"nodeType":"427","messageId":"428","endLine":14,"endColumn":13},{"ruleId":"425","severity":1,"message":"504","line":17,"column":8,"nodeType":"427","messageId":"428","endLine":17,"endColumn":15},{"ruleId":"425","severity":1,"message":"461","line":23,"column":8,"nodeType":"427","messageId":"428","endLine":23,"endColumn":19},{"ruleId":"425","severity":1,"message":"471","line":31,"column":9,"nodeType":"427","messageId":"428","endLine":31,"endColumn":17},{"ruleId":"425","severity":1,"message":"495","line":35,"column":10,"nodeType":"427","messageId":"428","endLine":35,"endColumn":14},{"ruleId":"425","severity":1,"message":"496","line":48,"column":9,"nodeType":"427","messageId":"428","endLine":48,"endColumn":19},{"ruleId":"425","severity":1,"message":"480","line":68,"column":9,"nodeType":"427","messageId":"428","endLine":68,"endColumn":21},{"ruleId":"443","severity":1,"message":"505","line":102,"column":6,"nodeType":"445","endLine":102,"endColumn":8,"suggestions":"506"},{"ruleId":"425","severity":1,"message":"507","line":7,"column":8,"nodeType":"427","messageId":"428","endLine":7,"endColumn":19},{"ruleId":"425","severity":1,"message":"508","line":9,"column":8,"nodeType":"427","messageId":"428","endLine":9,"endColumn":17},{"ruleId":"425","severity":1,"message":"509","line":2,"column":10,"nodeType":"427","messageId":"428","endLine":2,"endColumn":29},{"ruleId":"425","severity":1,"message":"461","line":7,"column":8,"nodeType":"427","messageId":"428","endLine":7,"endColumn":19},{"ruleId":"425","severity":1,"message":"494","line":14,"column":8,"nodeType":"427","messageId":"428","endLine":14,"endColumn":22},{"ruleId":"425","severity":1,"message":"510","line":15,"column":8,"nodeType":"427","messageId":"428","endLine":15,"endColumn":13},{"ruleId":"421","replacedBy":"511"},{"ruleId":"423","replacedBy":"512"},{"ruleId":"425","severity":1,"message":"479","line":6,"column":10,"nodeType":"427","messageId":"428","endLine":6,"endColumn":17},{"ruleId":"443","severity":1,"message":"513","line":11,"column":6,"nodeType":"445","endLine":11,"endColumn":8,"suggestions":"514"},{"ruleId":"425","severity":1,"message":"483","line":10,"column":10,"nodeType":"427","messageId":"428","endLine":10,"endColumn":14},{"ruleId":"425","severity":1,"message":"476","line":11,"column":8,"nodeType":"427","messageId":"428","endLine":11,"endColumn":14},{"ruleId":"425","severity":1,"message":"515","line":12,"column":8,"nodeType":"427","messageId":"428","endLine":12,"endColumn":14},{"ruleId":"425","severity":1,"message":"516","line":13,"column":8,"nodeType":"427","messageId":"428","endLine":13,"endColumn":21},{"ruleId":"425","severity":1,"message":"517","line":14,"column":8,"nodeType":"427","messageId":"428","endLine":14,"endColumn":21},{"ruleId":"425","severity":1,"message":"518","line":15,"column":8,"nodeType":"427","messageId":"428","endLine":15,"endColumn":25},{"ruleId":"425","severity":1,"message":"461","line":16,"column":8,"nodeType":"427","messageId":"428","endLine":16,"endColumn":19},{"ruleId":"425","severity":1,"message":"490","line":17,"column":8,"nodeType":"427","messageId":"428","endLine":17,"endColumn":13},{"ruleId":"425","severity":1,"message":"491","line":18,"column":8,"nodeType":"427","messageId":"428","endLine":18,"endColumn":18},{"ruleId":"425","severity":1,"message":"430","line":19,"column":8,"nodeType":"427","messageId":"428","endLine":19,"endColumn":24},{"ruleId":"425","severity":1,"message":"507","line":20,"column":8,"nodeType":"427","messageId":"428","endLine":20,"endColumn":19},{"ruleId":"425","severity":1,"message":"484","line":21,"column":8,"nodeType":"427","messageId":"428","endLine":21,"endColumn":17},{"ruleId":"425","severity":1,"message":"492","line":22,"column":8,"nodeType":"427","messageId":"428","endLine":22,"endColumn":18},{"ruleId":"425","severity":1,"message":"485","line":28,"column":8,"nodeType":"427","messageId":"428","endLine":28,"endColumn":18},{"ruleId":"425","severity":1,"message":"519","line":29,"column":8,"nodeType":"427","messageId":"428","endLine":29,"endColumn":13},{"ruleId":"425","severity":1,"message":"477","line":30,"column":8,"nodeType":"427","messageId":"428","endLine":30,"endColumn":13},{"ruleId":"425","severity":1,"message":"486","line":49,"column":7,"nodeType":"427","messageId":"428","endLine":49,"endColumn":11},{"ruleId":"425","severity":1,"message":"520","line":109,"column":10,"nodeType":"427","messageId":"428","endLine":109,"endColumn":14},{"ruleId":"425","severity":1,"message":"521","line":113,"column":9,"nodeType":"427","messageId":"428","endLine":113,"endColumn":24},{"ruleId":"425","severity":1,"message":"522","line":117,"column":9,"nodeType":"427","messageId":"428","endLine":117,"endColumn":20},{"ruleId":"425","severity":1,"message":"523","line":121,"column":10,"nodeType":"427","messageId":"428","endLine":121,"endColumn":18},{"ruleId":"425","severity":1,"message":"480","line":131,"column":9,"nodeType":"427","messageId":"428","endLine":131,"endColumn":21},{"ruleId":"425","severity":1,"message":"524","line":136,"column":9,"nodeType":"427","messageId":"428","endLine":136,"endColumn":21},{"ruleId":"425","severity":1,"message":"525","line":148,"column":10,"nodeType":"427","messageId":"428","endLine":148,"endColumn":21},{"ruleId":"425","severity":1,"message":"526","line":148,"column":23,"nodeType":"427","messageId":"428","endLine":148,"endColumn":37},{"ruleId":"443","severity":1,"message":"527","line":161,"column":6,"nodeType":"445","endLine":161,"endColumn":17,"suggestions":"528"},{"ruleId":"425","severity":1,"message":"483","line":10,"column":10,"nodeType":"427","messageId":"428","endLine":10,"endColumn":14},{"ruleId":"425","severity":1,"message":"476","line":11,"column":8,"nodeType":"427","messageId":"428","endLine":11,"endColumn":14},{"ruleId":"425","severity":1,"message":"515","line":12,"column":8,"nodeType":"427","messageId":"428","endLine":12,"endColumn":14},{"ruleId":"425","severity":1,"message":"516","line":13,"column":8,"nodeType":"427","messageId":"428","endLine":13,"endColumn":21},{"ruleId":"425","severity":1,"message":"517","line":14,"column":8,"nodeType":"427","messageId":"428","endLine":14,"endColumn":21},{"ruleId":"425","severity":1,"message":"518","line":15,"column":8,"nodeType":"427","messageId":"428","endLine":15,"endColumn":25},{"ruleId":"425","severity":1,"message":"461","line":16,"column":8,"nodeType":"427","messageId":"428","endLine":16,"endColumn":19},{"ruleId":"425","severity":1,"message":"490","line":17,"column":8,"nodeType":"427","messageId":"428","endLine":17,"endColumn":13},{"ruleId":"425","severity":1,"message":"491","line":18,"column":8,"nodeType":"427","messageId":"428","endLine":18,"endColumn":18},{"ruleId":"425","severity":1,"message":"430","line":19,"column":8,"nodeType":"427","messageId":"428","endLine":19,"endColumn":24},{"ruleId":"425","severity":1,"message":"507","line":20,"column":8,"nodeType":"427","messageId":"428","endLine":20,"endColumn":19},{"ruleId":"425","severity":1,"message":"484","line":21,"column":8,"nodeType":"427","messageId":"428","endLine":21,"endColumn":17},{"ruleId":"425","severity":1,"message":"492","line":22,"column":8,"nodeType":"427","messageId":"428","endLine":22,"endColumn":18},{"ruleId":"425","severity":1,"message":"485","line":28,"column":8,"nodeType":"427","messageId":"428","endLine":28,"endColumn":18},{"ruleId":"425","severity":1,"message":"519","line":29,"column":8,"nodeType":"427","messageId":"428","endLine":29,"endColumn":13},{"ruleId":"425","severity":1,"message":"486","line":48,"column":7,"nodeType":"427","messageId":"428","endLine":48,"endColumn":11},{"ruleId":"425","severity":1,"message":"520","line":106,"column":10,"nodeType":"427","messageId":"428","endLine":106,"endColumn":14},{"ruleId":"425","severity":1,"message":"521","line":110,"column":9,"nodeType":"427","messageId":"428","endLine":110,"endColumn":24},{"ruleId":"425","severity":1,"message":"522","line":114,"column":9,"nodeType":"427","messageId":"428","endLine":114,"endColumn":20},{"ruleId":"425","severity":1,"message":"523","line":118,"column":10,"nodeType":"427","messageId":"428","endLine":118,"endColumn":18},{"ruleId":"425","severity":1,"message":"480","line":128,"column":9,"nodeType":"427","messageId":"428","endLine":128,"endColumn":21},{"ruleId":"425","severity":1,"message":"524","line":133,"column":9,"nodeType":"427","messageId":"428","endLine":133,"endColumn":21},{"ruleId":"425","severity":1,"message":"525","line":145,"column":10,"nodeType":"427","messageId":"428","endLine":145,"endColumn":21},{"ruleId":"425","severity":1,"message":"526","line":145,"column":23,"nodeType":"427","messageId":"428","endLine":145,"endColumn":37},{"ruleId":"443","severity":1,"message":"487","line":158,"column":6,"nodeType":"445","endLine":158,"endColumn":8,"suggestions":"529"},{"ruleId":"425","severity":1,"message":"483","line":10,"column":10,"nodeType":"427","messageId":"428","endLine":10,"endColumn":14},{"ruleId":"425","severity":1,"message":"476","line":11,"column":8,"nodeType":"427","messageId":"428","endLine":11,"endColumn":14},{"ruleId":"425","severity":1,"message":"515","line":12,"column":8,"nodeType":"427","messageId":"428","endLine":12,"endColumn":14},{"ruleId":"425","severity":1,"message":"516","line":13,"column":8,"nodeType":"427","messageId":"428","endLine":13,"endColumn":21},{"ruleId":"425","severity":1,"message":"517","line":14,"column":8,"nodeType":"427","messageId":"428","endLine":14,"endColumn":21},{"ruleId":"425","severity":1,"message":"518","line":15,"column":8,"nodeType":"427","messageId":"428","endLine":15,"endColumn":25},{"ruleId":"425","severity":1,"message":"461","line":16,"column":8,"nodeType":"427","messageId":"428","endLine":16,"endColumn":19},{"ruleId":"425","severity":1,"message":"490","line":17,"column":8,"nodeType":"427","messageId":"428","endLine":17,"endColumn":13},{"ruleId":"425","severity":1,"message":"491","line":18,"column":8,"nodeType":"427","messageId":"428","endLine":18,"endColumn":18},{"ruleId":"425","severity":1,"message":"430","line":19,"column":8,"nodeType":"427","messageId":"428","endLine":19,"endColumn":24},{"ruleId":"425","severity":1,"message":"507","line":20,"column":8,"nodeType":"427","messageId":"428","endLine":20,"endColumn":19},{"ruleId":"425","severity":1,"message":"484","line":21,"column":8,"nodeType":"427","messageId":"428","endLine":21,"endColumn":17},{"ruleId":"425","severity":1,"message":"492","line":22,"column":8,"nodeType":"427","messageId":"428","endLine":22,"endColumn":18},{"ruleId":"425","severity":1,"message":"485","line":28,"column":8,"nodeType":"427","messageId":"428","endLine":28,"endColumn":18},{"ruleId":"425","severity":1,"message":"519","line":29,"column":8,"nodeType":"427","messageId":"428","endLine":29,"endColumn":13},{"ruleId":"425","severity":1,"message":"477","line":30,"column":8,"nodeType":"427","messageId":"428","endLine":30,"endColumn":13},{"ruleId":"425","severity":1,"message":"462","line":31,"column":10,"nodeType":"427","messageId":"428","endLine":31,"endColumn":19},{"ruleId":"425","severity":1,"message":"486","line":49,"column":7,"nodeType":"427","messageId":"428","endLine":49,"endColumn":11},{"ruleId":"425","severity":1,"message":"520","line":107,"column":10,"nodeType":"427","messageId":"428","endLine":107,"endColumn":14},{"ruleId":"425","severity":1,"message":"521","line":111,"column":9,"nodeType":"427","messageId":"428","endLine":111,"endColumn":24},{"ruleId":"425","severity":1,"message":"522","line":115,"column":9,"nodeType":"427","messageId":"428","endLine":115,"endColumn":20},{"ruleId":"425","severity":1,"message":"523","line":119,"column":10,"nodeType":"427","messageId":"428","endLine":119,"endColumn":18},{"ruleId":"425","severity":1,"message":"480","line":129,"column":9,"nodeType":"427","messageId":"428","endLine":129,"endColumn":21},{"ruleId":"425","severity":1,"message":"524","line":134,"column":9,"nodeType":"427","messageId":"428","endLine":134,"endColumn":21},{"ruleId":"443","severity":1,"message":"530","line":157,"column":6,"nodeType":"445","endLine":157,"endColumn":8,"suggestions":"531"},"no-native-reassign",["532"],"no-negated-in-lhs",["533"],"no-unused-vars","'Admins' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'Hidden' is defined but never used.","'SupervisorAccountIcon' is defined but never used.","'theorys' is assigned a value but never used.","'setIsShowTheory' is assigned a value but never used.","'setAdmins' is assigned a value but never used.","'teachers' is assigned a value but never used.","'setTeachers' is assigned a value but never used.","'subTopic' is assigned a value but never used.","'setSubTopic' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'user.isAuthenticated.majorId'. Either include it or remove the dependency array.","ArrayExpression",["534"],"React Hook React.useEffect has missing dependencies: 'history' and 'user.isAuthenticated'. Either include them or remove the dependency array.",["535"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook React.useEffect has missing dependencies: 'user.isAuthenticated.majorId', 'user.isAuthenticated.role', and 'user.user.kelasId'. Either include them or remove the dependency array.",["536"],"'useStyles' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'viewAnnouncement'. Either include it or remove the dependency array. If 'viewAnnouncement' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["537"],"'DialogTitle' is defined but never used.","'useParams' is defined but never used.","'DescriptionIcon' is defined but never used.","'color' is defined but never used.","Unexpected default export of anonymous function","'handleIsMajor' is assigned a value but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'FormHelperText' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'clearErrorSucess'. Either include it or remove the dependency array. If 'clearErrorSucess' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["538"],"React Hook React.useEffect has missing dependencies: 'announcement', 'clearErrorSucess', and 'id'. Either include them or remove the dependency array. If 'clearErrorSucess' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["539"],"'Button' is defined but never used.","'Alert' is defined but never used.","'Input' is defined but never used.","'isEmpty' is defined but never used.","'handleChange' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["540"],"'Link' is defined but never used.","'FormLabel' is defined but never used.","'dateformat' is defined but never used.","'rows' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'id', 'present', and 'user.user.id'. Either include them or remove the dependency array. You can also do a functional update 'setPresent(p => ...)' if you only need 'present' in the 'setPresent' call.",["541"],"'CKEditor' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'Typography' is defined but never used.","'setTipes' is assigned a value but never used.","'AssignmentIcon' is defined but never used.","'role' is assigned a value but never used.","'handleMenu' is assigned a value but never used.","'handleTipe' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'clearErrorSucess' and 'exam'. Either include them or remove the dependency array. If 'clearErrorSucess' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["542"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","'TheoryTemplate' is defined but never used.","'IsEmpty' is defined but never used.","React Hook React.useEffect has missing dependencies: 'id', 'ujian', and 'user.isAuthenticated.id'. Either include them or remove the dependency array.",["543"],"'FormControl' is defined but never used.","'FormGroup' is defined but never used.","'CREATE_EXAM_STUDENT' is defined but never used.","'axios' is defined but never used.",["532"],["533"],"React Hook React.useEffect has missing dependencies: 'getUserById' and 'user.isAuthenticated.id'. Either include them or remove the dependency array. If 'getUserById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["544"],"'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'Badge' is defined but never used.","'open' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'presents' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'undoneArray' is assigned a value but never used.","'setUndoneArray' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'present' and 'user.user.id'. Either include them or remove the dependency array. You can also do a functional update 'setPresent(p => ...)' if you only need 'present' in the 'setPresent' call.",["545"],["546"],"React Hook React.useEffect has a missing dependency: 'user.isAuthenticated.id'. Either include it or remove the dependency array.",["547"],"no-global-assign","no-unsafe-negation",{"desc":"548","fix":"549"},{"desc":"550","fix":"551"},{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},{"desc":"568","fix":"569"},{"desc":"570","fix":"571"},{"desc":"562","fix":"572"},{"desc":"573","fix":"574"},"Update the dependencies array to be: [user.isAuthenticated.majorId, user.isAuthenticated.role]",{"range":"575","text":"576"},"Update the dependencies array to be: [history, user.isAuthenticated]",{"range":"577","text":"578"},"Update the dependencies array to be: [user.isAuthenticated.majorId, user.isAuthenticated.role, user.user.kelasId]",{"range":"579","text":"580"},"Update the dependencies array to be: [viewAnnouncement]",{"range":"581","text":"582"},"Update the dependencies array to be: [clearErrorSucess]",{"range":"583","text":"584"},"Update the dependencies array to be: [announcement, clearErrorSucess, id]",{"range":"585","text":"586"},"Update the dependencies array to be: [id]",{"range":"587","text":"588"},"Update the dependencies array to be: [id, present, user.user.id]",{"range":"589","text":"590"},"Update the dependencies array to be: [clearErrorSucess, exam, id, ujian]",{"range":"591","text":"592"},"Update the dependencies array to be: [id, ujian, user.isAuthenticated.id]",{"range":"593","text":"594"},"Update the dependencies array to be: [getUserById, user.isAuthenticated.id]",{"range":"595","text":"596"},"Update the dependencies array to be: [id, present, ujian, user.user.id]",{"range":"597","text":"598"},{"range":"599","text":"590"},"Update the dependencies array to be: [user.isAuthenticated.id]",{"range":"600","text":"601"},[5020,5047],"[user.isAuthenticated.majorId, user.isAuthenticated.role]",[1404,1406],"[history, user.isAuthenticated]",[735,737],"[user.isAuthenticated.majorId, user.isAuthenticated.role, user.user.kelasId]",[377,379],"[viewAnnouncement]",[4166,4168],"[clearErrorSucess]",[2430,2432],"[announcement, clearErrorSucess, id]",[840,842],"[id]",[4325,4327],"[id, present, user.user.id]",[3176,3187],"[clearErrorSucess, exam, id, ujian]",[3522,3524],"[id, ujian, user.isAuthenticated.id]",[420,422],"[getUserById, user.isAuthenticated.id]",[4305,4316],"[id, present, ujian, user.user.id]",[4187,4189],[4219,4221],"[user.isAuthenticated.id]"]